# -*- coding: utf-8 -*-
import sys, xbmcplugin, xbmcgui, xbmcvfs, xbmcaddon, xbmc, os, json, hashlib, re, math, html
import base64
from urllib.parse import urlparse, quote_plus
from urllib.request import urlopen, Request
import urllib.request, urllib.parse, urllib.error
import urllib.parse
import requests
import importlib
import types
import io
import zipfile
import shutil
import time, datetime
from os.path import *
Versao = "23.50.00"

AddonID = 'plugin.video.GladistonXD'
Addon = xbmcaddon.Addon(AddonID)
AddonName = Addon.getAddonInfo("name")
icon = Addon.getAddonInfo('icon')

addonDir = Addon.getAddonInfo('path')
iconsDir = os.path.join(addonDir, "resources", "images")

addonfolder = Addon.getAddonInfo('path')
cachefolder   = addonfolder + '/resources/'
libDir = os.path.join(addonDir, 'resources', 'lib')
sys.path.insert(0, libDir)

#import common
#addon_data_dir = xbmcvfs.translatePath(Addon.getAddonInfo("profile"))
#cacheDir = os.path.join('addon_data_dir', "cache")
#if not os.path.exists(cacheDir):
#	os.makedirs(cacheDir)

#repeat_opt = xbmcaddon.Addon().getSetting("repeat_opt")
viewmode = xbmcaddon.Addon().getSetting("viewmode")
#upnext = xbmcaddon.Addon().getSetting("upnext")
ffmpeg_opt = xbmcaddon.Addon().getSetting("ffmpeg_opt")
cadulto = Addon.getSetting("cadulto")
cPage = Addon.getSetting("cPage") # dublado redecanais
cPageleg = Addon.getSetting("cPageleg")
cPagenac = Addon.getSetting("cPagenac")
cPagelan = Addon.getSetting("cPagelan")
cPageflix = Addon.getSetting("cPageflix")
cPageser = Addon.getSetting("cPageser")
cPageani = Addon.getSetting("cPageani")
cPagedes = Addon.getSetting("cPagedes")
cPagefo1 = Addon.getSetting("cPagefo1")
cPageMMf = Addon.getSetting("cPageMMf")
cPageGOf = Addon.getSetting("cPageGOf")
cPageFlf = Addon.getSetting("cPageFlf")
cPageQlf = Addon.getSetting("cPageQlf")
cPageBIZ = Addon.getSetting("cPageBIZ")
cPageMEG = Addon.getSetting("cPageMEG")
cPageFHD = Addon.getSetting("cPageFHD")
cPageAS = Addon.getSetting("cPageAS")
cPageVZ = Addon.getSetting("cPageVZ")
cPageMX = Addon.getSetting("cPageMX")
cPagepr1 = Addon.getSetting("cPagepr1")

cPageserQF = Addon.getSetting("cPageserQF")
cPageserSF = Addon.getSetting("cPageserSF")
cPageserVZ = Addon.getSetting("cPageserVZ")
cPageserAS = Addon.getSetting("cPageserAS")
cPageserMX = Addon.getSetting("cPageserMX")
cPageserCM = Addon.getSetting("cPageserCM")
cPageserPR = Addon.getSetting("cPageserPR")
cPageserCMT = Addon.getSetting("cPageserCMT")
cPageserDTS = Addon.getSetting("cPageserDTS")
cPageserDTS1 = Addon.getSetting("cPageserDTS1")
FIXADOS = Addon.getSetting("FIXADOS")
cPageserTR = Addon.getSetting("cPageserTR")

cEPG = Addon.getSetting("cEPG")
cOrdFO = "date" if Addon.getSetting("cOrdFO")=="0" else "title"
cOrdRCF = "date" if Addon.getSetting("cOrdRCF")=="0" else "title"
cOrdRCS = "date" if Addon.getSetting("cOrdRCS")=="0" else "title"
cOrdNCF = Addon.getSetting("cOrdNCF")
cOrdNCS = Addon.getSetting("cOrdNCS")

cPlayD = Addon.getSetting("cPlayD") #play

Cat = Addon.getSetting("Cat")
Catfo = Addon.getSetting("Catfo")
CatMM = Addon.getSetting("CatMM")
CatGO = Addon.getSetting("CatGO")
CatFl = Addon.getSetting("CatFl")
CatBB = Addon.getSetting("CatBB")
CatQ1 = Addon.getSetting("CatQ1")
CatMG = Addon.getSetting("CatMG")
CatHD = Addon.getSetting("CatHD")
CatVZ = Addon.getSetting("CatVZ")
CatAS = Addon.getSetting("CatAS")
CatMX = Addon.getSetting("CatMX")
Catpr = Addon.getSetting("Catpr")


cSIPTV = Addon.getSetting("cSIPTV")

ClistaQUE10=["2024",                                                        "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "ficcao-cientifica",                                                                 "romance",                                                                "documentario",                               "aventura",                           "suspense",                                     "terror"]
ClistaQUE11=["[COLOR yellow][B]Lançamentos[/COLOR][/B]",                   "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]aventura[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
Clista0=["lancamentos",                                                        "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "ficcao-cientifica",                                                                 "romance",                                                                "documentario",                               "aventura",                           "suspense",                                     "terror"]
Clista1=["[COLOR yellow][B]Lançamentos[/COLOR][/B]",                   "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]aventura[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
Clista2=["Sem filtro (Mostrar Todos)",  "acao", "faroeste", "animacao", "aventura", "comedia", "drama", "fantasia", "ficcao-cientifica", "romance", "suspense", "terror"]
Clistafo0=["lancamentos",                                                        "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "ficcao-cientifica",                                                                 "romance",                                                                "documentario",                               "aventura",                           "suspense",                                     "terror"]
Clistafo1=["[COLOR yellow][B]Lançamentos[/COLOR][/B]",                   "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]aventura[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
ClistaMM0=["ultimos","category/lancamentos","category/acao","category/animacao","category/aventura","category/comedia","category/drama","category/fantasia","category/ficcao-cientifica","category/guerra","category/policial","category/romance","category/suspense","category/terror"]
ClistaMM1=["[COLOR red][B]Ultimos Adicionados[/COLOR][/B]","[COLOR red][B]Lançamentos[/COLOR][/B]","[COLOR red][B]Ação[/COLOR][/B]","[COLOR red][B]Animação[/COLOR][/B]","[COLOR red][B]Aventura[/COLOR][/B]","[COLOR red][B]Comédia[/COLOR][/B]","[COLOR red][B]Drama[/COLOR][/B]","[COLOR red][B]Fantasia[/COLOR][/B]","[COLOR red][B]F. Científica[/COLOR][/B]","[COLOR red][B]Guerra[/COLOR][/B]","[COLOR red][B]Policial[/COLOR][/B]","[COLOR red][B]Romance[/COLOR][/B]","[COLOR red][B]Suspense[/COLOR][/B]","[COLOR red][B]Terror[/COLOR][/B]"]
ClistaGO0=["",                                                                  "ano-lancamento/2022",                    "ano-lancamento/2020",            "category/acao",                      "category/animacao",                "category/aventura",                                        "category/comedia",              "category/drama",                                     "category/fantasia",           "category/ficcao-cientifica",                                       "category/documentario",                        "category/faroeste",                               "category/romance",                              "category/suspense",                                        "category/terror", ]
ClistaGO1=["[COLOR deepskyblue][B]Mostrar Todos[/COLOR][/B]",    "[COLOR yellow][B]Lançamentos 2022[/COLOR][/B]", "[COLOR slategray][B]2020[/COLOR][/B]",      "[COLOR red][B]Ação[/COLOR][/B]", "[COLOR lime][B]Animação[/COLOR][/B]", "[COLOR darkorchid][B]Aventura[/COLOR][/B]", "[COLOR hotpink][B]Comédia[/COLOR][/B]",       "[COLOR springgreen][B]Drama[/COLOR][/B]", "[COLOR salmon][B]Fantasia[/COLOR][/B]", "[COLOR paleturquoise][B]Ficção-Científica[/COLOR][/B]","[COLOR crimson][B]Documentário[/COLOR][/B]","[COLOR darkorange][B]Faroeste[/COLOR][/B]","[COLOR deepskyblue][B]Romance[/COLOR][/B]", "[COLOR darkorchid][B]Suspense[/COLOR][/B]",             "[COLOR lightgreen][B]Terror[/COLOR][/B]"]
ClistaFl0=["filmes", "0", "genero/acao", "genero/animacao", "genero/aventura", "genero/comedia", "genero/drama", "genero/ficcao", "genero/romance", "genero/suspense", "genero/terror"]
ClistaFl1=["[COLOR yellow][B]Mostrar Todos[/COLOR][/B]", "[COLOR yellow][B]Lançamentos[/COLOR][/B]", "[COLOR yellow][B]Ação[/COLOR][/B]", "[COLOR yellow][B]Animação[/COLOR][/B]", "[COLOR yellow][B]Aventura[/COLOR][/B]", "[COLOR yellow][B]Comedia[/COLOR][/B]", "[COLOR yellow][B]Drama[/COLOR][/B]", "[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]", "[COLOR yellow][B]Romance[/COLOR][/B]", "[COLOR yellow][B]Suspense[/COLOR][/B]", "[COLOR yellow][B]Terror[/COLOR][/B]"]
#ClistaQUE10=["lancamentoss",                                               "acao",                            "animacao",                                "aventura",                             "comedia",                               "faroeste",                           "documentario",                       "fantasia",                       "drama",                                "ficcao-cientifica",                           "romance",                                                 "historia",                               "misterio",                           "suspense",                                "musica",                                 "terror",                             "thriller"]
#ClistaQUE11=["[COLOR yellow][B]Lançamentos[/COLOR][/B]", "[COLOR yellow][B]Ação[/COLOR][/B]", "[COLOR yellow][B]Animação[/COLOR][/B]", "[COLOR yellow][B]Aventura[/COLOR][/B]",  "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]","[COLOR yellow][B]Documentário[/COLOR][/B]", "[COLOR yellow][B]Fantasia[/COLOR][/B]", "[COLOR yellow][B]Drama[/COLOR][/B]","[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]", "[COLOR yellow][B]Romance[/COLOR][/B]",    "[COLOR yellow][B]História[/COLOR][/B]",  "[COLOR yellow][B]Mistério[/COLOR][/B]", "[COLOR yellow][B]Suspense[/COLOR][/B]", "[COLOR yellow][B]Música[/COLOR][/B]",    "[COLOR yellow][B]Terror[/COLOR][/B]", "[COLOR yellow][B]Thriller[/COLOR][/B]"]
ClistaBIZ10=["0", "acao",                                               "animacao",                                  "comedia",                               "faroeste",                           "policial",                        "fantasia",                                     "drama",                                "ficcao-cientifica",                           "romance",                                                 "documentario",                               "misterio",                           "suspense",                                     "nacionais",                                     "terror"]
ClistaBIZ11=["[COLOR yellow][B]Lançamentos[/COLOR][/B]" , "[COLOR yellow][B]Ação[/COLOR][/B]", "[COLOR yellow][B]Animação[/COLOR][/B]",     "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]","[COLOR yellow][B]Policial[/COLOR][/B]", "[COLOR yellow][B]Fantasia[/COLOR][/B]", "[COLOR yellow][B]Drama[/COLOR][/B]","[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]", "[COLOR yellow][B]Romance[/COLOR][/B]",                       "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]Mistério[/COLOR][/B]", "[COLOR yellow][B]Suspense[/COLOR][/B]","[COLOR yellow][B]Nacionais[/COLOR][/B]",       "[COLOR yellow][B]Terror[/COLOR][/B]"]
ClistaMEG10=["2024",                                                  "Fixados",                                                        "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "ficcao-cientifica",                                                                 "romance",                                                                "documentario",                               "aventura",                           "suspense",                                     "terror"]
ClistaMEG11=["[COLOR yellow][B]Lançamentos[/COLOR][/B]", "[COLOR yellow][B]Lançamentos Fixados[/COLOR][/B]",                   "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]aventura[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
ClistaFHD10=["2024",                                                        "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "ficcao-cientifica",                                                                 "romance",                                                                "documentario",                               "aventura",                           "suspense",                                     "terror"]
ClistaFHD11=["[COLOR yellow][B]Lançamentos[/COLOR][/B]",                   "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]aventura[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
ClistaVZ10=["0",   "all",                                                        "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "romance",                                                                "documentario",                               "misterio",                           "suspense",                                     "terror"]
ClistaVZ11=["[COLOR yellow][B]Lançamentos[/COLOR][/B]", "[COLOR yellow][B]2020[/COLOR][/B]",                   "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]Mistério[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
ClistaAS10=["0", "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "romance",                                                                "documentario",                               "misterio",                           "suspense",                                     "terror"]
ClistaAS11=["[COLOR yellow][B]Lançamentos (Filmes|Séries)[/COLOR][/B]", "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]Mistério[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
ClistaMX10=["filme", "genero/lancamentos", "genero/acao",                       "genero/animacao",                           "genero/comedia",                      "genero/faroeste",                                   "genero/fantasia",                                    "genero/drama",                                                         "genero/romance",                                                                "genero/documentario",                               "genero/misterio",                           "genero/terror"]
ClistaMX11=["[COLOR yellow][B]Todos[/COLOR][/B]", "[COLOR yellow][B]Lançamentos[/COLOR][/B]", "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]Mistério[/COLOR][/B]",          "[COLOR yellow][B]Terror[/COLOR][/B]"]
Clistapr0=["2024",                                                        "acao",                       "animacao",                           "comedia",                      "faroeste",                                   "fantasia",                                    "drama",                                                         "ficcao-cientifica",                                                                 "romance",                                                                "documentario",                               "aventura",                           "suspense",                                     "terror"]
Clistapr1=["[COLOR yellow][B]Lançamentos[/COLOR][/B]",                   "[COLOR yellow][B]Ação[/COLOR][/B]",     "[COLOR yellow][B]Animação[/COLOR][/B]",          "[COLOR yellow][B]Comedia[/COLOR][/B]",  "[COLOR yellow][B]Faroeste[/COLOR][/B]",            "[COLOR yellow][B]Fantasia[/COLOR][/B]",               "[COLOR yellow][B]Drama[/COLOR][/B]",                             "[COLOR yellow][B]Ficção Ciêntifica[/COLOR][/B]",                             "[COLOR yellow][B]Romance[/COLOR][/B]",                                           "[COLOR yellow][B]Documentário[/COLOR][/B]",  "[COLOR yellow][B]aventura[/COLOR][/B]",          "[COLOR yellow][B]Suspense[/COLOR][/B]",                       "[COLOR yellow][B]Terror[/COLOR][/B]"]
def setViewS():
	xbmcplugin.setContent(int(sys.argv[1]), 'tvshows')
	xbmc.executebuiltin("Container.SetViewMode(50)")
def setViewM():
	xbmcplugin.setContent(int(sys.argv[1]), 'movies')
	if viewmode == 'false':
		xbmc.executebuiltin("Container.SetViewMode(50)")
	if viewmode == 'true':
		xbmc.executebuiltin("Container.SetViewMode(53)")
def OpenURL(url, headers={}, user_data={}, cookieJar=None, justCookie=False):
	req = Request(url)
	headers['User-Agent'] = 'Mozilla/5.0 (Windows NT 6.1; rv:11.0) Gecko/20100110 Firefox/11.0'
	for k, v in headers.items():
		req.add_header(k, v)
	#if not 'User-Agent' in headers:
		#req.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.1; rv:11.0) Gecko/20100110 Firefox/11.0')
	return urlopen(req).read().decode("utf-8").replace("\r", "")	
favfilmesFile = os.path.join('addon_data_dir', 'favoritesf.txt')
favseriesFile = os.path.join('addon_data_dir', 'favoritess.txt')
historicFile = os.path.join('addon_data_dir', 'historic.txt')

	
makeGroups = "true"
URLP="http://cubeplay.000webhostapp.com/"
#URLP="http://localhost:8080/"
URLNC=URLP+"cloud/v2/nc/"
URLFO=URLP+"fo/"

#proxy = "http://localhost:8080/index.php?q="
proxy = ""

protocol="http://"
protocol2="http://"
reference="https://canaisgratis.info/"
reference2="|verifypeer=false"
#reference2="|verifypeer=false&referer=https://redecanais.se/"
#reference2="|referer=https://redecanais.se/"
#reference2=""
#reference3="|Referer=https://canaisgratis.eu/&verifypeer=false&User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30"
reference3="|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:83.0) Gecko/20100101 Firefox/83.0"
RC="redecanais.app/"
RC2="https://redecanais.app/"
RC3="https://redecanaistv.com/"
RC4="https://topflix.vc"
	
def getLocaleString(id):
	return Addon.getLocalizedString(id)

def Categories(): #70
	#AddDir("[B]!{0}: {1}[/B] - {2} ".format(getLocaleString(30036), getLocaleString(30037) if makeGroups else getLocaleString(30038) , getLocaleString(30039)), "setting" ,50 ,os.path.join(iconsDir, "setting.png"), isFolder=False)
	#AddDir("[COLOR white][B][Canais de TV1][/B][/COLOR]" , "", 100, "http://oi68.tinypic.com/116jn69.jpg", "http://oi68.tinypic.com/116jn69.jpg")
	#AddDir("[COLOR white][B]Canais de TV[/B][/COLOR]" , "", -1, "https://uploaddeimagens.com.br/images/002/440/396/original/TV.jpg", "https://uploaddeimagens.com.br/images/002/440/396/original/TV.jpg", info='\xa0')
	AddDir("[B][COLOR white]Filmes[/COLOR][/B]", "" , -2,"https://uploaddeimagens.com.br/images/002/376/272/original/TONY.jpg", "https://uploaddeimagens.com.br/images/002/376/272/original/TONY.jpg", isFolder=True, info='\xa0')
	AddDir("[COLOR white][B]Séries[/B][/COLOR]" , "", -3, "https://uploaddeimagens.com.br/images/002/376/145/original/Novo_3.jpg", "https://uploaddeimagens.com.br/images/002/376/145/original/Novo_3.jpg", info='\xa0')
	AddDir("[COLOR white][B]Radio TV[/B][/COLOR]" , "", 106, "https://uploaddeimagens.com.br/images/002/527/445/original/Radio-tv-black.png", "https://uploaddeimagens.com.br/images/002/527/445/original/Radio-tv-black.png", info='\xa0')
	AddDir("[COLOR white][B]Canais de TV[/B][/COLOR]" , "", -1, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
	#AddDir("[COLOR green][B]Histórico Filmes[/B][/COLOR]", "" ,305 , "https://cdn2.iconfinder.com/data/icons/business-office-icons/256/To-do_List-512.png", "https://cdn2.iconfinder.com/data/icons/business-office-icons/256/To-do_List-512.png", info='\xa0')
	AddDir("[COLOR crimson][B]Pesquisa[/B][/COLOR]" , "No", 160, "https://uploaddeimagens.com.br/images/002/376/135/original/941129_stock-photo-illustration-of-a-magnifying-glass.jpg", "https://uploaddeimagens.com.br/images/002/376/135/original/941129_stock-photo-illustration-of-a-magnifying-glass.jpg", "https://azure.microsoft.com/svghandler/search/?width=400&height=315", "https://azure.microsoft.com/svghandler/search/?width=400&height=315", info="Pesquisa em todo o Addon por palavra-chave\n\nUsar: [[B]=[/B]] \nFiltra número expecifico de temporada quando não apresentada a lista\n\nExemplo: \nOs Simpsons 14= \n\n Para exibir a temporada 14ª")
	AddDir("[B][COLOR orange]Checar Atualizações[/COLOR][/B]", "" , 200,"https://uploaddeimagens.com.br/images/002/376/161/original/Update.jpg", "https://uploaddeimagens.com.br/images/002/376/161/original/Update.jpg", isFolder=False, info="Checar se há atualizações\n\nAs atualizações normalmente são automáticas\nUse esse recurso caso não esteja recebendo automaticamente\r\nVersão atual: "+Versao)
	AddDir("[B][COLOR darkgray]Configurações[/COLOR][/B]", "" , 541,"https://uploaddeimagens.com.br/images/003/570/571/full/pngaaa.com-371737.png", "https://uploaddeimagens.com.br/images/003/570/571/full/pngaaa.com-371737.png", isFolder=False, info="Configurações")
	setViewM()
# --------------  Menu
def MCanais(): #-1
    #AddDir("[COLOR yellow][B]Opção 1  [COLOR lightskyblue][B](REDPLAY)[/B][/COLOR]" , "", 108, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
    #AddDir("[COLOR yellow][B]Opção 2  [COLOR lightskyblue][B](TOUROBOX)[/B][/COLOR]", "", 113, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
    AddDir("[COLOR yellow][B]Opção 1  [COLOR lightskyblue][B](FOXTV)[/B][/COLOR]", "", 115, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
    AddDir("[COLOR yellow][B]Opção 2  [COLOR lightskyblue][B](AOVIVOTV)[/B][/COLOR]", "", 102, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
    #AddDir("[COLOR yellow][B]Opção 3  [COLOR lightskyblue][B](REDECANAIS)[/B][/COLOR]" , "", 111, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
    #AddDir("[COLOR yellow][B]Opção 4  [COLOR lightskyblue][B](SABTOOHTV)[/B][/COLOR]", "", 113, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
    #AddDir("[COLOR yellow][B]Opção 4  [COLOR lightskyblue][B](R98K)[/B][/COLOR]"  , "", 91, "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", "https://uploaddeimagens.com.br/images/002/595/851/original/CanaisTV55.jpg", info='\xa0')
    setViewM()
    #AddDir('[B] [COLOR white]CONFIGURAÇÕES[/COLOR][/B]','',4,'','', isFolder=False, info='[COLOR white][B]LOOP [COLOR green]ON[/COLOR] [COLOR red]OFF[/COLOR][/B][/COLOR]')
def MFilmes(): #-2
	#AddDir("[COLOR white][B][Filmes Dublado/Legendado][/B][/COLOR]" , cPage, 220, "https://walter.trakt.tv/images/movies/000/222/254/fanarts/thumb/401d5f083e.jpg", "https://walter.trakt.tv/images/movies/000/222/254/fanarts/thumb/401d5f083e.jpg", background="cPage")
	#AddDir("[B][COLOR cyan]Filmes Lançamentos MMFilmes[/COLOR][/B]", "config" , 184,"https://walter.trakt.tv/images/movies/000/191/797/fanarts/thumb/6049212229.jpg", "https://walter.trakt.tv/images/movies/000/191/797/fanarts/thumb/6049212229.jpg", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR cyan]Filmes MMFilmes[/COLOR][/B]", "config" , 180,"https://uploaddeimagens.com.br/images/002/376/272/original/TONY.jpg", "https://uploaddeimagens.com.br/images/002/376/272/original/TONY.jpg", isFolder=True, info='\xa0')
	#AddDir("[COLOR maroon][B]Filmes Lançamentos Topflix.tv[/B][/COLOR]" , "config", 310, "https://walter.trakt.tv/images/movies/000/219/436/fanarts/thumb/0ff039faa5.jpg", "https://walter.trakt.tv/images/movies/000/219/436/fanarts/thumb/0ff039faa5.jpg", info='\xa0')
	#AddDir("[COLOR maroon][B]Filmes Topflix.tv[/B][/COLOR]" , "config", 210, "https://uploaddeimagens.com.br/images/002/588/199/original/tomb.jpg", "https://uploaddeimagens.com.br/images/002/588/199/original/tomb.jpg", info='\xa0')
	#AddDir("[COLOR yellow][B]Filmes NetCine[/B][/COLOR]" , "", 71, "https://uploaddeimagens.com.br/images/002/376/273/original/THORR.jpg", "https://uploaddeimagens.com.br/images/002/376/273/original/THORR.jpg", info='\xa0')

	#AddDir("[COLOR deepskyblue][B]Filmes Lançamentos Assistir.biz[/B][/COLOR]" , "", 517, "https://uploaddeimagens.com.br/images/002/644/779/original/Sarta2.jpg", "https://uploaddeimagens.com.br/images/002/644/779/original/Sarta2.jpg", info='\xa0')
	#AddDir("[COLOR deepskyblue][B]Filmes Assistir.biz[/B][/COLOR]" , "", 514, "https://uploaddeimagens.com.br/images/002/644/778/original/STAR.png", "https://uploaddeimagens.com.br/images/002/644/778/original/STAR.png", info='\xa0')
	#AddDir("[COLOR mediumpurple][B]Filmes Vizer.tv[/B][/COLOR]" , "", 600, "https://uploaddeimagens.com.br/images/002/711/818/full/django.jpg", "https://uploaddeimagens.com.br/images/002/711/818/full/django.jpg", info='\xa0')
	#AddDir("[COLOR springgreen][B]Filmes QuerofilmesHD[/B][/COLOR]" , "config", 510, "https://uploaddeimagens.com.br/images/002/640/063/original/Vin.png", "https://uploaddeimagens.com.br/images/002/640/063/original/Vin.png", info='\xa0')
	#AddDir("[COLOR blue][B]Filmes Lançamentos RedeCanais[/B][/COLOR]" , cPage, 221, "https://walter.trakt.tv/images/movies/000/222/216/fanarts/thumb/6f9bb1a733.jpg", "https://walter.trakt.tv/images/movies/000/222/216/fanarts/thumb/6f9bb1a733.jpg", background="cPage", info='\xa0')
	#AddDir("[COLOR blue][B]Filmes Dublado RedeCanais[/B][/COLOR]" , cPage, 90, "https://uploaddeimagens.com.br/images/002/376/274/original/ROCKKAAS.jpg", "https://uploaddeimagens.com.br/images/002/376/274/original/ROCKKAAS.jpg", background="cPage", info='\xa0')
	#AddDir("[COLOR blue][B]Filmes Legendado RedeCanais[/B][/COLOR]" , cPageleg, 91, "https://walter.trakt.tv/images/movies/000/181/313/fanarts/thumb/cc9226edfe.jpg", "https://walter.trakt.tv/images/movies/000/181/313/fanarts/thumb/cc9226edfe.jpg", background="cPageleg", info='\xa0')
	#AddDir("[COLOR blue][B]Filmes Nacional RedeCanais[/B][/COLOR]" , cPagenac, 92, "http://cdn.cinepop.com.br/2016/11/minhamaeeumapeca2_2-750x380.jpg", "http://cdn.cinepop.com.br/2016/11/minhamaeeumapeca2_2-750x380.jpg", background="cPagenac", info='\xa0')
	AddDir("[COLOR lightgreen][B]Filmes Comando.to[/B][/COLOR]" , "", 518, "https://uploaddeimagens.com.br/images/002/428/080/original/ROBOZIm.jpg", "https://uploaddeimagens.com.br/images/002/428/080/original/ROBOZIm.jpg", info='\xa0')
	AddDir("[COLOR mediumpurple][B]Filmes ComandoHDTorrents[/B][/COLOR]" , "", 170, "https://uploaddeimagens.com.br/images/002/644/778/original/STAR.png", "https://uploaddeimagens.com.br/images/002/644/778/original/STAR.png", info='\xa0')
	AddDir("[COLOR yellow][B]Filmes Pirate-Filmes[/B][/COLOR]" , "", 186, "https://uploaddeimagens.com.br/images/002/588/199/original/tomb.jpg", "https://uploaddeimagens.com.br/images/002/588/199/original/tomb.jpg", info='\xa0')
	AddDir("[COLOR deepskyblue][B]Filmes FilmesViaTorrent[/B][/COLOR]" , "", 530, "https://uploaddeimagens.com.br/images/002/711/818/full/django.jpg", "https://uploaddeimagens.com.br/images/002/711/818/full/django.jpg", info='\xa0')	
	#AddDir("[COLOR mediumvioletred][B]Filmes ComoEuBaixo[/B][/COLOR]" , "", 526, "https://uploaddeimagens.com.br/images/002/640/063/original/Vin.png", "https://uploaddeimagens.com.br/images/002/640/063/original/Vin.png", info='\xa0')
	#AddDir("[COLOR salmon][B]Filmes DosTorrents[/B][/COLOR]" , "", 5261, "https://uploaddeimagens.com.br/images/003/565/308/full/Spider.png", "https://uploaddeimagens.com.br/images/003/565/308/full/Spider.png", info='\xa0')
	#AddDir("[COLOR lightgreen][B]Filmes Max[/B][/COLOR]" , "", 465, "https://uploaddeimagens.com.br/images/002/428/080/original/ROBOZIm.jpg", "https://uploaddeimagens.com.br/images/002/428/080/original/ROBOZIm.jpg", info='\xa0')
	#AddDir("[COLOR indianred][B]Filmes Assistir.One[/B][/COLOR]" , "", 458, "https://uploaddeimagens.com.br/images/002/640/063/original/Vin.png", "https://uploaddeimagens.com.br/images/002/640/063/original/Vin.png", info='\xa0')
	setViewM()
def MSeries(): #-3
	#AddDir("[COLOR yellow][B]Séries NetCine[/B][/COLOR]" , "", 60, "https://walter.trakt.tv/images/shows/000/098/898/fanarts/thumb/bca6f8bc3c.jpg", "https://walter.trakt.tv/images/shows/000/098/898/fanarts/thumb/bca6f8bc3c.jpg")
	#AddDir("[COLOR blue][B]Séries RedeCanais[/B][/COLOR]" , cPageser, 130, "https://walter.trakt.tv/images/shows/000/001/393/fanarts/thumb/fc68b3b649.jpg", "https://walter.trakt.tv/images/shows/000/001/393/fanarts/thumb/fc68b3b649.jpg", background="cPageser", info='\xa0')
	#AddDir("[COLOR blue][B]Animes RedeCanais[/B][/COLOR]" , cPageser, 140, "https://walter.trakt.tv/images/shows/000/098/580/fanarts/thumb/d48b65c8a1.jpg", "https://walter.trakt.tv/images/shows/000/098/580/fanarts/thumb/d48b65c8a1.jpg", background="cPageser", info='\xa0')
	#AddDir("[COLOR blue][B]Desenhos RedeCanais[/B][/COLOR]" , cPageani, 150, "https://walter.trakt.tv/images/shows/000/069/829/fanarts/thumb/f0d18d4e1d.jpg", "https://walter.trakt.tv/images/shows/000/069/829/fanarts/thumb/f0d18d4e1d.jpg", background="cPageser", info='\xa0')
	#AddDir("[B][COLOR cyan]Séries MMFilmes[/COLOR][/B]", "config" , 190,"https://walter.trakt.tv/images/shows/000/037/522/fanarts/thumb/6ecdb75c1c.jpg", "https://walter.trakt.tv/images/shows/000/037/522/fanarts/thumb/6ecdb75c1c.jpg", isFolder=True, info='\xa0')
	AddDir("[B][COLOR lightgreen]Séries Comando.to[/COLOR][/B]", "config" , 522,"https://uploaddeimagens.com.br/images/003/583/194/full/serie4.png", "https://walter.trakt.tv/images/shows/000/098/898/fanarts/thumb/bca6f8bc3c.jpg", isFolder=True, info='\xa0')
	AddDir("[B][COLOR mediumpurple]Séries ComandoHDTorrents[/COLOR][/B]", "config" , 173,"https://uploaddeimagens.com.br/images/003/583/192/full/serie2.png", "https://tconline.com.br/wp-content/uploads/2020/02/8.1-VS250220A.jpg", isFolder=True, info='\xa0')
	AddDir("[B][COLOR yellow]Séries Filme-Pirate[/COLOR][/B]", "config" , 250,"https://uploaddeimagens.com.br/images/003/583/191/original/serie1.png", "https://cdn.mensagenscomamor.com/content/images/p000024904.jpg?v=2", isFolder=True, info='\xa0')
	AddDir("[B][COLOR deepskyblue]Séries FilmesViaTorrent[/COLOR][/B]", "config" , 533,"https://uploaddeimagens.com.br/images/003/583/193/full/serie3.png", "https://walter.trakt.tv/images/shows/000/037/522/fanarts/thumb/6ecdb75c1c.jpg", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR salmon]Séries DosTorrents[/COLOR][/B]", "config" , 5291,"https://uploaddeimagens.com.br/images/003/583/195/full/serie5.png", "https://jbt-en-images.s3.ap-south-1.amazonaws.com/wp-content/uploads/2021/10/05100134/lost-in-space-s3.jpg", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR mediumvioletred]Séries ComoEuBaixo[/COLOR][/B]", "config" , 529,"https://uploaddeimagens.com.br/images/003/883/514/full/BreakingBad-7277.png", "https://uploaddeimagens.com.br/images/003/883/514/full/BreakingBad-7277.png", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR lightgreen]Séries Max[/COLOR][/B]", "config" , 468,"https://walter.trakt.tv/images/shows/000/037/522/fanarts/thumb/6ecdb75c1c.jpg", "https://walter.trakt.tv/images/shows/000/037/522/fanarts/thumb/6ecdb75c1c.jpg", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR springgreen]Séries QueroFilmesHD[/COLOR][/B]", "config" , 430,"https://cdn.mensagenscomamor.com/content/images/p000024904.jpg?v=2", "https://cdn.mensagenscomamor.com/content/images/p000024904.jpg?v=2", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR indianred]Séries Assistir.One[/COLOR][/B]", "config" , 461,"https://www.jornadageek.com.br/wp-content/uploads/2019/01/Vikings-5%C2%AA-temporada.jpg", "https://www.jornadageek.com.br/wp-content/uploads/2019/01/Vikings-5%C2%AA-temporada.jpg", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR mediumpurple]Séries Vizer.tv[/COLOR][/B]", "config" , 450,"https://cdn.mensagenscomamor.com/content/images/p000024904.jpg?v=2", "https://cdn.mensagenscomamor.com/content/images/p000024904.jpg?v=2", isFolder=True, info='\xa0')
	#AddDir("[B][COLOR mediumvioletred]Séries TuaSerie[/COLOR][/B]", "config" , 454,"https://tconline.com.br/wp-content/uploads/2020/02/8.1-VS250220A.jpg", "https://tconline.com.br/wp-content/uploads/2020/02/8.1-VS250220A.jpg", isFolder=True, info='\xa0')
	setViewM()
######################

'''from http.server import BaseHTTPRequestHandler, HTTPServer
from urllib.parse import parse_qsl, urlparse
import threading

class MyServer(BaseHTTPRequestHandler):
    def do_GET(self):
        try:
            useragent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36'
            parse = urlparse(self.path)
            dic = dict(parse_qsl(parse.query))
            url = dic['url']
            sesion = requests.Session()
            res = sesion.get(url, headers={'User-Agent': useragent}, timeout=10)
            self.send_response(200)
            if '.ts' in url or '.m3u8' in url or '.webp' in url or '.jpeg' in url or '.png' in url or '.jpg' in url:
                self.send_header('Content-Type', 'video/mp2t')
            else:
                self.send_header("Content-type", "text/html")
            self.send_header('User-Agent', useragent)
            #self.send_header('Referer', '')
            self.end_headers()
            self.wfile.write(res.content)
            return
        except:
            pass
def proxyserver():
    try:
        server_address = ('127.0.0.1', 3000)
        webServer = HTTPServer(server_address, MyServer)
        server_thread = threading.Thread(target=webServer.serve_forever)
        server_thread.start()
        monitor = xbmc.Monitor()
        while not monitor.waitForAbort(3):
            pass
        webServer.shutdown()
    except:
        pass
proxyserver()'''

def MaxMenuSerie(): # 468
	pagina = "0" if not cPageserMX else cPageserMX
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserMX")
	y= int(pagina)*2
	for x in range(0, 2):
		try:
			y +=1
			link = OpenURL("https://maxseries.me/series-e-animes/page/"+str(y))
			match = re.compile('"location.href=.(.+?).;.+?src="(.+?)".alt="(.+?)"').findall(link)
			if match:
				for url2, img2, name2 in match:
					img2 = img2.replace("w185","original")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					AddDir(name2, url2, 469, img2, isFolder=True, IsPlayable=True, info='\xa0')
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserVZ")
def MaxMenuSerie2(): # 469
	try:
		link = OpenURL(url)
		match = re.compile('title">(Temporada..).(.+?)<\/span><\/div><\/li><\/ul>').findall(link)
		if match:
				for  name2, url2 in match:
					AddDir(name2, url2, 470, iconimage, iconimage, isFolder=True, IsPlayable=False, info="")
	except:
		pass
def MaxMenuSerie3(): # 470
		match = re.compile('<img src="(.+?)".+?href="(.+?)">(.+?)<').findall(url)
		if match:
				for  img2, url2, name2 in match:
					img2 = img2.replace("w154","original")
					AddDir(name2, url2, 471, img2, img2, isFolder=False, IsPlayable=True, info="")
def MaxMenuSeriePlay(): # 471
	try:
		listar=[]
		listal=[]
		link = OpenURL(url)
		match = re.compile('id="option-(.+?)".+?(http.+?)"').findall(link.replace('\n','').replace('\r',''))
		if match:
				for name2, url2 in match:
					if name2 == 'fembed' or name2 == 'blogger' or name2 == 'dood':
						listal.append(url2.replace("%3A",":").replace("%2F","/").replace("%3F","?").replace("%3D","=").replace("%0D",""))
						listar.append(name2.replace("fembed","[B][COLOR deepskyblue]Fembed[/B][/COLOR]").replace("blogger","[B][COLOR lightseagreen]Gdrive[/B][/COLOR]").replace("dood","[B][COLOR mediumseagreen]Dood[/B][/COLOR]"))
				if len(listal) <1:
					xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
					sys.exit(int(sys.argv[1]))
				d = xbmcgui.Dialog().select("Selecione a resolução", listar)
				if d!= -1:
					url2x = re.sub(' ', '%20', listal[d] )
					if 'vfilmesonline' in url2x or 'tvonlinex.com' in url2x:
						url4x1 = url2x.replace("/v/","/api/source/")
						result = {'r': '&', 'd': 'vfilmesonline.net'}
						f = requests.post(url4x1.replace("httpshttps","http"), data=result)
						m2 = re.compile('token=(.\w+).+?:"(\w+)').findall(f.text)
						m2.reverse()
						listar=[]
						listal=[]
						for link, res in m2:
							listal.append(link)
							listar.append(res)
						if len(listal) <1:
							xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
							sys.exit(int(sys.argv[1]))
						d = xbmcgui.Dialog().select("Selecione a resolução", listar)
						if d!= -1:
							url2 = re.sub(' ', '%20', listal[d] )
							PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info)
					if 'dood' in url2x:
						headers={'Referer': 'https://dood.to/', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0'}
						urlx = requests.get(url2x, headers=headers)
						md5 = re.compile(".get.'(.pass.+?)'").findall(urlx.text)
						md5x = "https://dood.to" + md5[0]
						arquivo = requests.get(md5x, headers=headers)
						link = re.compile("(.+)").findall(arquivo.text)
						token = re.compile("h_error&token=(.+?)'").findall(urlx.text)
						time = re.compile("pass_md5.+?-.+?-.+?-(.+?)-").findall(urlx.text)
						final = link[0] + "7Z1eiyftb1?token="+ token[0] + "&expiry="+ time[0] + "843"
						PlayUrl(name, final +"|Referer=https://dood.to/", iconimage, info)

					if 'vidmoly' in url2x:
						headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
						f = requests.get(url2x, headers=headers)
						m2 = re.compile('(.{1,106}.mp4).+?"(.+?)"').findall(f.text)
						listar=[]
						listal=[]
						for link, res in m2:
							listal.append(link)
							listar.append(res)
						if len(listal) <1:
							xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
							sys.exit(int(sys.argv[1]))
						d = xbmcgui.Dialog().select("Selecione a resolução", listar)
						if d!= -1:
							url2 = re.sub(' ', '%20', listal[d] )
							PlayUrl(name, url2+"|Referer=https://vidmoly.to/", iconimage, info)
					if 'blogger' in url2x:
						headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
						f = requests.get(url2x, headers=headers)
						m2 = re.compile('play_url"."(.+?)"').findall(f.text)
						f2 = m2[0].encode('ascii').decode('unicode-escape')
						PlayUrl(name, f2, iconimage, info)
					else:
						sys.exit()
				else:
					sys.exit()
	except:
		xbmcgui.Dialog().ok('Play XD', 'Video indisponível, tente outro servidor')
		sys.exit()
def MaxMenu(): # 465
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaMX11[int(CatMX)] +"[/COLOR]", "url" ,237 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageMX) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageMX) ) +"][/B][/COLOR]", cPageMX , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageMX")
		l= int(cPageMX)*2
		for x in range(0, 2):
			l +=1
			link = OpenURL("https://maxfilmes.me/"+ClistaMX10[int(CatMX)]+"/page/"+str(l))
			match = re.compile('"location.href=.(.+?).;.+?src="(.+?)".alt="(.+?)"').findall(link)
			if match:
				for url2, img2, name2 in match:
					img2 = img2.replace("w185","original")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					AddDir(name2, url2, 466, img2, isFolder=True, IsPlayable=True, info='\xa0')
					p += 1
		if p >= 48:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageMX) + 2) +"][/B][/COLOR]", cPageMX , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageMX")
	except:
		pass
def MaxMenu2(): # 466
	trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace(" ","+")+"Trailer+Legendado")
	trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	try:
		link = requests.get(url)
		url2x = re.compile('camp.php.url=(.+?)"').findall(link.text)
		open = "https:" + url2x[0]
		url3a = requests.get(open)
		url2xx = re.compile('abrir=(.+?)".+?<\/span><\/span>(.+?)<').findall(url3a.text)
		if url2xx:
			for url2, name2 in url2xx:
				AddDir(name2.replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Principal[/B] - (Dublado)[/COLOR]"), url2, 467, iconimage, iconimage, isFolder=False, IsPlayable=True, info="")
	except:
		try:
				link2 = requests.get(url)
				url2x = re.compile('camp.php.url=(.+?)"').findall(link2.text)
				open = url2x[0]
				url3a = requests.get(open)
				comprime = re.compile('. <div class=".+?".style="display:none">(.+)').findall(url3a.text.replace('\n','').replace('\r',''))
				url2xx = re.compile('select.(.+?).".+?<\/span><.span>(.+?)<').findall(comprime[0])
				id = re.compile('id:"(.+?)"').findall(url3a.text)
				if url2xx:
					for url2, name2 in url2xx:
						if name2 == 'VF DUB' or name2 == 'VF LEG' :
							name2 = name2.replace("VF DUB","[B][COLOR deepskyblue]Fembed[/B] - (Dublado)[/COLOR]").replace("VF LEG","[B][COLOR deepskyblue]Fembed[/B] - [COLOR red](Legendado)[/COLOR]")
							AddDir(name2, "http://"+url2+"#"+ id[0] , 467, iconimage, iconimage, isFolder=False, IsPlayable=True, info="")
		except:
			pass
			link3 = requests.get(url)
			url2x = re.compile('camp.php.url=(.+?)"').findall(link3.text)
			open = url2x[0]
			url3a = requests.get(open)
			url2xx = re.compile("SvID ==.(.+?).+\s.+\s.+?'(.+?)'").findall(url3a.text)
			if url2xx:
				for name2, url2 in url2xx:
					if name2 == '1' or name2 == '2' :
						AddDir(name2.replace("1","[B][COLOR deepskyblue]Fembed[/B][/COLOR]").replace("2","[B][COLOR mediumseagreen]Vidmoly[/B][/COLOR]"), url2+"%" , 467, iconimage, iconimage, isFolder=False, IsPlayable=True, info="")
def MaxPlay(): # 467
	try:
		url2 = re.compile("(.+?)%").findall(url)
		url3 = url2[0]
		if 'fembed.com' in url3:
			url4x1 = url3.replace("www.","").replace("fembed.com","femax20.com").replace("v","api/source")
			result = {'r': '&', 'd': 'femax20.com'}
			f = requests.post(url4x1, data=result)
			m2 = re.compile('token=(.\w+).+?:"(\w+)').findall(f.text)
			m2.reverse()
			listar=[]
			listal=[]
			for link, res in m2:
				listal.append(link)
				listar.append(res)
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info)
		if 'vidmoly' in url3:
			headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
			f = requests.get(url3, headers=headers)
			m2 = re.compile('(.{1,106}.mp4).+?"(.+?)"').findall(f.text)
			#m2.reverse()
			listar=[]
			listal=[]
			for link, res in m2:
				listal.append(link)
				listar.append(res)
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				PlayUrl(name, url2+"|Referer=https://vidmoly.to/", iconimage, info)
		else:
			sys.exit()
	except:
		try:
				xxx2 = re.compile("http:\/\/(.+?)#").findall(url)
				id = re.compile("#(.+)").findall(url)
				result = {'button': xxx2[0], 'id': id[0],'season': 'none', 'episode': 'none'}
				xxx = requests.post("https://hdfog.club/video/geradorteste.php", data=result)
				open = re.compile("(.+)").findall(xxx.text)
				open2 = requests.get(open[0])
				open3 = re.compile('location.href = "(.+?)"').findall(open2.text)
				open4 = requests.get(open3[0])
				urlxx = re.compile('location.href = "(.+?)"').findall(open4.text)
				final = "https:" + urlxx[0]
				if 'play.assistir' in final:
					url5 = requests.get(final)
					url6 = re.compile('src="(.+?)" type').findall(url5.text)
					PlayUrl(name, url6[0], iconimage, info)
                        
				if 'vfilmesonline' in final:
					url4x1 = final.replace("v","api/source").replace("sourcefilmesonline.net","vfilmesonline.net").replace("https:https://api","https:/")
					result = {'r': '&', 'd': 'vfilmesonline.net'}
					f = requests.post(url4x1, data=result)
					m2 = re.compile('token=(.\w+).+?:"(\w+)').findall(f.text)
					m2.reverse()
					listar=[]
					listal=[]
					for link, res in m2:
						listal.append(link)
						listar.append(res)
					if len(listal) <1:
						xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
						sys.exit(int(sys.argv[1]))
					d = xbmcgui.Dialog().select("Selecione a resolução", listar)
					if d!= -1:
						url2 = re.sub(' ', '%20', listal[d] )
						PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info)

				if 'mixdrop' in final:
					headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
					html = requests.get(final.replace("mixdrop.to","mixdrop.to"), headers=headers)
					valor = re.compile("(eval.+)").findall(html.text)
					demo_eval = valor[0]
					descom = unpack(demo_eval)
					final = re.compile('MDCore.wurl="(.+?)"').findall(descom)
					end = 'https:' + final[0]
					PlayUrl(name, end+"|Referer=https://mixdrop.to/", iconimage, info)
				if 'gdriveplayer' in final:
					headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
					html = requests.get(final.replace("https://gdriveplayer.us/embed2.php?link=","https://download.gdriveplayer.us/download.php?link="), headers=headers)
					valor = re.compile('<a href="(https:.+?)".+?720').findall(html.text)
					end = valor[0]
					PlayUrl(name, end+"|Referer=https://download.gdriveplayer.us/", iconimage, info)
				else:
					sys.exit()
		except IndexError:
			try:
				PlayUrl(name, url, iconimage, info, sub="")
			except:
				pass
def AssistirMenu(): # 458
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaAS11[int(CatAS)] +"[/COLOR]", "url" ,236 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageAS) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageAS) ) +"][/B][/COLOR]", cPageAS , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageAS")
		l= int(cPageAS)*1
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://assistir.one/lancamentos/"+str(l)).replace('\n','').replace('\r','')
			match = re.compile('span>                             <img src=(.+?)".+?href="(.+?)".+?title="(.+?)"').findall(link)
			if ClistaAS10[int(CatAS)] != "0":
				link = OpenURL("https://assistir.one/categoria/"+ClistaAS10[int(CatAS)]+"/filmes/"+str(l)).replace('\n','').replace('\r','')
				match = re.compile('>                            <img src=(.+?)".+?href="(.+?)".+?title="(.+?)"').findall(link)
			if match:
				for img2,url2, name2 in match:
					img3 = "https:" + img2
					url3 = "https:" + url2
					AddDir(name2, url3, 459, img3.replace('https:"https:',"https:").replace('"',""), img3.replace('https:"https:',"https:").replace('"',""), isFolder=True, IsPlayable=True, info='\xa0')
					p += 1
			else:
				break
		if p >= 48:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageAS) + 2) +"][/B][/COLOR]", cPageAS , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageAS")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def AssistirMenu2(): # 459
	trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace(" ","+")+"Trailer+Legendado")
	trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	try:
		link = requests.get(url)
		Desc = re.compile('og.+?ption".+?"(.+?)"').findall(link.text)
		Desc = Desc[0]
		url2x = re.compile("filme'.'(.+?)'.'(.+?)'").findall(link.text)
		url2x2 = re.compile("assistir.'(filme)'").findall(link.text)
		url2x2 = url2x2[0]
		if url2x:
			for name2, url2 in url2x:
				AddDir(name2.replace("legendado","[COLOR red][B]Legendado[/B][/COLOR]").replace("dublado","[COLOR springgreen][B]Dublado[/B][/COLOR]"), "https://"+url2, 460, iconimage, iconimage, isFolder=False, IsPlayable=True, info=Desc)
	except:
		link = OpenURL(url)
		match = re.compile("serie','.+?'(.+?)'.'(.+)'").findall(link)
		if match:
			for url2, name2 in match:
				AddDir(name2 + " - Temporada", "https://"+url2+"-"+name2, 463, iconimage, iconimage, isFolder=True, IsPlayable=True, info="")
def AssistirMenu3(): # 460
	try:    
		gerenciar = name+ " - " + url 
		idl = re.compile("B.(.+?)[[]").findall(gerenciar.replace("Dublado","dublado").replace("Legendado","legendado"))
		result1 = {'idf': 'filme', 'idl': idl[0], 'id': url.replace("https://",""), 'player': '1'}
		url3x = requests.post("https://assistir.one/ls.php?p=assistir&pag=player", data=result1)
		url4 = re.compile('value=.(.+?)".+?(Player.+?)<').findall(url3x.text)
		idioma = re.compile("'filme', '(.+?)'").findall(url3x.text)
		id = re.compile("'filme', '.+?'. '(.+?)'").findall(url3x.text)
		if url4:
			listar=[]
			listal=[]
			for url2, name2 in url4:
				#if name2 == 'Player 1' or name2 == 'Player 2' or name2 == 'Player 3' or name2 == 'Player 4' or name2 == 'Player 6' or name2 == 'Player 7':
					listal.append(id[0] + "-" + idioma[0])
					listar.append(name2.replace("Player 1","[COLOR springgreen][B]Principal[/B][/COLOR]").replace("Player 2","[COLOR yellow][B]Externo 1[/B][/COLOR]").replace("Player 3","[COLOR yellow][B]Externo 2[/B][/COLOR]").replace("Player 4","[COLOR yellow][B]Externo 3[/B][/COLOR]").replace("Player 5","[COLOR yellow][B]Externo 4[/B][/COLOR]").replace("Player 6","[COLOR yellow][B]Externo 5[/B][/COLOR]").replace("Player 7","[COLOR yellow][B]Principal Externo[/B][/COLOR]"))
			if len(listal) <1:
					xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
					sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione o servidor", listar)
			if d!= -1:
					Player = re.compile("Player.(.+)").findall(listar[d].replace("[COLOR springgreen][B]Principal[/B][/COLOR]","Player 1").replace("[COLOR yellow][B]Externo 1[/B][/COLOR]", "Player 2").replace("[COLOR yellow][B]Externo 2[/B][/COLOR]", "Player 3").replace("[COLOR yellow][B]Externo 3[/B][/COLOR]", "Player 4").replace("[COLOR yellow][B]Externo 4[/B][/COLOR]", "Player 5").replace("[COLOR yellow][B]Externo 5[/B][/COLOR]", "Player 6").replace("[COLOR yellow][B]Principal Externo[/B][/COLOR]", "Player 7"))
					idl = re.compile("-(.+)").findall(listal[d].replace("[COLOR red][B]Legendado[/B][/COLOR]","legendado").replace("[COLOR springgreen][B]Dublado[/B][/COLOR]","dublado"))
					idx = re.compile("(.+)-").findall(listal[d].replace("[COLOR red][B]Legendado[/B][/COLOR]","legendado").replace("[COLOR springgreen][B]Dublado[/B][/COLOR]","dublado"))
					result = {'idf': 'filme', 'idl': idl[0], 'id': idx[0], 'player': Player[0]}
					url3 = requests.post("https://assistir.one/ls.php?p=assistir&pag=player", data=result)
					url41 = re.compile('src="(.+?)" ').findall(url3.text)
					url4x = url41[0]
					if 'play.assistir' in url4x:
						url5 = requests.get(url4x)
						url6 = re.compile('src="(.+?)" type').findall(url5.text)
						PlayUrl(name, url6[0], iconimage, info)
                        
					if 'fembed.com' in url4x:
						url4x1 = url4x.replace("fembed.com","femax20.com").replace("v","api/source")
						result = {'r': '&', 'd': 'femax20.com'}
						f = requests.post(url4x1, data=result)
						m2 = re.compile('token=(.\w+).+?:"(\w+)').findall(f.text)
						m2.reverse()
						listar=[]
						listal=[]
						for link, res in m2:
							listal.append(link)
							listar.append(res)
						if len(listal) <1:
							xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
							sys.exit(int(sys.argv[1]))
						d = xbmcgui.Dialog().select("Selecione a resolução", listar)
						if d!= -1:
							url2 = re.sub(' ', '%20', listal[d] )
							PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info)

					if 'mixdrop' in url4x:
						headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
						html = requests.get(url4x.replace("mixdrop.to","mixdrop.to"), headers=headers)
						valor = re.compile("(eval.+)").findall(html.text)
						demo_eval = valor[0]
						descom = unpack(demo_eval)
						final = re.compile('MDCore.wurl="(.+?)"').findall(descom)
						end = 'https:' + final[0]
						PlayUrl(name, end+"|Referer=https://mixdrop.to/", iconimage, info)
                            
                        
					if 'dood' in url4x:
						headers={'Referer': 'https://dood.to/', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0'}
						urlx = requests.get(url4x, headers=headers)
						md5 = re.compile(".get.'(.pass.+?)'").findall(urlx.text)
						md5x = "https://dood.to" + md5[0]
						arquivo = requests.get(md5x, headers=headers)
						link = re.compile("(.+)").findall(arquivo.text)
						token = re.compile("h_error&token=(.+?)'").findall(urlx.text)
						time = re.compile("pass_md5.+?-.+?-.+?-(.+?)-").findall(urlx.text)
						final = link[0] + "7Z1eiyftb1?token="+ token[0] + "&expiry="+ time[0] + "843"
						PlayUrl(name, final +"|Referer=https://dood.to/", iconimage, info)


					if 'streamtape' in url4x:
						arquivo = requests.get(url4x)
						id = re.compile("getElement.+?=..(\/\/.+?)..<").findall(arquivo.text)
						PlayUrl(name,'https:'+id[0].replace('"',"").replace(" + '","")+"&stream=1|Referer=https://streamtape.com/&verifypeer=false&User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30", iconimage, info)

					if 'mystream' in url4x:
						media1 = requests.get(url4x.replace("embed.mystream.to","mstream.website"))
						match = re.search(r'(\$=.+?;)\s*<', media1.text, re.DOTALL)
						data = match.group(1)
						startpos = data.find('"\\""+') + 5
						endpos = data.find('"\\"")())()')
						first_group = data[startpos:endpos]
						pos = re.search(r"(\(!\[\]\+\"\"\)\[.+?\]\+)", first_group)
						if pos:
						    first_group = first_group.replace(pos.group(1), 'l').replace('$.__+', 't').replace('$._+', 'u').replace('$._$+','o')
						    tmplist = []
						    js = re.search(r'(\$={.+?});', data)
						    if js:
						        js_group = js.group(1)[3:][:-1]
						        second_group = js_group.split(',')
						        i = -1
						        for x in second_group:
						            a, b = x.split(':')
						            if b == '++$':
						                i += 1
						                tmplist.append(("$.{}+".format(a), i))
						
						            elif b == '(![]+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'false'[i]))
						
						            elif b == '({}+"")[$]':
						                tmplist.append(("$.{}+".format(a), '[object Object]'[i]))
						
						            elif b == '($[$]+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'undefined'[i]))
						
						            elif b == '(!""+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'true'[i]))

						        tmplist = sorted(tmplist, key=lambda z: str(z[1]))
						        for x in tmplist:
						            first_group = first_group.replace(x[0], str(x[1]))

						        first_group = first_group.replace('\\"', '\\').replace("\"\\\\\\\\\"", "\\\\").replace('\\"', '\\').replace('"', '').replace("+", "")
						        final_data = first_group.encode('ascii').decode('unicode-escape').encode('ascii').decode('unicode-escape')
						        media = re.compile("'(http.+?)'").findall(final_data)
						        mp4 = media[0]
						        PlayUrl(name, mp4+"|Referer=https://mstream.press/", iconimage, info)
			else:
					sys.exit()
		else:
			sys.exit()        
	except (IndexError, ValueError):
		xbmcgui.Dialog().ok('Play XD', 'Video não encontrado, tente outro servidor')
		sys.exit()
def AssistirSeries(): # 461
	pagina = "0" if not cPageserAS else cPageserAS
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserAS")
	y= int(pagina)*2
	for x in range(0, 2):
		try:
			y +=1
			link = OpenURL("https://assistir.one/series/"+str(y)).replace('\n','').replace('\r','')
			match = re.compile('span>                             <img src=(.+?)".+?href="(.+?)".+?title="(.+?)"').findall(link)
			if match:
				for img2,url2, name2 in match:
					img3 = "https:" + img2
					url3 = "https:" + url2
					AddDir(name2, url3, 462, img3.replace('https:"https:',"https:").replace('"',""), img3.replace('https:"https:',"https:").replace('"',""), isFolder=True, IsPlayable=True, info="[COLOR][/COLOR]")
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserAS")
def AssistirSeries2(): # 462
	link = OpenURL(url)#.replace('\n','').replace('\r','')
	match = re.compile("serie','.+?'(.+?)'.'(.+)'").findall(link)
	Desc = re.compile('og.+?ption".+?"(.+?)"').findall(link)
	Desc = Desc[0]
	if match:
		for url2, name2 in match:
			AddDir(name2 + " - Temporada", "https://"+url2+"-"+name2, 463, iconimage, iconimage, isFolder=True, IsPlayable=True, info=Desc)
def AssistirSeries3(): # 463
	id = re.compile('https:..(.+?)-').findall(url)
	temp = re.compile('-(.+)').findall(url)
	result = {'idf':'serie','idl':'','id': id[0],'temp': temp[0]}
	url3 = requests.post("https://assistir.one/ls.php?p=assistir&pag=temp", data=result)
	url4 = re.compile("ver.'(.+?)'..'(.+?)'.+?>(.+?)<").findall(url3.text)
	if url4:
		for url2,idioma,name2 in url4:
			AddDir(name2+": "+idioma.replace("dublado","[COLOR lightseagreen][B]Dublado[/B][/COLOR]").replace("legendado","[COLOR yellow][B]Legendado[/B][/COLOR]"), "https://"+url2+"-"+idioma+"#"+id[0], 464, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info)
def AssistirSeriesPlay (): # 464
	try:	
		id = re.compile('https:..(.+?)-').findall(url)
		idl = re.compile('-(.+?)#').findall(url)
		item = re.compile('#(.+)').findall(url)
		result = {'id': id[0], 'idl': idl[0], 'ep': '', 'item': item[0], 'temp': '', 'auto': '0', 'player': '1'}
		url3 = requests.post("https://assistir.one/ls.php?p=assistir&pag=playerS", data=result)
		url4 = re.compile('value="(.+?).+?(Player.+?)<').findall(url3.text)
		if url4:
			listar=[]
			listal=[]
			for url2x, name2 in url4:
				#if name2 == 'Player 1' or name2 == 'Player 2' or name2 == 'Player 3' or name2 == 'Player 4' or name2 == 'Player 6' or name2 == 'Player 7':
					listal.append(url2x)
					listar.append(name2.replace("Player 1","[COLOR springgreen][B]Principal[/B][/COLOR]").replace("Player 2","[COLOR yellow][B]Externo 1[/B][/COLOR]").replace("Player 3","[COLOR yellow][B]Externo 2[/B][/COLOR]").replace("Player 4","[COLOR yellow][B]Externo 3[/B][/COLOR]").replace("Player 5","[COLOR yellow][B]Externo 4[/B][/COLOR]").replace("Player 6","[COLOR yellow][B]Externo 5[/B][/COLOR]").replace("Player 7","[COLOR yellow][B]Principal Externo[/B][/COLOR]"))
			if len(listal) <1:
					xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
					sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione o servidor", listar)
			if d!= -1:
					result = {'id': id[0], 'idl': idl[0], 'ep': '', 'item': item[0], 'temp': '', 'auto': '0', 'player': listal[d]}
					url3 = requests.post("https://assistir.one/ls.php?p=assistir&pag=playerS", data=result)
					url4 = re.compile('src="(.+?)" ').findall(url3.text)
					url4x = url4[0]
					if 'play.assistir' in url4x:
						url5 = requests.get(url4x)
						url6 = re.compile('src="(.+?)" type').findall(url5.text)
						PlayUrl(name, url6[0], iconimage, info)
                        
					if 'fembed.com' in url4x:
						url4x1 = url4x.replace("fembed.com","femax20.com").replace("v","api/source")
						result = {'r': '&', 'd': 'femax20.com'}
						f = requests.post(url4x1, data=result)
						m2 = re.compile('token=(.\w+).+?:"(\w+)').findall(f.text)
						m2.reverse()
						listar=[]
						listal=[]
						for link, res in m2:
							listal.append(link)
							listar.append(res)
						if len(listal) <1:
							xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
							sys.exit(int(sys.argv[1]))
						d = xbmcgui.Dialog().select("Selecione a resolução", listar)
						if d!= -1:
							url2 = re.sub(' ', '%20', listal[d] )
							PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info)

					if 'mixdrop' in url4x:
						headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
						html = requests.get(url4x.replace("mixdrop.to","mixdrop.to"), headers=headers)
						valor = re.compile("(eval.+)").findall(html.text)
						demo_eval = valor[0]
						descom = unpack(demo_eval)
						final = re.compile('MDCore.wurl="(.+?)"').findall(descom)
						end = 'https:' + final[0]
						PlayUrl(name, end+"|Referer=https://mixdrop.to/", iconimage, info)
                        
					if 'dood' in url4x:
						headers={'Referer': 'https://dood.to/', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0'}
						urlx = requests.get(url4x, headers=headers)
						md5 = re.compile(".get.'(.pass.+?)'").findall(urlx.text)
						md5x = "https://dood.to" + md5[0]
						arquivo = requests.get(md5x, headers=headers)
						link = re.compile("(.+)").findall(arquivo.text)
						token = re.compile("h_error&token=(.+?)'").findall(urlx.text)
						time = re.compile("pass_md5.+?-.+?-.+?-(.+?)-").findall(urlx.text)
						final = link[0] + "7Z1eiyftb1?token="+ token[0] + "&expiry="+ time[0] + "843"
						PlayUrl(name, final +"|Referer=https://dood.to/", iconimage, info)

					if 'streamtape' in url4x:
						arquivo = requests.get(url4x)
						id = re.compile("getElement.+?=..(\/\/.+?)..<").findall(arquivo.text)
						PlayUrl(name,'https:'+id[0].replace('"',"").replace(" + '","")+"&stream=1|Referer=https://streamtape.com/&verifypeer=false&User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30", iconimage, info)

					if 'mystream' in url4x:
						media1 = requests.get(url4x.replace("embed.mystream.to","mstream.website"))
						match = re.search(r'(\$=.+?;)\s*<', media1.text, re.DOTALL)
						data = match.group(1)
						startpos = data.find('"\\""+') + 5
						endpos = data.find('"\\"")())()')
						first_group = data[startpos:endpos]
						pos = re.search(r"(\(!\[\]\+\"\"\)\[.+?\]\+)", first_group)
						if pos:
						    first_group = first_group.replace(pos.group(1), 'l').replace('$.__+', 't').replace('$._+', 'u').replace('$._$+','o')
						    tmplist = []
						    js = re.search(r'(\$={.+?});', data)
						    if js:
						        js_group = js.group(1)[3:][:-1]
						        second_group = js_group.split(',')
						        i = -1
						        for x in second_group:
						            a, b = x.split(':')
						            if b == '++$':
						                i += 1
						                tmplist.append(("$.{}+".format(a), i))
						
						            elif b == '(![]+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'false'[i]))
						
						            elif b == '({}+"")[$]':
						                tmplist.append(("$.{}+".format(a), '[object Object]'[i]))
						
						            elif b == '($[$]+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'undefined'[i]))
						
						            elif b == '(!""+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'true'[i]))

						        tmplist = sorted(tmplist, key=lambda z: str(z[1]))
						        for x in tmplist:
						            first_group = first_group.replace(x[0], str(x[1]))

						        first_group = first_group.replace('\\"', '\\').replace("\"\\\\\\\\\"", "\\\\").replace('\\"', '\\').replace('"', '').replace("+", "")
						        final_data = first_group.encode('ascii').decode('unicode-escape').encode('ascii').decode('unicode-escape')
						        media = re.compile("'(http.+?)'").findall(final_data)
						        mp4 = media[0]
						        PlayUrl(name, mp4+"|Referer=https://mstream.press/", iconimage, info)
			else:
					sys.exit()
		else:
			sys.exit()        
	except (IndexError, ValueError):
		xbmcgui.Dialog().ok('Play XD', 'Video não encontrado, tente outro servidor')
		sys.exit()
      
def TuaSerieMenu(): # 454
	try:
		link = OpenURL("https://tuaserie.online/").replace("\n","").replace("\r","")
		link2 = re.compile('63i6L6C.jpg" \/><\/a><\/div>(.+)').findall(link)
		match = re.compile('<a href="(.+?)".+?alt="(.+?)".+?src="(.+?)"').findall(link2[0])
		if match:
			for url2,name2,img2 in match:
				img2 = img2.replace("w185","original")
				url3 = "https://tuaserie.online/" + url2
				AddDir(name2, url3, 455, img2, img2, isFolder=True, IsPlayable=True, info="")
	except:
		pass
def TuaSerieMenu2(): #455
	l = OpenURL(url).replace("\n","").replace("\r","").replace("</a><br /><br />			<h2>","</a><br /><br /><h2>").replace("</a><br /><br />				<","</a><br /><br /><h2>").replace('">DUBLADO','" rel="nofollow">DUBLADO"').replace('">LEGENDADO','" rel="nofollow">LEGENDADO"')
	m = re.compile('h2>.+?([0-9].+?)<.+?(E.+?)<\/a><br \/><br \/><').findall(l)
	for temp2, cont2 in m:
		AddDir(temp2, cont2, 456, iconimage, iconimage, isFolder=True)
def TuaSerieMenu3(): #456
	#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
	#arquivo.write(url)
	#arquivo.close()
	m = re.compile('(Episódio.+?)<.+?href="(.+?)".+?>(.+?)<').findall(url)
	for episo, url2, name2 in m:
		name2 = name2.replace("DUBLADO","[COLOR lightseagreen][B]Dublado[/B][/COLOR]").replace("LEGENDADO","[COLOR yellow][B]Legendado[/B][/COLOR]")
		AddDir(episo+name2.replace('"',""), "https://tuaserie.online/"+url2, 457, iconimage, iconimage, isFolder=False, IsPlayable=True)
def TuaSeriePlayer(): #457
	try:
		urlx = requests.get(url)
		#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
		#arquivo.write(urlx.text)
		#arquivo.close()
		urlx2 = re.compile(".com.(.+?)'").findall(urlx.text)
		urlx3 = "https://1i1.in/face/" + urlx2[0]
		session = requests.Session()
		response = session.get(urlx3)
		cookie = session.cookies.get_dict()
		cookie = str(cookie)
		url2 = re.compile("'cod':.+?'(.+?)'").findall(cookie)
		url2 = "https://tuaserie.casa/l/"+ url2[0]
		url2x = requests.get(url2)
		url3x = re.compile('<a href="(.+?)".+?Principal').findall(url2x.text)
		result = {'r': '&','d': 't6k6.xyz'}
		f = requests.post(url3x[0].replace("v","api/source"), data=result)
		url4 = re.compile('"file":"(.+?)"').findall(f.text.replace("\/","/"))
		PlayUrl(name, url4[0], iconimage, info)
	except IndexError as g2:
		pass
		f = requests.get(url3x[0])
		url4 = re.compile('"file":"(.+?)"').findall(f.text.replace("\/","/"))
		PlayUrl(name, url4[0], iconimage, info)
        
def SerieMenuBZ(): # 450
	pagina = "0" if not cPageserVZ else cPageserVZ
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserVZ")
	y= int(pagina)*1
	for x in range(0, 1):
		try:
			y +=0
			link = OpenURL("https://vizer.tv/includes/ajax/ajaxPagination.php?categoriesListSeries=all&anime=0&search=&page="+ str(y) +"&categoryFilterYear=all&categoryFilterOrderBy=vzViews&categoryFilterOrderWay=desc&categoryFilterQuantity=28")
			f = json.loads(link)
			f2 = json.dumps(f, indent=4, sort_keys=True, ensure_ascii=False).replace('\n','').replace('\r','')
			match = re.compile('poster.+?\/([^\"]+).+?tle".."([^\"]+).+?url.+?"(.+?)"').findall(f2)
			if match:
				for  img2, name2, url2 in match:
					img3 = "https://image.tmdb.org/t/p/original/" + img2
					url3 = "https://vizer.tv/serie/online/" + url2
					AddDir(name2, url3, 451, img3, img3, isFolder=True, IsPlayable=True, info="[COLOR][/COLOR]")
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserVZ")
def SerieMenuBZ2(): # 451
	try:
		link = OpenURL(url)
		match = re.compile('id="(.+?)">(.+?)<\/div>').findall(link)
		if match:
				for url2, name2 in match:
					AddDir("Temporada "+ name2, url2, 452, iconimage, iconimage, isFolder=True, IsPlayable=False, info="[COLOR][/COLOR]")
	except:
		pass
def SeriePlayBZ(): # 452
	try:	
		url3 = ('https://vizer.tv/includes/ajax/publicFunctions.php')
		result = {'getEpisodes': url}
		f = requests.post(url3, data=result)
		match = re.compile('id"."(.+?)"."title"."(.+?)"img"....(.+?)".+?"name"."(.+?)"').findall(f.text)
		if match:
				for url2, name2, img2, numero in match:
					img3 = "https://image.tmdb.org/t/p/w500/" + img2
					AddDir(numero+" - " + name2.replace('",',""), url2, 453, img3, img3, isFolder=False, IsPlayable=True, info="[COLOR][/COLOR]")
	except:
		pass
def SeriePlayBZ22(): # 453
	try:	
		url3 = ('https://vizer.tv/includes/ajax/publicFunctions.php')
		result = {'getEpisodeLanguages': url}
		f = requests.post(url3, data=result)
		f1 = json.loads(f.text)
		f2 = json.dumps(f1, ensure_ascii=False)
		arquivo2 = urllib.parse.quote(f2)
		String2 = urllib.parse.unquote(arquivo2)
		if f:
			m2 = re.compile('lang".."(.+?)".+?:.+?"(.+?)"').findall(String2)
			listar=[]
			listal=[]
			for res, link in m2:
				listal.append(link)
				listar.append(res.replace("1","[COLOR red][B]Legendado[/B][/COLOR]").replace("2","[COLOR springgreen][B]Dublado[/B][/COLOR]"))
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione o idioma", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				urlx = "https://vizer.tv/embed/getEmbed.php?orvio=" + url2
				url4 = requests.get(urlx)
				link2 = re.compile('src="(http.+?)"').findall(url4.text)
				link2= link2[0].replace("?","#")
				if 'orvio' in link2:
					url23 = requests.get(link2)
					legenda = re.compile('videoId.+?"(.+?)".\s+.+\s.+.\s+.\s.+\s.+\s.+?var subsArray.+?"(.+?)"').findall(url23.text)
					archive = re.compile('hashLink.+?"(.+?)"').findall(url23.text)
					mp4 = "https://redirect.orvio.co/hd/" + archive[0]
					if legenda:
						for legenda2, id in legenda:
							id2 = id.replace("P","-P")
							legenda2 = "https://subs.orvio.co/"+legenda2+id2+".vtt"
							PlayUrl(name, mp4+"|Referer=https://orvio.co/", iconimage, info, sub=legenda2)
					else:
						PlayUrl(name, mp4+"|Referer=https://orvio.co/", iconimage, info)
				else:
					sys.exit()
			else:
				sys.exit()        
	except (IndexError, ValueError):
		#xbmcgui.Dialog().ok('Play XD', 'Video não encontrado, tente outro servidor')
		sys.exit()
def SeriePlayBZ2(): # 453 #### opção 1
	try:	
		url3 = ('https://vizer.tv/includes/ajax/publicFunctions.php')
		result = {'getEpisodeLanguages': url}
		f = requests.post(url3, data=result)
		f1 = json.loads(f.text)
		f2 = json.dumps(f1, ensure_ascii=False)
		arquivo2 = urllib.parse.quote(f2)
		String2 = urllib.parse.unquote(arquivo2)
		if f:
			m2 = re.compile('lang".."(\w+)".+?id".."(.+?)"').findall(String2)
			listar=[]
			listal=[]
			for res, link in m2:
				listal.append(link)
				listar.append(res.replace("1","[COLOR red][B]Legendado[/B][/COLOR]").replace("2","[COLOR springgreen][B]Dublado[/B][/COLOR]"))
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione o idioma", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				url2x = "https://vizer.tv/includes/ajax/publicFunctions.php"
				result = {'showPlayer': url2}
				fx = requests.post(url2x, data=result)
				m22 = re.compile('"(\w+)".true').findall(fx.text)
				#m22.reverse()
				listar2=[]
				for res2 in m22:
					if "xxxxxxx" in res2: False
					else:
						listar2.append(res2.replace("fembed","[B][COLOR deepskyblue]Fembed[/B][/COLOR]").replace("mixdrop","[B][COLOR lightseagreen]Mixdrop[/B][/COLOR]").replace("streamtape","[B][COLOR mediumseagreen]Streamtape[/B][/COLOR]").replace("mystream","[B][COLOR mediumseagreen]Mystream[/B][/COLOR]"))
				if len(listar2) <1:
					xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
					sys.exit(int(sys.argv[1]))
				d2 = xbmcgui.Dialog().select("Selecione o servidor", listar2)
				if d2!= -1:
					url32 = re.sub(' ', '%20', listar2[d2].replace("[B][COLOR deepskyblue]Fembed[/B][/COLOR]","fembed").replace("[B][COLOR lightseagreen]Mixdrop[/B][/COLOR]","mixdrop").replace("[B][COLOR mediumseagreen]Streamtape[/B][/COLOR]","streamtape").replace("[B][COLOR mediumseagreen]Mystream[/B][/COLOR]","mystream") )
					urlx = "https://vizer.tv/embed/getPlay.php?id=" + url2 + "&sv=" + url32
					url4 = requests.get(urlx)
					legenda = re.compile("(.{1,7}\/wa.+?srt)").findall(url4.text)
					link2 = re.compile('href="(http.+?)"').findall(url4.text)
					link2= link2[0].replace("?","#")
					#arquivo = open(cachefolder + "5555555.txt", "w+")
					#arquivo.write(link2)
					#arquivo.close()
					#if 'mixdrop' in link2:
					if 'mixdrop' in link2:
						headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
						html = requests.get(link2.replace("mixdrop.to","mixdrop.to"), headers=headers)
						valor = re.compile("(eval.+)").findall(html.text)
						demo_eval = valor[0]
						descom = unpack(demo_eval)
						final = re.compile('MDCore.wurl="(.+?)"').findall(descom)
						end = 'https:' + final[0]
						if legenda:
							legenda = legenda[0]
							if not "http" in legenda:
								legenda = legenda
							PlayUrl(name, end+"|Referer=https://mixdrop.to/", iconimage, info, sub=legenda)
						else:
							PlayUrl(name, end+"|Referer=https://mixdrop.to/", iconimage, info)
                        
					if 'feurl.com' in link2:
						link2 = link2.replace("v","api/source").replace("feurl.com","femax20.com")
						result = {'r': '&', 'd': 'feurl.com'}
						f = requests.post(link2, data=result)
						m2 = re.compile('token=(.\w+).+?:"(\w+)').findall(f.text)
						m2.reverse()
						listar=[]
						listal=[]
						for link, res in m2:
							listal.append(link)
							listar.append(res)
						if len(listal) <1:
							xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
							sys.exit(int(sys.argv[1]))
						d = xbmcgui.Dialog().select("Selecione a resolução", listar)
						if d!= -1:
							url2 = re.sub(' ', '%20', listal[d] )
						if legenda:
							legenda = legenda[0]
							if not "http" in legenda:
								legenda = legenda
							PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info, sub=legenda)
						else:
							PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info)
                            
					if 'streamtape' in link2:
						arquivo = requests.get(link2)
						id = re.compile("getElement.+?=..(\/\/.+?)..<").findall(arquivo.text)
						if legenda:
							legenda = legenda[0]
							if not "http" in legenda:
								legenda = legenda
							PlayUrl(name,'https:'+id[0].replace('"',"").replace(" + '","")+"&stream=1|Referer=https://streamtape.com/&verifypeer=false&User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30", iconimage, info, sub=legenda)
						else:
							PlayUrl(name,'https:'+id[0].replace('"',"").replace(" + '","")+"&stream=1|Referer=https://streamtape.com/&verifypeer=false&User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30", iconimage, info)

					if 'mystream.to' in link2:
						media1 = requests.get(link2)
						match = re.search(r'(\$=.+?;)\s*<', media1.text, re.DOTALL)
						data = match.group(1)
						startpos = data.find('"\\""+') + 5
						endpos = data.find('"\\"")())()')
						first_group = data[startpos:endpos]
						pos = re.search(r"(\(!\[\]\+\"\"\)\[.+?\]\+)", first_group)
						if pos:
						    first_group = first_group.replace(pos.group(1), 'l').replace('$.__+', 't').replace('$._+', 'u').replace('$._$+','o')
						    tmplist = []
						    js = re.search(r'(\$={.+?});', data)
						    if js:
						        js_group = js.group(1)[3:][:-1]
						        second_group = js_group.split(',')
						        i = -1
						        for x in second_group:
						            a, b = x.split(':')
						            if b == '++$':
						                i += 1
						                tmplist.append(("$.{}+".format(a), i))
						
						            elif b == '(![]+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'false'[i]))
						
						            elif b == '({}+"")[$]':
						                tmplist.append(("$.{}+".format(a), '[object Object]'[i]))
						
						            elif b == '($[$]+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'undefined'[i]))
						
						            elif b == '(!""+"")[$]':
						                tmplist.append(("$.{}+".format(a), 'true'[i]))

						        tmplist = sorted(tmplist, key=lambda z: str(z[1]))
						        for x in tmplist:
						            first_group = first_group.replace(x[0], str(x[1]))

						        first_group = first_group.replace('\\"', '\\').replace("\"\\\\\\\\\"", "\\\\").replace('\\"', '\\').replace('"', '').replace("+", "")
						        final_data = first_group.encode('ascii').decode('unicode-escape').encode('ascii').decode('unicode-escape')
						        media = re.compile("'(http.+?)'").findall(final_data)
						        mp4 = media[0]
						        if legenda:
						        	legenda = legenda[0]
						        	if not "http" in legenda:
						        		legenda = legenda
						        	PlayUrl(name, mp4+"|Referer=https://mstream.press/", iconimage, info, sub=legenda)
						        else:
							        PlayUrl(name, mp4+"|Referer=https://mstream.press/", iconimage, info)
				else:
					sys.exit()
			else:
				sys.exit()        
	except (IndexError, ValueError):
		#xbmcgui.Dialog().ok('Play XD', 'Video não encontrado, tente outro servidor')
		sys.exit()
		#pass
#------------------ Vizer.tv SerieMenuBZ
def MenuVizer(): # 600
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaVZ11[int(CatVZ)] +"[/COLOR]", "url" ,235 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageVZ) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageVZ) ) +"][/B][/COLOR]", cPageVZ , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageVZ")
		l= int(cPageVZ)*1
		for x in range(0, 1):
			l +=0
			url3 = ('https://vizer.tv/includes/ajax/publicFunctions.php')
			result = {'getHomeSliderMovies': '1'}
			f = requests.post(url3, data=result)
			link = f.text
			#f = json.loads(link1)
			if ClistaVZ10[int(CatVZ)] != "0":
				link = OpenURL("https://vizer.tv/includes/ajax/ajaxPagination.php?categoriesListMovies="+ClistaVZ10[int(CatVZ)]+"&search=&page="+ str(l) +"&categoryFilterYear=all&categoryFilterOrderBy=year&categoryFilterOrderWay=desc&categoryFilterQuantity=28")
			f = json.loads(link)
			#arquivo = open(cachefolder + "vizer.txt", "w+")
			#arquivo.write(json.dumps(f, indent=4, sort_keys=True, ensure_ascii=False).replace('\n','').replace('\r',''))#.replace('\n','').replace('\r','')
			#arquivo.close()
			match = re.compile('id".+?"(.+?)".+?title".+?"(.+?)".+?url".+?"(.+?)".+?year".+?"(.+?)"').findall(json.dumps(f, indent=4, sort_keys=True, ensure_ascii=False).replace('\n','').replace('\r',''))
			#match = re.compile("'url'..'([^\"]+?)'.+?'title'..'([^\"]+?)'.+?year'..'(.+?)'.+?poster'..'(.+?)'").findall(str(f))
			if match:
				#for url2, name2, ano, img2 in match:
				for img2, name2, url2, ano in match:
					img3 = "https://vizer.tv/content/movies/posterPt/342/"+img2+".webp"
					url3 = "https://vizer.tv/filme/online/" + url2
					AddDir(name2 + " - ("+ano+")", url3, 601, img3, img3, isFolder=True, IsPlayable=True, info="[COLOR][/COLOR]")
					p += 1
		if p >= 27:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageVZ) + 2) +"][/B][/COLOR]", cPageVZ , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageVZ")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def MenuVizer2(): # 601
	trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace(" ","+")+"Trailer+Legendado")
	trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	try:
		link = OpenURL(url)
		sinopse = re.compile('class="desc.+?>\s(.+?)<\/span>').findall(link)
		sinopse = sinopse[0]
		hexd = re.compile('watchMovie.(\w+)." id').findall(link)
		hexd= hexd[0]
		url3 = ('https://vizer.tv/includes/ajax/publicFunctions.php')
		result = {'watchMovie': hexd}
		f = requests.post(url3, data=result)
		f1 = json.loads(f.text)
		#f2 = json.dumps(f1, ensure_ascii=False)
		arquivo = open(cachefolder + "vizer.txt", "w+")
		arquivo.write(json.dumps(f1, indent=4, sort_keys=True, ensure_ascii=False).replace('\n','').replace('\r',''))
		arquivo.close()
		match = re.compile('"id".+?"(.+?)".+?"lang".."(.+?)"').findall(json.dumps(f1, indent=4, sort_keys=True, ensure_ascii=False).replace('\n','').replace('\r',''))
		#match = re.compile('lang".."(.+?)".+?:.+?"(.+?)"').findall(String2)
		match.reverse()
		if match:
				for url2, name2 in match:
					name2 = name2.replace("Original"," [COLOR red][B]Legendado[/B][/COLOR]").replace("Dublado"," [COLOR springgreen][B]Dublado[/B][/COLOR]")
					#name2 = name2.replace("Original"," [COLOR red][B]Legendado[/B][/COLOR]").replace("Português"," [COLOR springgreen][B]Dublado[/B][/COLOR]")
					AddDir(name2, url2, 602, iconimage, iconimage, isFolder=False, IsPlayable=True, info= sinopse)
	except:
		pass
		link = OpenURL(url)
		#sinopse = re.compile('class="desc.+?>\s(.+?)<\/span>').findall(link)
		#sinopse = sinopse[0]
		hexd = re.compile('watchMovie.(\w+)." id').findall(link)
		hexd= hexd[0]
		url3 = ('https://vizer.tv/includes/ajax/publicFunctions.php')
		result = {'watchMovie': hexd}
		f = requests.post(url3, data=result)
		f1 = json.loads(f.text)
		#f2 = json.dumps(f1, ensure_ascii=False)
		arquivo = open(cachefolder + "vizer.txt", "w+")
		arquivo.write(json.dumps(f1, indent=4, sort_keys=True, ensure_ascii=False).replace('\n','').replace('\r',''))
		arquivo.close()
		match = re.compile('"id".+?"(.+?)".+?"lang".."(.+?)"').findall(json.dumps(f1, indent=4, sort_keys=True, ensure_ascii=False).replace('\n','').replace('\r',''))
		match.reverse()
		#match = re.compile('lang".."(.+?)".+?:.+?"(.+?)"').findall(String2)
		if match:
				for url2, name2 in match:
					name2 = name2.replace("Original"," [COLOR red][B]Legendado[/B][/COLOR]").replace("Dublado"," [COLOR springgreen][B]Dublado[/B][/COLOR]")
					#name2 = name2.replace("Original"," [COLOR red][B]Legendado[/B][/COLOR]").replace("Português"," [COLOR springgreen][B]Dublado[/B][/COLOR]")
					AddDir(name2, url2, 602, iconimage, iconimage, isFolder=False, IsPlayable=True, info= "[COLOR][/COLOR]")
def PlayVizer1(): # 602
	try:	
				urlx = "https://vizer.tv/embed/getEmbed.php?orvio=" + url
				url4 = requests.get(urlx)
				link2 = re.compile('src="(http.+?)"').findall(url4.text)
				link2= link2[0].replace("?","#")
				if 'orvio' in link2:
					url23 = requests.get(link2)
					legenda = re.compile('videoId.+?"(.+?)".\s+.+\s.+.\s+.\s.+\s.+\s.+?var subsArray.+?"(.+?)"').findall(url23.text)
					archive = re.compile('hashLink.+?"(.+?)"').findall(url23.text)
					mp4 = "https://redirect.orvio.co/hd/" + archive[0]
					if legenda:
						for legenda2, id in legenda:
							id2 = id.replace("P","-P")
							legenda2 = "https://subs.orvio.co/"+legenda2+id2+".vtt"
							PlayUrl(name, mp4+"|Referer=https://orvio.co/", iconimage, info, sub=legenda2)
					else:
						PlayUrl(name, mp4+"|Referer=https://orvio.co/", iconimage, info)
	except:
		xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
		sys.exit()

def PlayVizer(): # 602 ###### opção 1
	try:	
			url2x = "https://vizer.tv/includes/ajax/publicFunctions.php"
			result = {'showPlayer': url}
			f = requests.post(url2x, data=result)
			m2 = re.compile('"(\w+)".true').findall(f.text)
			#m2.reverse()
			listar=[]
			for res in m2:
				if "xxxxxxx" in res: False
				else:
					listar.append(res.replace("fembed","[B][COLOR deepskyblue]Fembed[/B][/COLOR]").replace("mixdrop","[B][COLOR lightseagreen]Mixdrop[/B][/COLOR]").replace("streamtape","[B][COLOR mediumseagreen]Streamtape[/B][/COLOR]").replace("mystream","[B][COLOR mediumseagreen]Mystream[/B][/COLOR]"))
			if len(listar) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione o servidor", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listar[d].replace("[B][COLOR deepskyblue]Fembed[/B][/COLOR]","fembed").replace("[B][COLOR lightseagreen]Mixdrop[/B][/COLOR]","mixdrop").replace("[B][COLOR mediumseagreen]Streamtape[/B][/COLOR]","streamtape").replace("[B][COLOR mediumseagreen]Mystream[/B][/COLOR]","mystream") )
				urlx = "https://vizer.tv/embed/getPlay.php?id=" + url + "&sv=" + url2
				url4 = requests.get(urlx)
				legenda = re.compile("(.{1,7}\/wa.+?srt)").findall(url4.text)
				link2 = re.compile('href="(http.+?)"').findall(url4.text)
				link2= link2[0].replace("?","#")
				if 'orvio' in link2:   ###################################################
					url23 = requests.get(link2)
					archive = re.compile('hashLink.+?"(.+?)"').findall(url23.text)
					mp4 = "https://redirect.orvio.co/hd/" + archive[0]
					if legenda:
						legenda = legenda[0]
						if not "http" in legenda:
							legenda = legenda
						PlayUrl(name, mp4+"|Referer=https://orvio.co/", iconimage, info, sub=legenda)
					else:
						PlayUrl(name, mp4+"|Referer=https://orvio.co/", iconimage, info)
				if 'mixdrop' in link2:
						headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
						html = requests.get(link2.replace("mixdrop.to","mixdrop.to"), headers=headers)
						valor = re.compile("(eval.+)").findall(html.text)
						demo_eval = valor[0]
						descom = unpack(demo_eval)
						final = re.compile('MDCore.wurl="(.+?)"').findall(descom)
						end = 'https:' + final[0]
						if legenda:
							legenda = legenda[0]
							if not "http" in legenda:
								legenda = legenda
							PlayUrl(name, end+"|Referer=https://mixdrop.to/", iconimage, info, sub=legenda)
						else:
							PlayUrl(name, end+"|Referer=https://mixdrop.to/", iconimage, info)
                        
				if 'feurl.com' in link2:
					link2 = link2.replace("v","api/source").replace("feurl.com","femax20.com")
					result = {'r': '&', 'd': 'feurl.com'}
					f = requests.post(link2, data=result)
					m2 = re.compile('token=(.\w+).+?:"(\w+)').findall(f.text)
					m2.reverse()
					listar=[]
					listal=[]
					for link, res in m2:
						listal.append(link)
						listar.append(res)
					if len(listal) <1:
						xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
						sys.exit(int(sys.argv[1]))
					d = xbmcgui.Dialog().select("Selecione a resolução", listar)
					if d!= -1:
						url2 = re.sub(' ', '%20', listal[d] )
					if legenda:
						legenda = legenda[0]
						if not "http" in legenda:
							legenda = legenda
						PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info, sub=legenda)
					else:
						PlayUrl(name, "https://fvs.io/redirector?token="+url2, iconimage, info)
                        
				if 'streamtape' in link2:
						arquivo = requests.get(link2)
						id = re.compile("getElement.+?=..(\/\/.+?)..<").findall(arquivo.text)
						if legenda:
							legenda = legenda[0]
							if not "http" in legenda:
								legenda = legenda
							PlayUrl(name,'https:'+id[0].replace('"',"").replace(" + '","")+"&stream=1|Referer=https://streamtape.com/&verifypeer=false&User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30", iconimage, info, sub=legenda)
						else:
							PlayUrl(name,'https:'+id[0].replace('"',"").replace(" + '","")+"&stream=1|Referer=https://streamtape.com/&verifypeer=false&User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30", iconimage, info)
				if 'mystream.to' in link2:
					media1 = requests.get(link2)
					match = re.search(r'(\$=.+?;)\s*<', media1.text, re.DOTALL)
					data = match.group(1)
					startpos = data.find('"\\""+') + 5
					endpos = data.find('"\\"")())()')
					first_group = data[startpos:endpos]
					pos = re.search(r"(\(!\[\]\+\"\"\)\[.+?\]\+)", first_group)
					if pos:
					    first_group = first_group.replace(pos.group(1), 'l').replace('$.__+', 't').replace('$._+', 'u').replace('$._$+','o')
					    tmplist = []
					    js = re.search(r'(\$={.+?});', data)
					    if js:
					        js_group = js.group(1)[3:][:-1]
					        second_group = js_group.split(',')
					        i = -1
					        for x in second_group:
					            a, b = x.split(':')
					            if b == '++$':
					                i += 1
					                tmplist.append(("$.{}+".format(a), i))
					
					            elif b == '(![]+"")[$]':
					                tmplist.append(("$.{}+".format(a), 'false'[i]))
					
					            elif b == '({}+"")[$]':
					                tmplist.append(("$.{}+".format(a), '[object Object]'[i]))
					
					            elif b == '($[$]+"")[$]':
					                tmplist.append(("$.{}+".format(a), 'undefined'[i]))
					
					            elif b == '(!""+"")[$]':
					                tmplist.append(("$.{}+".format(a), 'true'[i]))

					        tmplist = sorted(tmplist, key=lambda z: str(z[1]))
					        for x in tmplist:
					            first_group = first_group.replace(x[0], str(x[1]))

					        first_group = first_group.replace('\\"', '\\').replace("\"\\\\\\\\\"", "\\\\").replace('\\"', '\\').replace('"', '').replace("+", "")
					        final_data = first_group.encode('ascii').decode('unicode-escape').encode('ascii').decode('unicode-escape')
					        media = re.compile("'(http.+?)'").findall(final_data)
					        mp4 = media[0]
					        if legenda:
					        	legenda = legenda[0]
					        	if not "http" in legenda:
					        		legenda = legenda
					        	PlayUrl(name, mp4+"|Referer=https://mstream.press/", iconimage, info, sub=legenda)
					        else:
						        PlayUrl(name, mp4+"|Referer=https://mstream.press/", iconimage, info)
			else:
				sys.exit()
	except:
		#xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
		sys.exit()
# --------------  Fim menu
def FilmesHD(): #530
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaFHD11[int(CatHD)] +"[/COLOR]", "url" ,234 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageFHD) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageFHD) ) +"][/B][/COLOR]", cPageFHD , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageFHD", info='\xa0')
		l= int(cPageFHD)*4
		for x in range(0, 4):
			l +=1
			link = OpenURL("https://filmesviatorrents.site/"+ClistaFHD10[int(CatHD)]+"/page/"+ str(l) +"/?tr_post_type=1",headers={'Referer':'https://filmesviatorrents.site/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).replace('\n','').replace('\r','').replace("  ","").replace("Dub & Leg","Dubleg")
			match = re.compile('TPost C"><a href="(.+?)">.+?src="(.+?)".alt=".+? (.+?)".+?ClB">(\w+).{1,99}<div class="mi').findall(link)
			if match:
				for link, img2, name2,dubleg in match:
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					#if "Temporada" in name2: False
					#else:
					AddDir(name2+" ("+dubleg.replace("Dubleg","Dublado & Legendado")+")", link, 531, "https:"+img2.replace("w185","original"), "https:"+img2.replace("w185","original"), isFolder=True, IsPlayable=True, info='\xa0')
					p += 1
		if p >= 80:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageFHD) + 2) +"][/B][/COLOR]", cPageFHD , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageFHD", info='\xa0')
	except:
		pass
def FilmesHDmenu(): #531
	try:
		you = re.compile("(\w.+?)[)]").findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		trailer = requests.get("https://www.youtube.com/results?search_query="+ you[0].replace("Dublado & Legendado","").replace("Legendado","").replace("Dublado","").replace(" ","+").replace("(","")+"+Trailer"+"")
		namey = re.compile('\w').findall(you[0])
		trailer2 = re.compile('"label":"'+namey[0]+'.+?"label":"([0-5].minuto|[0-9][0-9].segundo).+?addedVideoId":"(.+?)"').findall(trailer.text.replace('Filme ','').replace('FILME ','').replace('TRAILER ','').replace('Trailer','').replace('“',''))
		AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0][1], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+you[0].replace("(","").replace("Dublado & Legendado","").replace("Legendado","").replace("Dublado",""))
	except:
		pass
	try:	
		link = requests.get(url,headers={'Referer':'https://filmesviatorrents.site/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
		sinopse = re.compile("Description.+?p>(.+?)<").findall(link.text)
		filmes = re.compile("(Filmes via Torrent<.a> &gt;.<span.class)").findall(link.text)
		filmes = filmes[0]
		hexd = re.compile("href='(magnet.+?)'.+\s.+?>(.+?)<.+?an>(.+?)<").findall(link.text)
		for link, resolu, name2 in hexd:
			name2 = name2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]")
			if "Baixar" in name2 or "Filmes Torrent" in name2: False
			else:
				if sinopse:
					for info1 in sinopse:
						AddDir(resolu+" - "+name2, link, 532, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
				else:
					AddDir(resolu+" - "+name2, link, 532, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
	except:
		pass
	try:	
		link = requests.get(url)
		sinopse = re.compile("Description.+?p>(.+?)<").findall(link.text)
		filmes = re.compile("(Filmes via Torrent<.a> &gt;.<span.class)").findall(link.text)
		filmes = filmes[0]
		hexd = re.compile('href="(magnet.+?)">.+\s.+?>(.+?)<.+?an>(.+?)<').findall(link.text)
		for link, resolu, name2 in hexd:
			name2 = name2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]")
			if "Baixar" in name2 or "Filmes Torrent" in name2: False
			else:
				if sinopse:
					for info1 in sinopse:
						AddDir(resolu+" - "+name2, link, 532, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
				else:
					AddDir(resolu+" - "+name2, link, 532, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
	except:
		pass
	link = requests.get(url)
	sinopse = re.compile("Description.+?p>(.+?)<").findall(link.text)
	hexd = re.compile("<b>(.+?)<(.+)").findall(link.text.replace("<b>","\n<b>"))
	for name2, link in hexd:
		name2 = name2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]")
		if "Baixar" in name2 or "Filmes Torrent" in name2: False
		else:
			if sinopse:
				for info1 in sinopse:
					AddDir(name2, link, 535, iconimage, iconimage, isFolder=True, IsPlayable=False, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
			else:
				AddDir(name2, link, 535, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
def FilmesHDPlay(): #532
	PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url, subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
	try:
		popup = re.compile("(\w.+?)([(])").findall(background.replace(',',''))
		popup = popup[0][0]
		xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(popup, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
	except:
		pass
	try:
		dir = cachefolder+'Legendas'
		dir2 = os.listdir(dir)
		for f in dir2:
			if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
				os.remove(os.path.join(dir, f))
	except:
		pass
	try:
		dir =  cachefolder+'Legendas'
		dir2 = os.listdir(dir)
		for f in dir2:
			shutil.rmtree(cachefolder+'Legendas/'+f)
	except:
		pass
	try:
		re22 = re.compile("(\w.+?)([(])").findall(background)
		recom2 = re22[0][0]
		leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
		leg1x1 = recom2[:-1].split(' ')
		notific1 = (['\w' + name[1:] + '' for name in leg1x1])
		cut = ' '.join(notific1)
		try:
			leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
			legx = leg2[0]
		except:
			urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
			leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
		leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
	except:
		pass
	try:
		#backcut = re.compile('\((\w+)\)').findall(background)
		#leg4x = leg4[0][:-1].split(' ')
		#notific = (['\w'+name[1:]+'' for name in leg4x])
		#leg4xx = ' '.join(notific)
		url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		try:
			dev1x = re.compile('href=".{1,400}' + leg4[0][:-1] + '.-.\(').findall(url5)
			off1 = dev1x[0]
		except:
			dev1x = re.compile('href=".{1,400}' + leg4[0][:-1] + '.-.\(').findall(url5)
		dev1 = re.compile('href="(.title.+?)"').findall(dev1x[0])
		url2 = requests.get('https://www.elsubtitle.com'+dev1[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		try:
			devx = re.compile('Brazil.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
			off = devx[0]
			url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-br', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		except:
			try:
				devx = re.compile('Portugal.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
				off = devx[0]
				url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			except:
				devx = re.compile('Portugue.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
				url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
		teste3 = 'https://www.elsubtitle.com' + dev2[0]

		path = cachefolder+"Legendas/"
		try:
			os.remove(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt')
		except:
			pass
		response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
		with open(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt', 'wb')as file: file.write(response.content)
		try:
			local = os.path.abspath(cachefolder+"Legendas")
			for p, _, files in os.walk(local):
				for file in files:
					filex = file.replace('(','#%').replace(')','#@')
					arquivos = os.path.join(p, filex)
					arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
					arquivos1x = arquivos1
					teste = str(arquivos1x).replace('\n','').replace('\r','')
					final = re.compile('.+srt').findall(teste)
					for teste in final:
						arquivos2 = re.compile('.'*5+'.srt').findall(teste)
						os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
		except:
			pass
		for nome in os.listdir(cachefolder+"Legendas/"):
					#if 'Legendei' in nome or 'Legendas-Dev' in nome or 'OpenSubtitles' in nome: False
					#else:
			if ".srt" in nome:
				novo_nome = "Elsubtitle (Brasil)-pt.forced" + ".srt"
				os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
				renam = cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt"
				renam = renam[0]
	except:
		pass
	try:
				#arquivo = open(cachefolder + "LegendaT.txt", "w+")
				#arquivo.write(leg4[0])
				#arquivo.close()
		url5 = requests.get("https://legendei.top/?s="+leg4[0],headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
		teste = re.compile('thumbnail">\s\s.+?href="(.+?)".+?title.+?'+leg4[0][:-1]+'\s[(]').findall(url5)
		teste = teste[0]
		teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
		teste3 = teste3[0]

		path = cachefolder+"Legendas/"
		try:
			os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
		except:
			pass
		response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

		file = zipfile.ZipFile(io.BytesIO(response.content))

		file.extractall(path)
		try:
			local = os.path.abspath(cachefolder+"Legendas")
			for p, _, files in os.walk(local):
				for file in files:
					filex = file.replace('(','#%').replace(')','#@')
					arquivos = os.path.join(p, filex)
					arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
					arquivos1x = arquivos1
					teste = str(arquivos1x).replace('\n','').replace('\r','')
					final = re.compile('.+srt').findall(teste)
					for teste in final:
						arquivos2 = re.compile('.'*5+'.srt').findall(teste)
						os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
		except:
			pass
		for nome in os.listdir(cachefolder+"Legendas/"):
			if 'Elsubtitle' in nome: False
			else:
				if ".srt" in nome:
					novo_nome = "Legendei (Brasil)-pt" + ".srt"
					os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
					renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
					renam = renam[0]
	except:
		pass
	'''try:
				url5 = requests.get('https://subtitles123.com/category/brazillian-portuguese/?s='+leg4[0].replace(':','')).text
				dev1 = re.compile('"headline"><a href="(.+?)".+?bookmark">'+leg4[0][:-1].replace(': ','.').replace(' ','.')+'.[0-9]').findall(url5)
				url2 = requests.get(dev1[0]).text
				dev2 = re.compile('<a href="(.+?)"><button').findall(url2)
				teste3 = dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				try:
					file = zipfile.ZipFile(io.BytesIO(response.content))
        
					file.extractall(path)
				except:
					pass
					with open(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendas-Dev (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendas-Dev (Brasil)-pt.srt"
							renam = renam[0]
	except:
		pass'''
	try:
		link = requests.get("https://www.opensubtitles.org/pb/search2/sublanguageid-pob/moviename-"+leg4[0].replace(' ','+'),headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
		link2 = re.compile('href=".pb.search.sublanguageid-pob.(idmovie-\w+)">'+leg4[0][:-1]+'[(]').findall(link.text.replace('\n','').replace('\r',''))
		try:
			link3 = "https://www.opensubtitles.org/pb/search/"+link2[0]+"/sublanguageid-pob"
			link4 = requests.get(link3)
			link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link4.text)
			link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
			link6 = re.compile('bt-th" rel="(.+?)"').findall(link4.text)
		except:
			link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link.text)
			link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
			link6 = re.compile('bt-th" rel="(.+?)"').findall(link.text)
		try:
			download = "https://dl.opensubtitles.org/pb/download/sub/"+link5[0]
		except:
			pass
		try:
			download = "https://dl.opensubtitles.org/pb/download/sub/"+link6[0]
		except:
			pass

		path = cachefolder+"Legendas/"
		try:
			os.remove(cachefolder+'Legendas/OpenSubtitles (Brasil)-pt.srt')
		except:
			pass
		response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

		file = zipfile.ZipFile(io.BytesIO(response.content))

		file.extractall(path)
		try:
			local = os.path.abspath(cachefolder+"Legendas")
			for p, _, files in os.walk(local):
				for file in files:
					filex = file.replace('(','#%').replace(')','#@')
					arquivos = os.path.join(p, filex)
					arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
					arquivos1x = arquivos1
					teste = str(arquivos1x).replace('\n','').replace('\r','')
					final = re.compile('.+srt').findall(teste)
					for teste in final:
						arquivos2 = re.compile('.'*5+'.srt').findall(teste)
						os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
		except:
			pass
		for nome in os.listdir(cachefolder+"Legendas/"):
			if 'Legendei' in nome or 'Elsubtitle' in nome: False
			else:
				if ".srt" in nome:
					novo_nome = "OpenSubtitles (Brasil)-pt" + ".srt"
					os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
					renam = cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt"
					renam = renam[0]
	except:
		pass
	try:
		link = requests.get("https://www.baixarlegenda.net/?s="+popup[:-1].replace(' ','+'), headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n', '').replace('\r', '')
		match = re.compile('title">'+popup[:-1]+'<.+?<.span> <.div> <a href="(.+?)"').findall(link)
		link2 = requests.get(match[0], headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		match2 = re.compile('href="(.+?)" class="btn sm rnd blk">Download').findall(link2.replace('#038;',''))
		download = match2[0]
		path = cachefolder+"Legendas/"
		try:
					os.remove(cachefolder+'Legendas/Baixarlegenda (Brasil)-pt.srt')
		except:
					pass
		response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.baixarlegenda.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

		file = zipfile.ZipFile(io.BytesIO(response.content))

		file.extractall(path)
		try:
			local = os.path.abspath(cachefolder+"Legendas")
			for p, _, files in os.walk(local):
				for file in files:
					filex = file.replace('(','#%').replace(')','#@')
					arquivos = os.path.join(p, filex)
					arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
					arquivos1x = arquivos1
					teste = str(arquivos1x).replace('\n','').replace('\r','')
					final = re.compile('.+srt').findall(teste)
					for teste in final:
						arquivos2 = re.compile('.'*5+'.srt').findall(teste)
						os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
		except:
			pass
		for nome in os.listdir(cachefolder+"Legendas/"):
			if 'Legendei' in nome or 'Elsubtitle' in nome or 'OpenSubtitles' in nome: False
			else:
				if ".srt" in nome:
					novo_nome = "Baixarlegenda (Brasil)-pt" + ".srt"
					os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
					renam = cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"
					renam = renam[0]
	except:
		pass
	try:
		notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
		teste = re.compile('srt').findall(str(notific))
		teste = teste[0]
		LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Baixarlegenda (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
		legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
		xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(popup,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
	except:
		try:
			xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(popup, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
		except:
			pass

    
    
########### Torrent Serie ##########################

def Filmesviatorrent(): # 533
	pagina = "0" if not cPageserCM else cPageserCM
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserCM", info='\xa0')
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			link = requests.get("https://filmesviatorrents.site/series-torrent/page/"+ str(y) +"/",headers={'Referer':'https://filmesviatorrents.site/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
			match = re.compile('<a href="(.+?)">\s.+\s.+\s.+src="(.+?)".+?alt="Imagem (.+?)"').findall(link.text)
			if match:
				for link, img2, name2 in match:
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					AddDir(name2, link, 534, "https:"+img2.replace("w185","original"), "https:"+img2.replace("w185","original"), isFolder=True, IsPlayable=True, info="[COLOR][/COLOR]")
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserCM", info='\xa0')
    
def Filmesviatorrentmenu1(): #534
	try:	
		link = requests.get(url,headers={'Referer':'https://filmesviatorrents.site/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(link.text.replace("<b>","\n<b>"))
		#arquivo.close()
		hexd = re.compile("<b>(.+?)<(.+)").findall(link.text.replace("<b>","\n<b>").replace('<b>Filmes Torrent</b>',''))
		teste = hexd[0]
		for name2, link in hexd:
			if "Filmes Torrent" in name2: False
			else:
				name2 = name2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]")
				AddDir(name2, link, 535, iconimage, iconimage, isFolder=True, IsPlayable=False, info="[COLOR][/COLOR]")
	except:
		pass
		link = requests.get(url,headers={'Referer':'https://filmesviatorrents.site/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(link.text.replace("<b>","\n<b>"))
		#arquivo.close()
		hexd = re.compile('<strong>(.+?)<a(.+)').findall(link.text.replace("<b>","\n<b>").replace('"',"'"))
		for name2, link in hexd:
			if "Filmes Torrent" in name2 or 'Episódio' in name2 or 'color:' in name2 or 'original' in name2: False
			else:
				#name2 = name2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]")
				AddDir(name2.replace(':',''), link, 536, iconimage, iconimage, isFolder=False, IsPlayable=True, info="[COLOR][/COLOR]")
def Filmesviatorrentmenu2(): #535
		hexd = re.compile("<.div><div>(.+?) <(.+)").findall(url.replace("</div><div>","\n</div><div>"))
		try:
			url3 = ([name1 for name1, link in hexd])
			if re.search(r'(o [0-9][0-9]\b)|x([0-9][0-9]\b)|O ([0-9][0-9]\b)', str(url3)):
				teste = false
			else:
				teste = ''
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, link in hexd])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 542, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for name2, link in hexd:
			AddDir(name2.replace(':',''), link, 536, iconimage, iconimage, isFolder=False, IsPlayable=True, info="[COLOR][/COLOR]")
    
def Filmesviatorrentplay(): #536
	listar=[]
	listal=[]
	match = re.compile("href='(magnet.+?)'.+?>(.+?)<").findall(url)
	if match:
		for url2,name2 in match:
			listal.append(url2)
			listar.append(name2)
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:

				try:
					re22 = re.compile("(\w.+?) [(]").findall(background)
					recom2 = urllib.parse.unquote(re22[0].replace('.',' '))
					recom2 = re.sub('.+-.', '', recom2)
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(url2x)
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
						#arquivo = open(cachefolder + "ComandotoT.txt", "w+")
						#arquivo.write(recom2)
						#arquivo.close()
				except:
					pass
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				url5 = requests.get("https://legendei.top/?s="+recom2,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste = re.compile('thumbnail.+\s.+?href="(.+?)"').findall(url5)
				teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						new1 = re.compile('E([0-9][0-9])').findall(recom2)[0]
						if 'E'+new1 in nome or 'e'+new1 in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass


# --------------  Inicio Assistir.biz
def AssistirbizMENU2(): # 514
	try:
			link = OpenURL("https://assistir.biz/home").replace('\n','').replace('\r','')
			hex2 = re.compile('<div class="tab-content" id="myTabContent">(.+?)<div class="tab-pane fade"').findall(link)
			hex2 = hex2[0]
			match = re.compile('data-src="([^\"]+)".+?rate">([^\"]+)<\/span.+?a href="([^\"]+)">([^\"]+)<\/a.+?,.([^\"]+)<\/a').findall(hex2)
			if match:
				for img2, imdb, url2,name2, ano in match:
					url2= url2.replace("/filme","https://assistir.biz/filme")
					img2= img2.replace("//image","https://image").replace("w185","original")
					if "tvshows" in url2: False
					else:
						AddDir(name2+ " - ("+ano+")", url2, 515, img2, img2, info="[COLOR yellow][B]IMDb *[COLOR green]"+imdb+"[/B][/COLOR]", isFolder=True, IsPlayable=True)
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def AssistirbizMENU(): # 514
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaBIZ11[int(CatBB)] +"[/COLOR]", "url" ,232 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
			link = OpenURL("https://assistir.biz/home").replace('\n','').replace('\r','')
			hex2 = re.compile('id="owl_lancamentos">(.+?). ASSISTIDOS').findall(link)
			hex2 = hex2[0]
			match = re.compile('data-src="([^\"]+)".+?rate">([^\"]+)<\/span.+?a href="([^\"]+)">([^\"]+)<\/a.+?,.([^\"]+)<\/a').findall(hex2)
			if ClistaBIZ10[int(CatBB)] != "0":
				link = OpenURL("https://assistir.biz/categoria/"+ClistaBIZ10[int(CatBB)])
				match = re.compile('data-src="([^\"]+)".+\s.+.\s.+.\s.+.\s.+?">([^\"]+)<\/span>\s.+.\s.+.\s.+?a href="([^\"]+)".alt="([^\"]+)".+\s.+\s.+?">([^\"]+)<\/a').findall(link)
			if match:
				for img2, imdb, url2,name2, ano in match:
					url2= url2.replace("/filme","https://assistir.biz/filme")
					img2= img2.replace("//image","https://image").replace("w185","original")
					if "tvshows" in url2: False
					else:
						AddDir(name2+ " - ("+ano+")", url2, 515, img2, img2, info="[COLOR yellow][B]IMDb *[COLOR green]"+imdb+"[/B][/COLOR]", isFolder=True, IsPlayable=True)
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def AssistirbizLista(): #515
	trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace(" ","+")+"Trailer+Legendado")
	trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	link = requests.get(url)
	hexd = re.compile('"tab-pane.+? id="(.+?)".+?(assistir.biz\/iframe\/.+?)"').findall(link.text.replace("\r","").replace("\n","").replace("hls","2"))
	sinopse = re.compile('<i>([^\"]+)<\/i>').findall(link.text)
	#sinopse = sinopse[0]
	if hexd:
		for name2, url2 in hexd:
			name2 = name2.replace("player-1","[B][COLOR lightseagreen](Mediafire)[/B][/COLOR]").replace("player-2","[B][COLOR deepskyblue](Astr)[/B][/COLOR]").replace("player-3","[B][COLOR deepskyblue](Astr)[/B][/COLOR]")
			AddDir(name2 + "[COLOR blue] - Dublado[/COLOR]", "https://"+url2, 516, iconimage, iconimage, isFolder=False, IsPlayable=True, info=sinopse)
def AssistirbizPlay(): #516
	try:	
			linkx = requests.get(url)
			m2 = re.compile('(assistir.biz.+?)".+?mp4".\w+="([^\"]+)"').findall(linkx.text)
			m2.reverse()
			legenda = re.compile('subdata..([^\"]+)').findall(url)
			listar=[]
			listal=[]
			for link, res in m2:
				listal.append(link)
				listar.append(res)
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				#global background
				#background=background+";;;"+name+";;;MM"
				if legenda:
					legenda = legenda[0]
					if not "http" in legenda:
						legenda = "https://sub.streamservice.online/subdata/" + legenda
					PlayUrl(name,'https://' + url2, iconimage, info, sub=legenda)
				else:
					PlayUrl(name,'https://' + url2, iconimage, info)
			else:
				sys.exit()
	except (IndexError, ValueError):
		xbmcgui.Dialog().ok('Play XD', 'Video não encontrado')
		sys.exit()
# --------------  Inicio QueroFilmes
def QuerofilmeshdMENU(): # 510
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaQUE11[int(CatQ1)] +"[/COLOR]", "url" ,231 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageQlf) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageQlf) ) +"][/B][/COLOR]", cPageQlf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageQlf")
		l= int(cPageQlf)*1
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://querofilmeshd.online/genero/"+ClistaQUE10[int(CatQ1)]+"/page/"+ str(l))
			match = re.compile('img src="([^\"]+)".+?alt="([^\"]+)".+?href="([^\"]+).+?<span>.+?,.(\w+)').findall(link.replace('\n','').replace('\r',''))
			if match:
				for img2,name2,url2,ano in match:
					img2= img2.replace("w185","original")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					if "tvshows" in url2: False
					else:
						AddDir(name2 + " - ("+ano+")" ,url2, 511, img2, img2, info='\xa0', isFolder=True, IsPlayable=True)
					p += 1
			else:
				break
		if p >= 30:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageQlf) + 2) +"][/B][/COLOR]", cPageQlf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageQlf")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def QuerofilmeshdLista(): #511
	i=0
	link2 = requests.get(url)
	link = OpenURL(url).replace('\n','').replace('\r','')
	sinopse = re.compile('wp-content">.+?<p>(.+?)<\/p>').findall(link)
	sinopse= sinopse[0].replace(' &#8211; Online Dublado e Legendado','').replace('Assistir ','').replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
	match2 = re.findall("online\/.p=([^\"]+)'", link2.text)
	url3 = ('https://querofilmeshd.online/wp-admin/admin-ajax.php')
	headers = {'Content-Type': 'application/x-www-form-urlencoded'}
	result = {'action': 'doo_player_ajax', 'post': match2, 'nume': '1','type': 'movie'}
	f = requests.post(url3, data = result, headers=headers)
	url4 = re.compile('(http.+?)"').findall(f.text)
	url4 = url4[0].replace('\/','/')
	link3 = requests.get(url4)
	w2 = link3.text
	match4 = re.compile('idS:."(\w+)').findall(w2)
	name5 = re.compile('">\w+.#..(\w+)').findall(w2)
	for url2 in match4:
		AddDir(name5[i].replace("DUBLADO","[COLOR limegreen][B]DUBLADO[/B][/COLOR]").replace("LEGENDADO","[COLOR crimson][B]LEGENDADO[/COLOR][/B]"), match4[i], 513, iconimage, iconimage, isFolder=False, IsPlayable=True, info=sinopse)
		i+=1
def QuerofilmeshdPlay2(): #513 
	try:
		url5 = ('https://player.querofilmeshd.online//CallPlayer')
		headers = {'Content-Type': 'application/x-www-form-urlencoded'}
		result = {'id': url}
		f2 = requests.post(url5, data=result, headers=headers)
		hexd = codecs.decode(f2.text, "hex_codec").decode('utf-8')
		url6 = re.compile('(id=.\w+)|url.+?(https.+?)"|(files.+?)[?]').findall(hexd)
		url7 = str(url6).replace("'', '","").replace("'","").replace("\\","").replace("[(","").replace(")]","").replace(",","").replace("uhttps","https").replace(" u","").replace("u u","").replace(" ","").replace(", ","").replace("https://player.filmesonlinetv.org/public/dist/index.html?id=", "http://player.filmesonlinetv.org/playlist/")
        
		if 'http://player.filmesonlinetv.org' in url7:
			url7x = "/1588804130818"
			url8 = url7 + url7x
			m = OpenURL(url8.replace("uhttp","http"))
			if m:
				url9 = m
				m2 = re.compile('x([^\"]..)\s(\/.+?m3u8)').findall(url9)
				m2.reverse()
				legenda = re.compile('subdata..([^\"]+)').findall(url)
				listar=[]
				listal=[]
				for res, link in m2:
					listal.append(link)
					listar.append(res)
				if len(listal) <1:
					xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado')
					sys.exit(int(sys.argv[1]))
				d = xbmcgui.Dialog().select("Selecione a resolução", listar)
				if d!= -1:
					url2 = re.sub(' ', '%20', listal[d] )
					urlx = 'https://player.filmesonlinetv.org' + url2
					url4 = requests.get(urlx)
					url5 = url4.text.replace("redirect/","")
					arquivo = open(cachefolder + "movies.m3u8", "w+")
					arquivo.write(url5)
					arquivo.close()
					x1 = randrange(300)
					x = str(x1)
					session = ftplib.FTP('files.000webhost.com','unlikely-terms','gladiston')
					file = open(cachefolder + "movies.m3u8",'rb')
					session.storbinary('STOR /public_html/Cacheflix/movies'+x+'.m3u8', file)
					file.close()                      
					session.quit()
					#global background
					#background=background+";;;"+name+";;;MM"
					if legenda:
						legenda = legenda[0]
						if not "http" in legenda:
							legenda = "https://sub.streamservice.online/subdata/" + legenda
						PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://slave3.queroserieshd.com/", iconimage, info, sub=legenda)
					else:
						PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://slave3.queroserieshd.com/", iconimage, info)

		if 'drive.google.com' in url7:
			PlayUrl(name, 'plugin://plugin.video.gdrive?mode=streamURL&amp;url='+url7.replace('uhttps','https').replace('preview','view'), iconimage, info)
            
		if 'files' in url7:
			contents = url7.replace('files','https://drive.google.com/file/d')
			contents2 = contents + '/view'
			PlayUrl(name, 'plugin://plugin.video.gdrive?mode=streamURL&amp;url='+contents2.replace('uhttps','https').replace('preview','view'), iconimage, info)
            
		else:
			sys.exit()
	except (IndexError, ValueError):
		xbmcgui.Dialog().ok('Play XD', 'Video não encontrado')
		sys.exit()
#########################################################
def ListSerieQF(): #430:
	pagina = "0" if not cPageserQF else cPageserQF
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserQF")
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			l = OpenURL("https://querofilmeshd.online/genero/series/page/"+str(y)+"/")
			match = re.compile('img src="([^\"]+)".+?alt="([^\"]+)".+?href="([^\"]+).+?<span>.+?,.(\w+)').findall(l)
			if match:
				for img2,name2,url2,ano in match:
					img2= img2.replace("w185","original")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					AddDir(name2 + " - ("+ano+")" ,url2, 431, img2, img2, info='\xa0', isFolder=True, IsPlayable=True)
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserQF")
def ListTempQF(): #431
	l = OpenURL(url).replace("\n","").replace("\r","")
	m = re.compile('Season.(\d+)(.+?)<\/div><\/div>').findall(l)
	for temp2,cont2 in m:
		AddDir("Temporada "+ temp2, cont2, 432, iconimage, iconimage, isFolder=True)
def ListEpiQF(): #432
	epis = re.compile("numerando'>. - (\d+).+?(http[^\"].+?)'").findall(url)
	for E,url2 in epis:
		AddDir("Episódio "+E,url2, 433, iconimage, iconimage, isFolder=False, IsPlayable=True)
def PlayEpiQF(): #433
	try:	
		link2 = requests.get(url)
		match2 = re.findall("online\/.p=([^\"]+)'", link2.text)
		match2 = match2[0]
		url3 = ('https://querofilmeshd.online/wp-admin/admin-ajax.php')
		headers = {'Content-Type': 'application/x-www-form-urlencoded'}
		result = {'action': 'doo_player_ajax', 'post': match2, 'nume': '1', 'type': 'tv'}
		f = requests.post(url3, data=result, headers=headers)
		url4 = re.compile('(http.+?)"').findall(f.text)
		url4 = url4[0].replace('\/','/')
		link3 = requests.get(url4)
		w2 = link3.text
		match3 = re.findall('idS."([^\"]+)', w2)
		match3 = match3[0]
		url5 = ('https://player.querofilmeshd.online//CallEpi')
		headers = {'Content-Type': 'application/x-www-form-urlencoded'}
		result = {'idS': match3}
		f2 = requests.post(url5, data=result, headers=headers)
		hexd = codecs.decode(f2.text, "hex_codec").decode('utf-8')
		url6 = re.compile('(id.\w+)').findall(hexd)
		url6 = url6[0].replace("id=", "http://player.filmesonlinetv.org/playlist/")
		url7 = "/1588804130818"
		url8 = url6 + url7
		m = OpenURL(url8)
		if m:
			url9 = m
			m2 = re.compile('x([^\"]..)\s(\/.+?m3u8)').findall(url9)
			m2.reverse()
			legenda = re.compile('subdata..([^\"]+)').findall(url)
			listar=[]
			listal=[]
			for res, link in m2:
				listal.append(link)
				listar.append(res)
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				urlx = 'https://player.filmesonlinetv.org' + url2
				url4 = requests.get(urlx)
				url5 = url4.text.replace("redirect/","")
				arquivo = open(cachefolder + "movies.m3u8", "w+")
				arquivo.write(url5)
				arquivo.close()
				x1 = randrange(300)
				x = str(x1)
				session = ftplib.FTP('files.000webhost.com','unlikely-terms','gladiston')
				file = open(cachefolder + "movies.m3u8",'rb')
				session.storbinary('STOR /public_html/Cacheflix/movies'+x+'.m3u8', file)
				file.close()                      
				session.quit()
				#global background
				#background=background+";;;"+name+";;;MM"
				if legenda:
					legenda = legenda[0]
					if not "http" in legenda:
						legenda = "https://sub.streamservice.online/subdata/" + legenda
					PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://slave3.queroserieshd.com/", iconimage, info, sub=legenda)
				else:
					PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://slave3.queroserieshd.com/", iconimage, info)

			else:
				sys.exit()
	except (IndexError, ValueError):
		xbmcgui.Dialog().ok('Play XD', 'Video não encontrado')
		sys.exit()
#def QuerofilmeshdMENU(): # 510 GoFilmes
#	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaFl1[int(CatFl)] +"[/COLOR]", "url" ,230 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
#	try:
#		p= 1
#		if int(cPageFlf) > 0:
#			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageFlf) ) +"][/B][/COLOR]", cPageFlf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageFlf")
#		l= int(cPageFlf)*3
#		for x in range(0, 4):
#			l +=1
#			link = OpenURL("http://gofilmes.me/genero/acao")
#			match = re.compile("href=\"([^\"]+)\" title\=\"([^\"]+).{1,75}src\=\"([^\"]+)").findall(link.replace('\n','').replace('\r',''))
#			if match:
#				for url2,name2,img2, in match:
#					if name2!="Close":
#						name2 = name2.replace("Assistir","").replace("Online ","").replace("Dublado e Legendado","[COLOR blue]Dublado e Legendado[/COLOR]").replace("Dublado","[COLOR blue] Dublado[/COLOR]").replace("Legendado","[COLOR blue] Legendado[/COLOR]")
#						AddDir(name2, url2, 511, img2.replace("w150_and_h225_bestv2","w342"), img2.replace("w150_and_h225_bestv2","w342"), info='\xa0', isFolder=True, IsPlayable=True)
#					p += 1
#		if p >= 97:
#			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageFlf) + 2) +"][/B][/COLOR]", cPageFlf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageFlf")
#	except:
#		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
#def QuerofilmeshdLista(): #511
#	try:	
#		link = OpenURL(url)
#		match = re.compile('(https://openvid[^\"]+).{1,30}">(.+?)<\/a>').findall(link)
#		#name = name.replace("Dublado","")
#		if match:
#			for url2, name2 in match:
#					url2 = url2.replace("https://openvid.xyz/v/","https://openvid.xyz/api/source/")
#					name2 = name2.replace("DUBLADO","[COLOR blue]Dublado[/COLOR]").replace("LEGENDADO","[COLOR blue]Legendado[/COLOR]")
#					AddDir(name.replace(" e ","").replace("Dublado","").replace("Legendado","") + name2, url2, 512, iconimage, iconimage, isFolder=True, IsPlayable=True, info="", background=url)
#	except:
#			pass
#def QuerofilmeshdPlay(): #512
#	try:	
#		url3 = (url)
#		headers = {'Content-Type': 'application/x-www-form-urlencoded'}
#		result = {'r': '', 'd': 'openvid.xyz'}
#		f = requests.post(url3, data = result, headers=headers)
#		match = re.compile('(redirector[^\"]+)".{1,10}"(.+?)"').findall(f.text)
		#m = re.compile("userdata..(.+?)\/poster").findall(url)
		#m2 = re.compile("(caption[^\"]+)").findall(url)
		#m3 = re.compile('hash"."(.+?)"').findall(url)
		#m4 = re.compile('"id".(.+?)"').findall(url)
		#m5 = re.compile('("srt"[^\"]+)').findall(url)
		#lista = re.compile("(.+)").findall(m[0]+m2[0]+m3[0]+m4[0]+m5[0])
		#lista = lista[0].replace('\captions', "/caption/").replace('"', "/").replace('/srt/,', ".srt")
#		if match:
#			for url2, name2 in match:
#				if url2!="":
#					url2 = url2.replace("redirector","https://fvs.io/redirector")
#					AddDir(name2, url2, 513, iconimage, iconimage, isFolder=False, IsPlayable=True, info="", background=url)
#	except:
#			pass
#def QuerofilmeshdPlay2(): #513
#	PlayUrl(name, url, iconimage, info, "", metah)               
def Filmes96(): #220
	link = OpenURL("https://pastebin.com/raw/ZkfFMB20")
	m = link.split("\n")
	for x in m:
		try:
			meta = eval(x)
			AddDir(meta['title'] +" [COLOR yellow]("+str(meta['year'])+")[/COLOR] "+" [COLOR blue]["+str(meta['rating'])+"][/COLOR]" , meta['mp4'] +"?play", 229, isFolder=False, IsPlayable=True, metah=meta, info='\xa0')
		except:
			pass
	setViewM()
def FilmesRC(): #221
	link = OpenURL("https://pastebin.com/raw/taJHVbXj")
	m = link.split("\n")
	link2 = OpenURL("https://pastebin.com/raw/FwSnnr65")
	i=1
	for x in m:
		try:
			meta = eval(x)
			file = meta['mp4'].split("$")
			reg = "(.+)\$"+file[1]
			m = re.compile(reg, re.IGNORECASE).findall(link2)
			url2 = m[0]
			AddDir(meta['title'] +" [COLOR yellow]("+str(meta['year'])+")[/COLOR] "+" [COLOR blue]["+str(meta['rating'])+"][/COLOR]" , url2 + file[0] +"?play|Referer=http://redecanais.xyz/", 229, isFolder=False, IsPlayable=True, metah=meta, info='\xa0')
		except:
			pass
	setViewM()
def PlayFilmes96(): #229
	PlayUrl(name, url, iconimage, info, "", metah)
# --------------  Fim Filme CB
# --------------  NETCINE
def CategoryOrdem(x):
	x2 = Addon.getSetting(eval("x"))
	name2 = "Data" if x2=="0" else "Título"
	AddDir("[COLOR green][B][Organizado por:][/B] "+name2 +" (Clique para alterar)[/COLOR]" , x, 81, "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
def CategoryOrdem2(url):
	x2 = Addon.getSetting(url)
	x = "0" if x2=="1" else "1"
	#xbmcgui.Dialog().ok("Escolha a resolução:", x + x2 + url)
	Addon.setSetting(url, x )
	xbmc.executebuiltin("Container.Refresh()")
def Series(): #60
	try:
		CategoryOrdem("cOrdNCS")
		link = requests.get("http://netcine.io/tvshows/page/1/")#,headers=headers, proxies=proxies)
		l2 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/2/")#, headers=headers, proxies=proxies)
		l3 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/3/")#, headers=headers, proxies=proxies)
		l4 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/4/")#, headers=headers, proxies=proxies)
		l5 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/5/")#, headers=headers, proxies=proxies)
		l6 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/6/")
		l7 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/7/")
		l8 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/8/")
		l9 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/9/")
		l10 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/10/")
		l11 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/11/")
		l12 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/12/")
		l13 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/13/")
		l14 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
		link = requests.get("http://netcine.io/tvshows/page/14/")
		l15 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))        
		lista = re.compile("img src\=\"([^\"]+).+?alt\=\"([^\"]+).+?f\=\"([^\"]+)").findall(l2[0]+l3[0]+l4[0]+l5[0]+l6[0]+l7[0]+l8[0]+l9[0]+l10[0]+l11[0]+l12[0]+l13[0]+l14[0]+l15[0])
		if cOrdNCS=="1":
			lista = sorted(lista, key=lambda lista: lista[1])
		for img2,name2,url2 in lista:
			if name2!="Close":
				name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
				img2 = re.sub('-120x170.(jpg|png)', r'.\1', img2 )
				AddDir(name2 ,url2, 61, img2, img2, isFolder=True, info='\xa0')
	except:
		AddDir("[COLOR mediumturquoise][B]||| Atualizar Lista |||[/B][/COLOR]" , "", 50, isFolder=False,info='Em caso de falha no carregamento clique aqui para atualizar')
		try:
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/1/")#,headers=headers, proxies=proxies)
			l2 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/2/")#, headers=headers, proxies=proxies)
			l3 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/3/")#, headers=headers, proxies=proxies)
			l4 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/4/")#, headers=headers, proxies=proxies)
			l5 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/5/")#, headers=headers, proxies=proxies)
			l6 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/6/")
			l7 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/7/")
			l8 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/8/")
			l9 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/9/")
			l10 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/10/")
			l11 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/11/")
			l12 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/12/")
			l13 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/13/")
			l14 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))
			link = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/tvshows/page/14/")
			l15 = re.compile("box_movies(.+)").findall(link.text.replace('\n','').replace('\r',''))        
			lista = re.compile("img src\=\"([^\"]+).+?alt\=\"([^\"]+).+?f\=\"([^\"]+)").findall(l2[0]+l3[0]+l4[0]+l5[0]+l6[0]+l7[0]+l8[0]+l9[0]+l10[0]+l11[0]+l12[0]+l13[0]+l14[0]+l15[0])
			if cOrdNCS=="1":
				lista = sorted(lista, key=lambda lista: lista[1])
			for img2,name2,url2 in lista:
				if name2!="Close":
					name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
					img2 = re.sub('-120x170.(jpg|png)', r'.\1', img2 )
					AddDir(name2 ,url2, 61, img2, img2, isFolder=True, info='\xa0')
		except:
			pass
def ListSNC(x): #61
	try:
		link = requests.get(url)#,headers=headers, proxies=proxies)
		m = re.compile("(.emporada \w+)(.+?class\=\'has-sub\')").findall(link.text.replace('\n','').replace('\r','').replace('<div class="soci">',"class='has-sub'").replace('\t',""))
		info2 = re.compile("<h2>Synopsis<\/h2>+.+?[div|p].{0,15}?.+?(.+?)<\/").findall(link.text)
		info2 = re.sub('style\=.+?\>', '', info2[0] ) if info2 else " "
		i=0
		if "None" in background:
			for season,epis in m:
				AddDir("[B]["+season+"][/B]" ,url, 61, iconimage, iconimage, isFolder=True, background=i,info=info2)
				i+=1
		else:
			m2 = re.compile("href\=\"([^\"]+).+?(\d+) - (\d+)").findall( m[int(x)][1] )
			m3 = re.compile("icon-chevron-right\W+\w\W+([^\<]+)").findall( m[int(x)][1] )
			for url2,S,E in m2:
				AddDir("S"+S+"E"+E +" - "+m3[i],url2, 62, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info)
				i+=1
	except:
		link = requests.get("http://138.122.11.44:443/?url="+url)#,headers=headers, proxies=proxies)
		m = re.compile("(.emporada \w+)(.+?class\=\'has-sub\')").findall(link.text.replace('\n','').replace('\r','').replace('<div class="soci">',"class='has-sub'").replace('\t',""))
		info2 = re.compile("<h2>Synopsis<\/h2>+.+?[div|p].{0,15}?.+?(.+?)<\/").findall(link.text)
		info2 = re.sub('style\=.+?\>', '', info2[0] ) if info2 else " "
		i=0
		if "None" in background:
			for season,epis in m:
				AddDir("[B]["+season+"][/B]" ,url, 61, iconimage, iconimage, isFolder=True, background=i,info=info2)
				i+=1
		else:
			m2 = re.compile("href\=\"([^\"]+).+?(\d+) - (\d+)").findall( m[int(x)][1] )
			m3 = re.compile("icon-chevron-right\W+\w\W+([^\<]+)").findall( m[int(x)][1] )
			for url2,S,E in m2:
				AddDir("S"+S+"E"+E +" - "+m3[i],url2, 62, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info)
				i+=1
def PlayS(): #62
	try:
		link = requests.get(url)#,headers=headers, proxies=proxies)
		m = re.compile("\"play-.\".+?src=\"([^\"]+)").findall(link.text.replace('\n','').replace('\r',''))
		listan = re.compile("\#play-...(\w*)").findall(link.text)
		i=0
		listaf=[]
		listal=[]
		for url2 in m:
			link3 = requests.get(url2)#,headers=headers, proxies=proxies)
			m3 = re.compile("src\=\"(.+campanha[^\"]+)").findall(link3.text)
			if m3:
				red = requests.get(m3[0])#,headers=headers, proxies=proxies)
				red2 = re.compile('redirecionar\.php\?data=([^"]+)').findall(red.text)
				link4 = requests.get(red2[0])#,headers=headers, proxies=proxies)
				link4 = re.sub('window.location.href.+', '', link4.text)
				link4 = link4.replace("'",'"')
				m4= re.compile("http.+?mp4[^\"]+").findall(link4) 
				m4 = list(reversed(m4))
				for url4 in m4:
					listal.append(url4.replace("';",""))
					dubleg="[COLOR green]HD[/COLOR][/B]" if "ALTO" in url4 else "[COLOR red]SD[/COLOR][/B]"
					listaf.append("[B][COLOR blue]"+listan[i] +"[/COLOR] "+dubleg)
			else:
				red = requests.get(url2)#,headers=headers, proxies=proxies)
				m3 = re.compile("src\=\"([^\"]+)").findall(red.text)
				red1 = requests.get(m3[0])#,headers=headers, proxies=proxies)
				red2 = re.compile('redirecionar\.php\?data=([^"]+)').findall(red1.text)
				link4 = requests.get(red2[0],headers={'Cookie': "autorizado=teste; "})
				m5 = re.compile("location.href=\'([^\']+p\=[^\']+)").findall(link4.text)
				for x in m5:
					if not "openload" in x:
						link5 = requests.get(x)#,headers=headers)#, proxies=proxies)
				link5 = re.sub('window.location.href.+', '', link5.text)
				link5 = link5.replace("'",'"')
				m4= re.compile("http.+?mp4[^\"]+").findall(link5)
				m4 = list(reversed(m4))
				for url4 in m4:
					listal.append(url4.replace("';",""))
					dubleg="[COLOR green]HD[/COLOR][/B]" if "ALTO" in url4 else "[COLOR red]SD[/COLOR][/B]"
					listaf.append("[B][COLOR blue]"+listan[i] +"[/COLOR] "+dubleg)
			i+=1
		d = xbmcgui.Dialog().select("Escolha a resolução:", listaf)
		if d!= -1:
			PlayUrl(name, listal[d]+"|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0", iconimage, info)
		else:
			sys.exit()
	except:
		try:
			link = requests.get("http://138.122.11.44:443/?url="+url)#,headers=headers, proxies=proxies)
			m = re.compile("\"play-.\".+?src=\"([^\"]+)").findall(link.text.replace('\n','').replace('\r',''))
			listan = re.compile("\#play-...(\w*)").findall(link.text)
			i=0
			listaf=[]
			listal=[]
			for url2 in m:
				link3 = requests.get("http://138.122.11.44:443/?url="+url2)#,headers=headers, proxies=proxies)
				m3 = re.compile("src\=\"(.+campanha[^\"]+)").findall(link3.text)
				if m3:
					red = requests.get("http://138.122.11.44:443/?url="+m3[0])#,headers=headers, proxies=proxies)
					red2 = re.compile('redirecionar\.php\?data=([^"]+)').findall(red.text)
					link4 = requests.get("http://138.122.11.44:443/?url="+red2[0])#,headers=headers, proxies=proxies)
					link4 = re.sub('window.location.href.+', '', link4.text)
					link4 = link4.replace("'",'"')
					m4= re.compile("http.+?mp4[^\"]+").findall(link4) 
					m4 = list(reversed(m4))
					for url4 in m4:
						listal.append(url4.replace("';",""))
						dubleg="[COLOR green]HD[/COLOR][/B]" if "ALTO" in url4 else "[COLOR red]SD[/COLOR][/B]"
						listaf.append("[B][COLOR blue]"+listan[i] +"[/COLOR] "+dubleg)
				else:
					red = requests.get("http://138.122.11.44:443/?url="+url2)#,headers=headers, proxies=proxies)
					m3 = re.compile("src\=\"([^\"]+)").findall(red.text)
					red1 = requests.get("http://138.122.11.44:443/?url="+m3[0])#,headers=headers, proxies=proxies)
					red2 = re.compile('redirecionar\.php\?data=([^"]+)').findall(red1.text)
					link4 = requests.get("http://138.122.11.44:443/?url="+red2[0],headers={'Cookie': "autorizado=teste; "})
					m5 = re.compile("location.href=\'([^\']+p\=[^\']+)").findall(link4.text)
					for x in m5:
						if not "openload" in x:
							link5 = requests.get("http://138.122.11.44:443/?url="+x)#,headers=headers)#, proxies=proxies)
					link5 = re.sub('window.location.href.+', '', link5.text)
					link5 = link5.replace("'",'"')
					m4= re.compile("http.+?mp4[^\"]+").findall(link5)
					m4 = list(reversed(m4))
					for url4 in m4:
						listal.append(url4.replace("';",""))
						dubleg="[COLOR green]HD[/COLOR][/B]" if "ALTO" in url4 else "[COLOR red]SD[/COLOR][/B]"
						listaf.append("[B][COLOR blue]"+listan[i] +"[/COLOR] "+dubleg)
				i+=1
			d = xbmcgui.Dialog().select("Escolha a resolução:", listaf)
			if d!= -1:
				PlayUrl(name, listal[d]+"|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0", iconimage, info)
			else:
				sys.exit()
		except:
			sys.exit()
# --------------------------------------
def MoviesNC(): #71 Netcine
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaGO1[int(CatGO)] +"[/COLOR]", "url" ,219 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	#AddDir("[COLOR mediumturquoise][B]||| Atualizar Lista |||[/B][/COLOR]" , "", 50, isFolder=False,info='Em caso de falha no carregamento clique aqui para atualizar')
	try:
		p= 1
		if int(cPageGOf) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageGOf) ) +"][/B][/COLOR]", cPageGOf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageGOf")
		l= int(cPageGOf)*2
		for x in range(0, 2):
			l +=1
			link = OpenURL("https://netcine.io/"+ClistaGO0[int(CatGO)]+"/page/"+ str(l)+"/?filmes").replace('\n','').replace('\r','')
			m = re.compile("box_movies(.+)").findall(link)
			lista = re.compile("img src\=\"([^\"]+).+?alt\=\"([^\"]+).+?f\=\"([^\"]+)").findall(m[0])
			if lista:
				for img2,name2,url2 in lista:
					if name2!="Close" and name2!="NetCine":
						name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
						img2 = img2.replace("-120x170","")
					if "tvshows" in url2: False
					else:
						AddDir(name2,url2, 78, img2, img2, isFolder=True, IsPlayable=True, info='\xa0')
					p += 1
		if p >= 55:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageGOf) + 2) +"][/B][/COLOR]", cPageGOf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageGOf")
	except:
		pass
		AddDir("[COLOR mediumturquoise][B]||| Atualizar Lista |||[/B][/COLOR]" , "", 50, isFolder=False,info='Em caso de falha no carregamento clique aqui para atualizar')
	try:
		p= 1
		if int(cPageGOf) > 0:
				AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageGOf) ) +"][/B][/COLOR]", cPageGOf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageGOf")
		l= int(cPageGOf)*2
		for x in range(0, 2):
				l +=1
				link2 = OpenURL("http://138.122.11.44:443/?url="+"https://netcine.io/"+ClistaGO0[int(CatGO)]+"/page/"+ str(l)+"/?filmes").replace('\n','').replace('\r','')
				m2 = re.compile("box_movies(.+)").findall(link2)
				lista2 = re.compile("img src\=\"([^\"]+).+?alt\=\"([^\"]+).+?f\=\"([^\"]+)").findall(m2[0])
				if lista2:
					for img2,name2,url2 in lista2:
						if name2!="Close" and name2!="NetCine":
							name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
							img2 = img2.replace("-120x170","")
						if "tvshows" in url2: False
						else:
							AddDir(name2,url2, 78, img2, img2, isFolder=True, IsPlayable=True, info='\xa0')
						p += 1
		if p >= 55:
				AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageGOf) + 2) +"][/B][/COLOR]", cPageGOf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageGOf")
	except:
		pass
def ListMoviesNC(): #78
    #urlx = requests.get("http://www.adorocinema.com/busca/?q="+ name.replace(" ","+"))
    #url2x = re.compile('"id":"TW92aWU6(.+?)"').findall(urlx.text)
    #decode = base64.b64decode(url2x[0])
    #decode2 = str(decode).replace("b","").replace("'","")
    #url3x = requests.get("http://www.adorocinema.com/filmes/filme-"+decode2)
    #url4x = re.compile('trailer-(.+?)\/" title').findall(url3x.text)
    #url5x = requests.get("http://www.adorocinema.com/filmes/filme-"+decode2+"/trailer-"+url4x[0]+"/")
    #final = re.compile('(br.{1,90})&quot.}').findall(url5x.text.replace("\/","/"))
    #AddDir("[B]Trailer®[/B]", "https://"+final[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
    #trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace(" ","+")+"Trailer+Legendado")
	#trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	#AddDir("[B]Trailer®[/B]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	#urlx = requests.get("https://www.imdb.com/find?q="+ name.replace(" ","+"))
	#url2x = re.compile('<a href=".title.(.+?)."').findall(urlx.text)
	#url3x = requests.get("https://www.imdb.com/title/"+url2x[0])
	#url4x = re.compile('href="(.video.+?)"').findall(url3x.text)
	#url5x = requests.get("https://www.imdb.com"+url4x[0])
	#final = re.compile('video.mp4.+?(https.+?)."').findall(url5x.text)
	#AddDir("[B]Trailer®[/B]", final[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace(" ","+")+"Trailer+Legendado")
	trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	try:
		proxy = requests.get("https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/proxy")
		proxy2 = re.compile('proxy = "(.+?)"').findall(proxy.text)
		link = OpenURL(url).replace('\n','').replace('\r','')
		m = re.compile("\"play-.\".+?src=\"([^\"]+)").findall(link)
		m2 = re.compile("\#play-...(\w*)").findall(link)
		info2 = re.compile('<h2>Synopsis<\/h2>(.*?)<\/').findall(link)
		info2 = re.sub('<(.*?)>', '', info2[0] ) if info2 else ""
		info2 = info2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”')
		i=0
		for name2 in m2:
			AddDir(name +" [COLOR blue]("+ name2 +")[/COLOR]", m[i], 79, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info2, background=url)
			i+=1
	except:
		proxy = requests.get("https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/proxy")
		proxy2 = re.compile('proxy = "(.+?)"').findall(proxy.text)
		link = OpenURL("http://138.122.11.44:443/?url="+url).replace('\n','').replace('\r','')
		m = re.compile("\"play-.\".+?src=\"([^\"]+)").findall(link)
		m2 = re.compile("\#play-...(\w*)").findall(link)
		info2 = re.compile('<h2>Synopsis<\/h2>(.*?)<\/').findall(link)
		info2 = re.sub('<(.*?)>', '', info2[0] ) if info2 else ""
		info2 = info2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”')
		i=0
		for name2 in m2:
			AddDir(name +" [COLOR blue]("+ name2 +")[/COLOR]", m[i], 79, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info2, background=url)
			i+=1
def PlayMNC(): #79
	try:
		i=0
		listaf=[]
		listal=[]
		proxy = requests.get("https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/proxy")
		proxy2 = re.compile('proxy = "(.+?)"').findall(proxy.text)
		link = OpenURL(url)
		#red = re.compile('redirecionar\.php\?data=([^"]+)').findall(link)
		#ST(red)
		#if not red:
		red2 = re.compile('http[^"]+').findall(link)
		link2 = OpenURL(red2[0])
		red = re.compile('redirecionar\.php\?data=([^"]+)').findall(link2)
		if not "desktop" in red[0]:
			link2 = OpenURL(red[0])
			red = re.compile('location.href=\'([^\']+p\=[^\']+)').findall(link2)
		link3 = OpenURL(red[0],headers={'Cookie': "autorizado=teste; "})
		link3 = re.sub('window.location.+', '', link3)
		link3 = link3.replace("'",'"')
		m4= re.compile("http.+?mp4[^\"]{0,150}").findall(link3) 
		m4 = list(reversed(m4))
		for url4 in m4:
			if not "openload" in url4:
				listal.append(url4.replace("';",""))
				dubleg="[COLOR springgreen]HD[/COLOR][/B]" if "ALTO" in url4 else "[COLOR red]SD[/COLOR][/B]"
				listaf.append("[B]"+dubleg)
		d = xbmcgui.Dialog().select("Escolha a resolução:", listaf)
		if d!= -1:
			#global background
			#background=background+";;;"+name+";;;NC"
			PlayUrl(name, listal[d]+"|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0", iconimage, info)
		else:
			sys.exit()
	except:
		try:
			i=0
			listaf=[]
			listal=[]
			link = OpenURL("http://138.122.11.44:443/?url="+url)	
			red2 = re.compile('http[^"]+').findall(link)
			link2 = OpenURL("http://138.122.11.44:443/?url="+red2[0])
			red = re.compile('redirecionar\.php\?data=([^"]+)').findall(link2)
			if not "desktop" in red[0]:
				link2 = OpenURL("http://138.122.11.44:443/?url="+red[0])
				red = re.compile('location.href=\'([^\']+p\=[^\']+)').findall(link2)
			link3 = OpenURL("http://138.122.11.44:443/?url="+red[0],headers={'Cookie': "autorizado=teste; "})
			link3 = re.sub('window.location.+', '', link3)
			link3 = link3.replace("'",'"')
			m4= re.compile("http.+?mp4[^\"]{0,150}").findall(link3) 
			m4 = list(reversed(m4))
			for url4 in m4:
				if not "openload" in url4:
					listal.append(url4.replace("';",""))
					dubleg="[COLOR springgreen]HD[/COLOR][/B]" if "ALTO" in url4 else "[COLOR red]SD[/COLOR][/B]"
					listaf.append("[B]"+dubleg)
			d = xbmcgui.Dialog().select("Escolha a resolução:", listaf)
			if d!= -1:
			#global background
			#background=background+";;;"+name+";;;NC"
				PlayUrl(name, listal[d]+"|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0", iconimage, info)
			else:
				sys.exit()
		except:
			sys.exit()
############################################ Opção Proxy
########################opção 2
#	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaGO1[int(CatGO)] +"[/COLOR]", "url" ,219 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
#	try:
#		p= 1
#		if int(cPageGOf) > 0:
#			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageGOf) ) +"][/B][/COLOR]", cPageGOf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageGOf")
#		l= int(cPageGOf)*2
#		for x in range(0, 2):
#			l +=1
#			headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
#
#			tokens, user_agent = cloudscraper2.get_tokens("https://netcine.io/", headers = headers)
#			pickle.dump(tokens, open(cachefolder + "tokens.txt","wb"))
#			arquivo2 = open(cachefolder + 'tokens.txt', 'r')
#			url4 = arquivo2.read()
#			url5 = re.compile("rance'+\s.+\s.'(.+?)'").findall(url4)
#			url6 = url5[0]
#			headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
#			cookies = {'cf_clearance': url6}
#			link = requests.get("https://netcine.io/"+ClistaGO0[int(CatGO)]+"/page/"+ str(l)+"/?filmes", headers=headers, cookies=cookies)
#			arquivo = open(cachefolder + "netcine.txt", "w+")
#			arquivo.write(link.text)
#			arquivo.close()
#			arquivo = open(cachefolder + 'netcine.txt', 'r')
#			url3 = arquivo.read()
#			lista = re.compile('img src="([^\"]+).+?alt="([^\"]+).+\s+.+?href="([^\"]+)').findall(url3)
#			if lista:
#			 for img2,name2,url2 in lista:
#			  if name2!="Close" and name2!="NetCine":
#				name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
#				img2 = img2.replace("-120x170","")
#			  if "tvshows" in url2: False
#			  else:
#				AddDir(name2,url2, 78, img2, img2, isFolder=True, IsPlayable=True, info='\xa0')
#			  p += 1
#		if p >= 56:
#			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageGOf) + 2) +"][/B][/COLOR]", cPageGOf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageGOf")
#	except:
#		pass
########################
################# opção 2
#	try:
#		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
#		tokens, user_agent = cloudscraper2.get_tokens("https://netcine.io/category/acao/", headers = headers)
#		pickle.dump(tokens, open(cachefolder + "tokens.txt","wb"))
#		arquivo2 = open(cachefolder + 'tokens.txt', 'r')
#		url4 = arquivo2.read()
#		url5 = re.compile("rance'+\s.+\s.'(.+?)'").findall(url4)
#		url6 = url5[0]
#		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'}
#		cookies = {'cf_clearance': url6}
#		link = requests.get(url, headers=headers, cookies=cookies)
#		arquivo = open(cachefolder + "netcine.txt", "w+")
#		arquivo.write(link.text)
#		arquivo.close()
#		arquivo = open(cachefolder + 'netcine.txt', 'r')
#		url3 = arquivo.read()
#		m = re.compile("\"play-.\".+?src=\"([^\"]+)").findall(url3)
#		m2 = re.compile("\#play-.+\s+\s(\w*)").findall(url3)
#		info2 = re.compile('<h2>Synopsis<\/h2>+\s+.p>(.*?)<\/').findall(url3)
#		info2 = re.sub('<(.*?)>', '', info2[0] ) if info2 else ""
#		info2 = info2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”')
#		i=0
#		for name2 in m2:
#			AddDir(name +" [COLOR blue]("+ name2 +")[/COLOR]", m[i], 79, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info2, background=url)
#			i+=1
#	except:
#		AddDir("Server error, tente novamente em alguns minutos" , "", 0, isFolder=False)
########################
def Generos(): #80
	global Cat
	d = xbmcgui.Dialog().select("Escolha o Genero", Clista1)
	if d != -1:
		Addon.setSetting("Cat", str(d) )
		Cat = d
		Addon.setSetting("cPage", "0" )
		xbmc.executebuiltin("Container.Refresh()")
        
def Generos2(): #500
	global Cat
	d = xbmcgui.Dialog().select("Escolha o Genero", Clista2)
	if d != -1:
		Addon.setSetting("Cat", str(d) )
		Cat = d
		Addon.setSetting("cPage", "0" )
		Addon.setSetting("cPageleg", "0" )
		xbmc.executebuiltin("Container.Refresh()")
# --------------  FIM NETCINE
# --------------  REDECANAIS FILMES
def MoviesRCD(): #90 Filme dublado
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + Clista1[int(Cat)] +"[/COLOR]", "url" ,80 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	CategoryOrdem("cOrdRCF")
	try:
		p= 1
		if int(cPage) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPage) ) +"][/B][/COLOR]", cPage , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPage")
		l= int(cPage)*5
		exurl=['']
		if "imdb" in cadulto:
			AddDir("[COLOR maroon]Reload[/COLOR]" , "", 50, isFolder=False)
			dir = re.sub('GladistonXD', 'GladistonXDMeta', 'addon_data_dir' )
			file = os.path.join(dir, 'imdb.txt')
			chList = ReadList(file)
			exurl = re.compile('\_[^\']+').findall(str(chList))
		for x in range(0, 5):
			l +=1
			link = OpenURL(proxy+"https://"+RC+"browse-filmes-lancamentos-videos-"+str(l)+"-"+cOrdRCF+".html")
			if Clista0[int(Cat)] != "Lançamentos":
				link = OpenURL("https://"+RC+"browse-"+Clista0[int(Cat)]+"-filmes-videos-"+str(l)+"-"+cOrdRCF+".html")
			match = re.compile('href=\"([^\"]+).{0,10}title=\"([^\"]+)\".{20,350}echo=\"([^\"]+)').findall(link.replace('\n','').replace('\r',''))
            #match = re.compile('href=\"([^\"]+).{0,10}title=\"([^\"]+)\".{20,350}echo=\"([^\"]+)').findall(link.replace('\n','').replace('\r',''))
			if match:
			 for url2,name2,img2 in match:
					url2 = re.sub('^\.', "https://"+RC, url2 )
					img2 = re.sub('^/', "https://"+RC, img2 )
					if "criaturas-2-dublado-1989-720p" in url2: False
						#AddDir(name2 ,url2, 96, img2, img2, info="", isFolder=False, IsPlayable=True)                       
					else:
						AddDir(name2 ,url2, 96, img2, img2, info="", isFolder=False, IsPlayable=True)  
					p += 1
			else:
				break
		if p >= 40:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPage) + 2) +"][/B][/COLOR]", cPage , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPage")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "")
def MoviesRCL(): #91 Filme Legendado
	url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/TV3.txt').text
	urlx = re.compile('<title>(.+?)<.+\s.+?link>(htt.+?)<.+\s.+\s.+?il>(.+?)<').findall(url1)
	for name2, url2, img2 in urlx:
		AddDir(name2 ,url2, 214, img2, img2, info='\xa0', isFolder=False, IsPlayable=True) 
def MoviesRCN(): #92 Filmes Nacional
	CategoryOrdem("cOrdRCF")
	try:
		p= 1
		if int(cPagenac) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPagenac) ) +"][/B][/COLOR]", cPagenac , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPagenac")
		l= int(cPagenac)*5
		for x in range(0, 5):
			l +=1
			link = OpenURL(proxy+"https://"+RC+"browse-filmes-nacional-videos-"+str(l)+"-"+cOrdRCF+".html")
			match = re.compile('href=\"([^\"]+).{0,10}title=\"([^\"]+)\".{20,350}echo=\"([^\"]+)').findall(link.replace('\n','').replace('\r',''))
			if match:
				for url2,name2,img2 in match:
					url2 = re.sub('^\.', RC2, url2 )
					img2 = re.sub('^/', RC2, img2 )
					if cPlayD == "true":
						AddDir(name2 ,url2, 96, img2, img2, info="", isFolder=False, IsPlayable=True)
					else:
						AddDir(name2 ,url2, 95, img2, img2, info="")
					p += 1
			else:
				break
		if p >= 40:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPagenac) + 2) +"][/B][/COLOR]", cPagenac , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPagenac")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def MoviesRCR(): # Lancamentos
	#CategoryOrdem("cOrdRCF")
	try:
		p= 1
		if int(cPagelan) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPagelan) ) +"][/B][/COLOR]", cPagelan , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPagelan")
		l= int(cPagelan)*5
		for x in range(0, 5):
			l +=1
			link = OpenURL(proxy+"https://"+RC+"browse-filmes-lancamentos-videos-"+str(l)+"-date.html")
			match = re.compile('href=\"([^\"]+).{0,10}title=\"([^\"]+)\".{20,350}echo=\"([^\"]+)').findall(link.replace('\n','').replace('\r',''))
			if match:
				for url2,name2,img2 in match:
					url2 = re.sub('^\.', "https://"+RC, url2 )
					img2 = re.sub('^/', "https://"+RC, img2 )
					if cPlayD == "true":
						AddDir(name2 ,url2, 96, img2, img2, info="", isFolder=False, IsPlayable=True) 
					else:
						AddDir(name2 ,url2, 95, img2, img2, info="")
					p += 1
			else:
				break
		if p >= 40:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPagelan) + 2) +"][/B][/COLOR]", cPagelan , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPagelan")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def PlayMRC(): #95 Play filmes
	url2 = re.sub('redecanais\.[^\/]+', RC2, url.replace("http","https") )
	url2 = re.sub('^/', RC2, url2 )
	try:
		link = OpenURL(proxy+url2.replace("http\:","https\:"))
		desc = re.compile('itemprop=\"?description\"?>\s.{0,10}?<p>(.+)<\/p>').findall(link)
		if desc:
			desc = re.sub('&([^;]+);', lambda m: unichr(htmlentitydefs.name2codepoint[m.group(1)]), desc[0])
		player = re.compile('<iframe.{1,50}src=\"([^\"]+)\"').findall(link)
		if player:
			#player = re.sub('.php', "playerfree.php", player[0] )
			player = re.sub('^/', "https://"+RC, player[0])
			mp4 = OpenURL(player ,headers={'referer': "https://cometa.top/"})
			file=re.compile('[^"|\']+\.mp4').findall(mp4)
			#mp4 = re.compile('server(f?\d*).+vid\=(\w+)').findall(player[0])
			#reg = "(.+)\\$rc"+mp4[0][0]
			#pb = OpenURL("https://pastebin.com/raw/FwSnnr65")
			#ss = re.compile('(.{1,65})RCFServer.{1,35}\.mp4').findall(pb)
			#pb = re.sub('\$s1\/', ss[0], pb )
			#pb = re.sub('\$s2\/', ss[1], pb )
			#m = re.compile(reg, re.IGNORECASE).findall(pb)
			#url2 = m[0]
			#file = mp4[0][1]+".mp4"
			AddDir("[B][COLOR yellow]"+ name +" [/COLOR][/B]"  , file[0] + reference2, 3, iconimage, iconimage, index=0, isFolder=False, IsPlayable=True, info=desc, background=url+";;;"+name+";;;RC")
		else:
			AddDir("[B]Ocorreu um erro[/B]"  , "", 0, iconimage, iconimage, index=0, isFolder=False, IsPlayable=False, info="Erro")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "")
#def PlayMRC21(): #96 Play filmes
#	url2 = re.sub('redecanais\.[^\/]+', RC2, url.replace("http\:","https\:") )
#	url2 = re.sub('^/', RC2, url2 )
#	try:
#		link = OpenURL(proxy+url2.replace("http\:","https\:"))
#		desc = re.compile('itemprop=\"?description\"?>\s.{0,10}?<p>(.+)<\/p>').findall(link)
#		if desc:
#			desc = re.sub('&([^;]+);', lambda m: unichr(htmlentitydefs.name2codepoint[m.group(1)]), desc[0])
#		player = re.compile('Player "" src=\"([^\"]+)\"').findall(link)
#		if player:
			#mp4 = re.compile('server(f?\d*).+vid\=(\w+)').findall(player[0])
			#reg = "(.+)\\$rc"+mp4[0][0]
			#pb = OpenURL("https://pastebin.com/raw/FwSnnr65")
			#ss = re.compile('(.{1,65})RCFServer.{1,35}\.mp4').findall(pb)
			#pb = re.sub('\$s1\/', ss[0], pb )
			#pb = re.sub('\$s2\/', ss[1], pb )
			#m = re.compile(reg, re.IGNORECASE).findall(pb)
			#url2 = m[0]
			#file = url2 + mp4[0][1]+".mp4"
#			player = re.sub('^/', "https://"+RC, player[0])
			#player = re.sub('\.php', "-bk3.php", player)
			#auth = OpenURL(player ,headers={'referer': "https://dietafitness.fun/"})
			#exp = re.compile('expires\=([^\'|\"]+)').findall(auth)
#			player = re.sub('\.php', "hlb.php", player)
			#mp4 = OpenURL(player + "&expires=" + exp[0] ,headers={'referer': "https://dietafitness.fun/"})
#			mp4 = OpenURL(player, headers={'referer': "https://redecanais.se/"})
#			file=re.compile('<source src="([^"|\']+)" type=').findall(mp4)
#			#global background
#			background=url+";;;"+name+";;;RC"
#			file[0] = re.sub('https', 'http', file[0])
#			PlayUrl("[B][COLOR white]"+ name +" [/COLOR][/B]", file[0] + reference2, iconimage, desc) #aqui
#		else:
#			AddDir("[B]Ocorreu um erro[/B]"  , "", 0, iconimage, iconimage, index=0, isFolder=False, IsPlayable=False, info="Erro")
#	except:
#		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "")
def PlayMRC2(): #96 Play filmes direto
	url2 = re.sub('redecanais\.[^\/]+', RC, url.replace("http\:","https\:") )
	if not "redecanais" in url2:
		url2 = "https://"+RC+ url2
	try:
		link = OpenURL(proxy+url2.replace("http\:","https\:"))
		desc = re.compile('itemprop=\"?description\"?>\s.{0,10}?<p>(.+)<\/p>').findall(link)
		if desc:
			try:
				desc = re.sub('&([^;]+);', lambda m: unichr(htmlentitydefs.name2codepoint[m.group(1)]), desc[0])
			except:
				desc = desc[0]
		else:
			desc = ""
		player = re.compile('<iframe.{1,50}src=\"(\/?p[^\"]+)\"').findall(link)
		if player:
			player = re.sub('^/', "https://"+RC, player[0])
			player = re.sub('\.php', "hlb.php", player)
			player = re.sub('redecanais\.[^\/]+', "homeingles.fun", player)
			mp4 = OpenURL(player ,headers={'referer': 'https://homeingles.fun/'})
			mp4 = re.sub('(<script>l1l=.+)','',mp4)
			try:
				player = re.compile('href.{1,5}(mega[^"|\']*)').findall(mp4)
				mp42 = OpenURL("https://homeingles.fun/player3/"+player[0] ,headers={'referer': 'https://homeingles.fun/'})
				#source = re.compile('.+').findall(mp42)
				file=re.compile('[^"|\']+\.mp4[^"|\'|\n]*').findall(mp4)
				#file=re.compile('src..(http.{1,200}\.mp4[^"|\']*)').findall(mp4)
			except:
				file=re.compile('[^"|\']+\.mp4[^"|\'|\n]*').findall(mp4)
			file[0] = re.sub('\n', '', file[0])
			arquivo = open(cachefolder + "RedeCanais.txt", "w+")
			arquivo.write(file[0])
			arquivo.close()
			PlayUrl("[B][COLOR white]"+ name +" [/COLOR][/B]", file[0].replace("https://downoff.canais.org/https://downoff.canais.org//","https://downoff.canais.org/") +"|Referer=https://homeingles.fun&Connection=Keep-Alive&Accept-Language=en&User-Agent=Mozilla/5.0 (Windows NT 6.1; rv:11.0) Gecko/20100110 Firefox/11.0", iconimage, desc) #aqui
		else:
			AddDir("[B]Ocorreu um erro[/B]"  , "", 0, iconimage, iconimage, index=0, isFolder=False, IsPlayable=False, info="Erro")
	except:
		xbmcgui.Dialog().ok('PlayXD', 'Erro, tente novamente em alguns minutos')
		sys.exit()
# ----------------- FIM REDECANAIS
# --------------  REDECANAIS SERIES,ANIMES,DESENHOS
def PlaySRC(): #133 Play series
	try:
		url2 = re.sub('redecanais\.[^\/]+', RC, url.replace("http\:","https\:") )
		link = OpenURL(proxy+url2)
		player = re.compile('<iframe.{1,50}src=\"(\/?p[^\"]+)\"').findall(link)
		if player:
			player = re.sub('^/', "https://"+RC, player[0])
			player = re.sub('\.php', "hlb.php", player)
			player = re.sub('redecanais\.[^\/]+', "homeingles.fun", player)
			mp4 = OpenURL(player ,headers={'referer': 'https://homeingles.fun/'})
			try:
				player = re.compile('href.{1,5}(mega[^"|\']*)').findall(mp4)
				mp42 = OpenURL("https://homeingles.fun/player3/"+player[0] ,headers={'referer': 'https://homeingles.fun/'})
				#source = re.compile('.+').findall(mp42)
				file=re.compile('[^"|\']+\.mp4[^"|\'|\n]*').findall(mp4)
				#file=re.compile('src..(http.{1,200}\.mp4[^"|\']*)').findall(mp4)
			except:
				file=re.compile('[^"|\']+\.mp4[^"|\'|\n]*').findall(mp4)
			file[0] = re.sub('\n', '', file[0])	
			PlayUrl(name, file[0] + "|Referer=https://homeingles.fun&Connection=Keep-Alive&Accept-Language=en&User-Agent=Mozilla/5.0 (Windows NT 6.1; rv:11.0) Gecko/20100110 Firefox/11.0", iconimage, name)
		else:
			xbmcgui.Dialog().ok('PlayXD', 'Erro, tente novamente em alguns minutos')
	except:
		sys.exit()
def TemporadasRC(x): #135 Episodios
	url2 = re.sub('redecanais\.[^\/]+', RC, url.replace("http\:","https\:") )
	if not "redecanais" in url2:
		url2 = "https://"+RC+ url2
	link = OpenURL(proxy+url2).replace('\n','').replace('\r','').replace('</html>','<span style="font').replace("http\:","https\:").replace('<span style="font-size: x-large;"><span style="color: rgb(255, 255, 255);">',"")
	temps = re.compile('(<span style="font-size: x-large;">(.+?)<\/span>)').findall(link)
	i= 0
	if background=="None":
		for b,tempname in temps:
			tempname = re.sub('<[\/]{0,1}strong>', "", tempname)
			try:
				tempname = re.sub('&([^;]+);', lambda m: unichr(htmlentitydefs.name2codepoint[m.group(1)]), tempname)
			except:
				tempname = tempname
			if not "ilme" in tempname:
				AddDir("[B]["+tempname+"][/B]" , url, 135, iconimage, iconimage, info="", isFolder=True, background=i)
			i+=1
		AddDir("[B][Todos Episódios][/B]" ,url, 139, iconimage, iconimage, info="")
	else:
		temps2 = re.compile('size: x-large;\">.+?<span style\=\"font').findall(link)
		epi = re.compile('<strong>(E.+?)<a .+?(\/.+?)".+?(<br|<\/p)').findall(temps2[int(x)])
		for name2,url2,brp in epi:
			#h = HTMLParser()
			#name3 = h.unescape(name2)
			AddDir(name2.replace("</strong>","").replace("-",""), "https://" + RC+url2, 133, iconimage, iconimage, info="", isFolder=False, IsPlayable=True)
def SeriesRC(urlrc,pagina2): #130 Lista as Series RC
	try:
		CategoryOrdem("cOrdRCS")
		pagina=eval(pagina2)
		p= 1
		if int(pagina) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background=pagina2)
		l= int(pagina)*5
		for x in range(0, 5):
			l +=1
			link = OpenURL(proxy+"https://" + RC + "browse-"+urlrc+"-videos-"+str(l)+"-"+cOrdRCS+".html")
			match = re.compile('href=\"([^\"]+).{0,10}title=\"([^\"]+)\".{20,350}echo=\"([^\"]+)').findall(link.replace('\n','').replace('\r',''))
			if match:
				for url2,name2,img2 in match:
					url2 = re.sub('^\.', RC2, url2 )
					img2 = re.sub('^/', RC2, img2 )
					if not "index.html" in url2:
						AddDir(name2 ,url2, 135, img2, img2, info="")
						p += 1
			else:
					break
		if p >= 40:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background=pagina2)
	except:
		AddDir("Server error, tente novamente em alguns minutos" , url, 0, "", "")
def AllEpisodiosRC(): #139 Mostrar todos Epi
	url2 = re.sub('redecanais\.[^\/]+', RC, url.replace("http\:","https\:") )
	if not "redecanais" in url2:
		url2 = "https://"+ RC + url2
	link = OpenURL(url2)
	match = re.compile('<strong>(E.+?)<\/strong>(.+?)(<br|<\/p)').findall(link)
	S= 0
	if match:
		for name2,url2,brp in match:
			name3 = re.compile('\d+').findall(name2)
			if name3:
				name3=name3[0]
				if int(name3) == 1:
					S = S + 1
			else:
				name3=name2

			urlm = re.compile('href\=\"(.+?)\"').findall(url2)
			try:
				namem = re.sub('&([^;]+);', lambda m: unichr(htmlentitydefs.name2codepoint[m.group(1)]), re.compile('([^\-]+)').findall(url2)[0] )
			except:
				namem = re.compile('([^\-]+)').findall(url2)[0]
			if "<" in namem:
				namem = ""
			if urlm:
				if "http" not in urlm[0]:
					urlm[0] = "https://"+ RC + urlm[0]
			if len(urlm) > 1:
				if "http" not in urlm[1]:
					urlm[1] = "https://"+ RC  + urlm[1]
				AddDir("[COLOR yellow][Dub][/COLOR] S"+str(S)+" E"+ name3 +" "+namem ,urlm[0], 133, iconimage, iconimage, info="", isFolder=False, IsPlayable=True)
				AddDir("[COLOR blue][Leg][/COLOR] S"+str(S)+" E"+ name3 +" "+namem ,urlm[1], 133, iconimage, iconimage, info="", isFolder=False, IsPlayable=True)
			elif urlm:
				AddDir("S"+str(S)+" E"+ name3 +" "+namem ,urlm[0], 133, iconimage, iconimage, info="", isFolder=False, IsPlayable=True)
def NF(x, t=5000):
	xbmc.executebuiltin("Notification({0}, {1}, {3}, {2})".format(AddonName, str(x), icon, t))
# ----------------- FIM REDECANAIS SERIES,ANIMES,DESENHOS
# ----------------- BUSCA
def Busca(): # 160
	if 'No' in url:
		AddDir("[COLOR crimson][B][Nova Pesquisa][/B][/COLOR]", "No" , 50 ,"https://uploaddeimagens.com.br/images/002/376/135/original/941129_stock-photo-illustration-of-a-magnifying-glass.jpg", isFolder=False, info='\xa0')
		d = xbmcgui.Dialog().input("Busca (poder demorar a carregar os resultados)").replace(" ", "+").replace('#','ª').replace('=','ª')
		d = quote_plus(d)
	try:
		Sugestao = requests.get('https://www.google.com/search?q='+d+'&ie=UTF-8').text
		Sugestao1 = re.compile('Exibindo resultados para.+?<span>(.+?)</span>').findall(Sugestao)[0].replace('<b><i>','').replace('</i></b>','')
		AddDir("[B]Você quis dizer: [COLOR springgreen]"+Sugestao1.replace('+',' ')+"[/COLOR]*?[/B]", "Yes" , 160 ,"https://uploaddeimagens.com.br/images/002/376/135/original/941129_stock-photo-illustration-of-a-magnifying-glass.jpg", isFolder=True, background=Sugestao1, info='\xa0')
	except:
		pass
	if 'Yes' in url:
		d = background.replace('+','%2B')
	progress = xbmcgui.DialogProgress()
	progress.create('Buscando...')
	#progress.update(0, "Netcine")
	#progress.update(int(l*10/2),"Netcine "+str(l*10/2)+"%")
	if not d:
        #return Categories()
		sys.exit(int(sys.argv[1]))
	if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
#	try:
#		p= 1
#		AddDir("[COLOR blue][B]RedeCanais[/B][/COLOR]", "" , 0 ,"", isFolder=False)
#		l= 0
#		for x in range(0, 10):
#			l +=1
#			link = OpenURL(proxy+"https://" + RC +"search.php?keywords="+d+"&page="+str(l))
#			match = re.compile('data\-echo\=\"([^\"]+).{10,150}href=\"([^\"]+).{0,10}title=\"([^\"]+)\"').findall(link.replace('\n','').replace('\r',''))
#			if match:
#				for img2,url2,name2 in match:
#					#url2 = re.sub('^\.', "http://www." + RC, url2 )
#					url2 = re.sub('^\.', "https://"+RC, url2 )
#					img2 = re.sub('^/', "https://"+RC, img2 )
#					if re.compile('\d+p').findall(name2):
#						if cPlayD == "true":
#							AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 96, img2, img2, info="", isFolder=False, IsPlayable=True)
#						else:
#							AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 95, img2, img2)
#					elif "Lista" in name2:
#						AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 135, img2, img2)
#			else:
#				break
#	except:
#		pass
	#progress.update(int(l*10/2),"Netcine "+str(l*10/2)+"%")
######################
	'''try:
		AddDir("[B][COLOR yellow]|||[/COLOR][COLOR white]|||[/COLOR][COLOR yellow]|||[/COLOR][COLOR yellow] [NetCine] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		link2 = requests.get("http://netcine.io/?s="+d)#,headers=headers, proxies=proxies)
		lista = re.compile("\s.{1,12}<img src\=\"([^\"]+).+?alt\=\"([^\"]+).+?f\=\"([^\"]+)").findall(link2.text.replace('\n','').replace('\r',''))
		for img2,name2,url2 in lista:
			if name2!="Close" and name2!="NetCine":
				name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
				img2 = img2.replace("-120x170","")
				if "tvshows" in url2:
					AddDir("[COLOR yellow]" +name2+ "[/COLOR]",url2, 61, img2, img2, isFolder=True)
				else:
					AddDir("[COLOR yellow]" +name2+ "[/COLOR]",url2, 78, img2, img2, isFolder=True)
	except:
		try:
			link2 = requests.get("http://138.122.11.44:443/?url="+"http://netcine.io/?s="+d)#,headers=headers, proxies=proxies)
			lista = re.compile("\s.{1,12}<img src\=\"([^\"]+).+?alt\=\"([^\"]+).+?f\=\"([^\"]+)").findall(link2.text.replace('\n','').replace('\r',''))
			for img2,name2,url2 in lista:
				if name2!="Close" and name2!="NetCine":
					name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
					img2 = img2.replace("-120x170","")
					if "tvshows" in url2:
						AddDir("[COLOR yellow]" +name2+ "[/COLOR]",url2, 61, img2, img2, isFolder=True)
					else:
						AddDir("[COLOR yellow]" +name2+ "[/COLOR]",url2, 78, img2, img2, isFolder=True)
		except:
			pass'''
    ##########################
	'''progress.update(32, "MMfilmes")
	l=0
	i=0
	try:
		AddDir("[B][COLOR cyan]|||[/COLOR][COLOR white]|||[/COLOR][COLOR cyan]|||[/COLOR][COLOR cyan] [MMfilmes] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		links = OpenURL("http://www.mmfilmeshd.tv/series/")
		ms = re.compile('href\=\"(.+www.mmfilmeshd.tv.+)\" rel\=\"bookmark\"').findall(links)
		for x in range(0, 3):
			l+=1
			link = OpenURL("http://www.mmfilmeshd.tv/page/"+str(l)+"/?s="+d).replace('\n','').replace('\r','')
			m = re.compile('<li id=.+?" title="(.+?)".+?href="(.+?)".+?boxxer.+?boxxer">(.+?)<.+?src="(.+?)".+?audioy..(.+?)<').findall(link)
			if m:
				for name2, url2, dubleg, jpg, res in m:
					name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'")
					dubleg = dubleg.replace("</div>","")
					if not url2 in ms:
						AddDir("[COLOR cyan]" +name2+ "[/COLOR] [COLOR yellow]"+res+"[/COLOR] [COLOR green]"+dubleg+"[/COLOR]", url2, 181, jpg, jpg,isFolder=True,IsPlayable=False)
					else:
						AddDir("[COLOR cyan]" +name2+ "[/COLOR]", url2, 191, jpg, jpg, isFolder=True,IsPlayable=False)
					i+=1
			i=0
	except:
		pass
	progress.update(48, "TopFlix")
	try:
		p= 1
		AddDir("[B][COLOR red]|||[/COLOR][COLOR white]|||[/COLOR][COLOR red]|||[/COLOR][COLOR red] [TopFlix] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		l= 0
		for x in range(0, 1):
			url = ('https://topflix.tv/landing')
			result = {'search': d.replace("%2B"," ")}
			f = requests.post(url, data=result)
			f = f.text.replace("color='white'>", " title='").replace("</font>", "'").replace("><font ", "")
			arquivo = urllib.parse.quote(f)
			arquivo2 = urllib.parse.unquote(arquivo)
			match = re.compile("'(.{5,30}[^\']jpg).+?href.+?href.+?href.+?href='([^\']+).+?tle='(\w.+?)'").findall(arquivo2)
			if match:
				for img2, url2, name2 in match:
					img2 = img2.replace('170255',"330490")
					if "series" in url2: False
					else:
						AddDir("[COLOR red]" +name2+ "[/COLOR]" , RC4 + url2, 211, RC4 + img2, info="", isFolder=True, IsPlayable=False)
	except:
		pass
	progress.update(64, "Vizer.tv")
	try:
		i=0
		p= 1
		AddDir("[B][COLOR mediumpurple]|||[/COLOR][COLOR white]|||[/COLOR][COLOR mediumpurple]|||[/COLOR][COLOR mediumpurple] [Vizer.tv] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		l= 0
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://vizer.tv/pesquisar/"+d.replace("%2B","%20"))
			match = re.compile('Assistir (.+?) online" class="(.+?)".href="(.+?)".+\s.+?="(.+?)" class="lazy"').findall(link)
			if match:
				for name2, tipo,url2, img2 in match:
					url3 = "https://vizer.tv/" + url2
					img2= img2.replace("w185","original")
					if "serie" in tipo:
						AddDir("[COLOR mediumpurple]" +name2+ "[/COLOR]" ,url3, 451, img2, img2, info="", isFolder=True, IsPlayable=True)
					else:
						AddDir("[COLOR mediumpurple]" +name2+ "[/COLOR]" ,url3, 601, img2, img2, info="", isFolder=True, IsPlayable=True)
						i+=1
	except:
		pass    
	progress.update(75, "Assistir.Biz")
	try:
		p= 1
		AddDir("[B][COLOR deepskyblue]|||[/COLOR][COLOR white]|||[/COLOR][COLOR deepskyblue]|||[/COLOR][COLOR deepskyblue] [Assistir.Biz] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		l= 0
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://assistir.biz/busca?q="+d)
			match = re.compile('data-src="([^\"]+)".+\s.+.\s.+.\s.+.\s.+.\s.+.\s.+.\s.+?a href="([^\"]+)".alt="([^\"]+)".+\s.+\s.+?">([^\"]+)<\/a').findall(link)
			if match:
				for img2,url2,name2, ano in match:
					url2= url2.replace("/filme","https://assistir.biz/filme")
					img2= img2.replace("//image","https://image").replace("w185","original")
					if "tvshows" in url2: False
					else:
						AddDir("[COLOR deepskyblue]" +name2+ " - ("+ano+")[/COLOR]", url2, 515, img2, img2, info='\xa0', isFolder=True, IsPlayable=True)
	except:
		pass'''
	#progress.update(73, "73%", "VerFilmesHD", "")
	#try:
	#	p= 1
	#	AddDir("[B][COLOR palevioletred]|||[/COLOR][COLOR white]|||[/COLOR][COLOR palevioletred]|||[/COLOR][COLOR palevioletred] [VerFilmesHD] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
	#	l= 0
	#	for x in range(0, 1):
	#		l +=1
	#		link = OpenURL("https://verfilmeshd.gratis/?s="+d)
	#		match = re.compile('href="([^\"]+)".{1,60}oldtitle="([^\"]+)".{1,30}img src="([^\"]+)".+?IMDb..([^\"].+?)<.+?tag">([^\"].+?)<').findall(link)
	#		if match:
	#			for url2, name2, img2, imdb, ano in match:
	#				name2= name2.replace("Online","").replace("Dublado", "[COLOR blue] (Dublado)[/COLOR]").replace("Legendado", "[COLOR blue] (Legendado)[/COLOR]").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…').replace('&#039;',"'")
	#				if "tvshows" in url2: False
	#				else:
	#					AddDir("[COLOR palevioletred]" +name2+"[/COLOR]", url2, 531, img2, img2, isFolder=True, IsPlayable=True, info="IMDB: "+imdb+"   Ano: "+ano)
	#except:
	#	pass
	#progress.update(80, "80%", "QueroFilmesHD", "")        
	#try:
	#	p= 1
#		AddDir("[B][COLOR springgreen]|||[/COLOR][COLOR white]|||[/COLOR][COLOR springgreen]|||[/COLOR][COLOR springgreen] [QueroFilmesHD] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
#		l= 0
#		for x in range(0, 1):
#			l +=1
#			link = OpenURL("https://querofilmeshd.online/?s="+d).replace('\n','').replace('\r','')
#			match = re.compile('<img src="([^\"]+)".+?alt="([^\"]+)".+?href="([^\"]+).+?"year">(\w+)').findall(link.replace('\n','').replace('\r',''))
#			if match:
#				for img2,name2,url2,ano in match:
#					img2= img2.replace("w92","original")
#					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
#					if "tvshows" in url2:
#						AddDir("[COLOR springgreen]" +name2+ " - ("+ano+")"+"[/COLOR]" ,url2, 431, img2, img2, info="", isFolder=True, IsPlayable=True)#.replace('original','w92')
#					else:
#						AddDir("[COLOR springgreen]" +name2+ " - ("+ano+")"+"[/COLOR]" ,url2, 511, img2, img2, info="", isFolder=True, IsPlayable=True)
#	except:
#		pass        
#	try:
#		p= 1
#		AddDir("[COLOR red][B][TopFlix][/B][/COLOR]", "" , 0 ,"", isFolder=False)
#		l= 0
#		for x in range(0, 1):
#			link = OpenURL("https://www.ecosia.org/search?q=topflix.tv+"+d+"")
#			l +=1
#			match = re.compile('href\=\"(https?\:.{0,50}topflix.tv\/[^\"]+)\"\s+>\s+TopFlix.-.Assistir.([^\"]+)Online').findall(link.replace('\n','').replace('\r',''))
#			if match:
#				for url2,name2 in match:
#					if "lista" in url2 or "Lista" in name2:
#						AddDir("[COLOR red]" +name2+ "[/COLOR]" , url2, 211, " ", " ", info="", isFolder=True, IsPlayable=False)
#					else:
#						AddDir("[COLOR red]" +name2+ "[/COLOR]" , url2, 211, " ", " ", info="", isFolder=True, IsPlayable=True)
#	except:
#		pass
#	progress.update(80, "80%", "RedeCanais", "")
#	try:
#		i=0
#		p= 1
#		AddDir("[B][COLOR blue]|||[/COLOR][COLOR white]|||[/COLOR][COLOR blue]|||[/COLOR][COLOR blue] [RedeCanais] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
#		l= 0
#		for x in range(0, 1):
#			l +=1
#			url3 = ('https://redecanais.se/ajax_search.php')
#			result = {'queryString': d}
#			f = requests.post(url3, data=result)
#			arquivo2 = urllib.parse.quote(f.text)
#			String2 = urllib.parse.unquote(arquivo2)
#			match = re.compile('href="(.+?)">(.+?)<').findall(String2)
#			img2 = re.compile('href=".+?>(.+?) -').findall(String2.replace(" (Dublado)", "").replace(" (Legendado)", ""))
#			if match:
#				for url2, name2 in match:
#					if "browse" in url2 or "lista" in url2:
#						AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 135, "https://redecanais.se/imgs-videos/Filmes/"+ img2[i].replace(" ","%20")+".jpg", "https://redecanais.se/imgs-videos/Filmes/"+ img2[i].replace(" ","%20")+".jpg", info="", isFolder=True, IsPlayable=False)
#					#if "lista" in url2:
#					else:
#						AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 96, "https://redecanais.se/imgs-videos/Filmes/"+ img2[i].replace(" ","%20").replace(":"," -")+".jpg", "https://redecanais.se/imgs-videos/Filmes/"+ img2[i].replace(" ","%20")+".jpg", info="", isFolder=False, IsPlayable=True)
#					i+=1
#	except:
#		pass
	'''progress.update(80, "RedeCanais")
	try:
		p= 1
		AddDir("[COLOR blue][B]RedeCanais[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		l= 0
		for x in range(0, 20):
			l +=1
			#progress.update(l*10/2, str(l*10/2)+"%", "Redecanais", "")
			#AddDir("[COLOR blue]" +str(l)+ "[/COLOR]" ,"", 135, "", "")
			link = OpenURL("https://" + RC +"search.php?keywords="+d+"&page="+str(l))
			match = re.compile('data\-echo\=\"([^\"]+).{10,150}href=\"([^\"]+).{0,10}title=\"([^\"]+)\"').findall(link.replace('\n','').replace('\r',''))
			if match:
				for img2,url2,name2 in match:
					url3 = "https://" + RC + url2
					img2 = re.sub('^/', "https://"+RC, img2 )
					if re.compile('\d+p').findall(name2):
						if cPlayD == "true":
							AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url3.replace(".app//",".cloud/"), 96, img2, img2, info="", isFolder=False, IsPlayable=True)
						else:
							AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 96, img2, img2, info="", isFolder=False, IsPlayable=True)
					elif "Lista" in name2:
						AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 135, img2, img2)
			else:
				break
	except:
		pass'''
#	try:
#		i=0
#		p= 1
#		AddDir("[B][COLOR blue]|||[/COLOR][COLOR white]|||[/COLOR][COLOR blue]|||[/COLOR][COLOR blue] [RedeCanais] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
#		l= 0
#		for x in range(0, 2):
#			link = OpenURL("https://www.google.com/search?q="+d+"+site:redecanais.se&hl=pt-BR&&start="+str(l))
#			l +=2
#			match = re.compile('href\=\"(https?\:.{0,50}redecanais[^\"]+)\".{50,200}\>([^\<]+)').findall(link.replace('\n','').replace('\r',''))
#			img2 = re.compile('href\=\"https?\:.{0,50}redecanais[^\"]+\".{50,200}\>([^\<].+?) -').findall(link.replace('\n','').replace('\r','').replace(" (Dublado)", "").replace(" (Legendado)", ""))
#			if match:
#				for url2, name2 in match:
#					if "browse" in url2 or "lista" in url2:
#						AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 135, "https://redecanais.se/imgs-videos/Series/"+ img2[i].replace(" ","%20")+"%201.jpg", "https://redecanais.se/imgs-videos/Series/"+ img2[i].replace(" ","%20")+"%201.jpg", info="", isFolder=True, IsPlayable=False)
#					if "lista" in url2 or "Lista" in name2 or "browse-filmes-dublado-videos" in url2 or "topvideos" in url2 or "tags" in url2 or "Filmes em Lançamentos - RedeCanais" in name2: False
#					else:
#						AddDir("[COLOR blue]" +name2+ "[/COLOR]" ,url2, 96, "https://redecanais.se/imgs-videos/Filmes/"+ img2[i].replace(" ","%20").replace(":"," -")+".jpg", "https://redecanais.se/imgs-videos/Filmes/"+ img2[i].replace(" ","%20")+".jpg", info="", isFolder=False, IsPlayable=True)
#					i+=1
#	except:
#		pass
	#progress.update(93, "93%", "SuperFlix", "")        
	#try:
	#	p= 1
	#	AddDir("[B][COLOR lightgreen]|||[/COLOR][COLOR white]|||[/COLOR][COLOR lightgreen]|||[/COLOR][COLOR lightgreen] [SuperFlix] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
	#	l= 0
	#	for x in range(0, 1):
	#		l +=1
	#		link = OpenURL("https://www.superflix.net/?s="+d).replace('\n','').replace('\r','')
	#		match = re.compile('"> <art.+?title">([^\"].+?)<.+?src="([^\"].+?)".+?sm">Ver.([^\"].+?)<.+?href="([^\"].+?)"').findall(link.replace('\n','').replace('\r',''))
	#		if match:
	#			for name2, img2, tvmovie, url2 in match:
	#				img2 = img2.replace("w185", 'original').replace("https:", '').replace("w220_and_h330_face", 'original').replace("-185x278", "")
	#				name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
	#				if "Filme" in tvmovie:
	#					AddDir("[COLOR lightgreen]"+name2+"[/COLOR]", url2, 405, "http:"+img2, "http:"+img2,isFolder=True,IsPlayable=False, info='\xa0')
	#				if "Série" in tvmovie:
	#					AddDir("[COLOR lightgreen]"+name2+"[/COLOR]", url2, 402, "http:"+img2, "http:"+img2,isFolder=True,IsPlayable=False)
	#except:
	#	pass
	'''progress.update(93, "Max")        
	try:
		p= 1
		AddDir("[B][COLOR lightgreen]|||[/COLOR][COLOR white]|||[/COLOR][COLOR lightgreen]|||[/COLOR][COLOR lightgreen] [Max] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		l= 0
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://maxfilmes.me/?s="+d.replace("%2B","+"))
			match = re.compile('class="thumbnail.+?"><img src="(.+?)" alt="(.+?)".+?href="(.+?)"').findall(link)
			if match:
				for img2, name2, url2 in match:
					img2 = img2.replace("w92","original")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					AddDir("[COLOR lightgreen]"+name2+"[/COLOR]", url2, 466, img2, isFolder=True, IsPlayable=True, info='\xa0')
	except:
		pass
	progress.update(93, "Max")        
	try:
		p= 1
		l= 0
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://maxseries.me/?s="+d.replace("%2B","+"))
			match = re.compile('class="thumbnail.+?"><img src="(.+?)" alt="(.+?)".+?href="(.+?)"').findall(link)
			if match:
				for img2, name2, url2 in match:
					img2 = img2.replace("w92","original")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					AddDir("[COLOR lightgreen]"+name2+"[/COLOR]", url2, 469, img2, isFolder=True, IsPlayable=True, info='\xa0')
	except:
		pass
	progress.update(95, "Assistir.One")        
	try:
		p= 1
		AddDir("[B][COLOR indianred]|||[/COLOR][COLOR white]|||[/COLOR][COLOR indianred]|||[/COLOR][COLOR indianred] [Assistir.One] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		l= 0
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://assistir.one/ls.php?p=pesquisa&nome="+d.replace("%2B","%20")).replace('\n','').replace('\r','').replace("&nbsp;&nbsp;","")
			match = re.compile('generosimg">.+?(\w+).+?<img src=(.+?)".+?href="(.+?)".+?title="(.+?)"').findall(link)
			if match:
				for tipo, img2,url2, name2 in match:
					img3 = "https:" + img2
					url3 = url2
					if "Filme" in tipo:
						AddDir("[COLOR indianred]"+name2+"[/COLOR]", url3, 459, img3.replace('https:"https:',"https:").replace('"',""), img3.replace('https:"https:',"https:").replace('"',""), isFolder=True, IsPlayable=True, info="")
					if "S" in tipo or "Anime" in tipo or "Desenho" in tipo:
						AddDir("[COLOR indianred]"+name2+"[/COLOR]", url3, 462, img3.replace('https:"https:',"https:").replace('"',""), img3.replace('https:"https:',"https:").replace('"',""), isFolder=True, IsPlayable=True, info="")
	except:
		pass
	progress.update(100, "TuaSerie")        
	try:
		p= 1
		AddDir("[B][COLOR mediumvioletred]|||[/COLOR][COLOR white]|||[/COLOR][COLOR mediumvioletred]|||[/COLOR][COLOR mediumvioletred] [TuaSerie] •[/B][/COLOR]", "" , 0 ,"", isFolder=False)
		l= 0
		for x in range(0, 1):
			l +=1
			link = requests.get("https://tuaserie.online/pesquisa.php?q="+d.replace("%2B","%20"))
			match = re.compile("<a href='(.+?)'>(.+?)<").findall(link.text.replace('\n','').replace('\r',''))
			if match:
				for url2,name2 in match:
					#img2 = img2.replace("w185","original")
					url3 = "https://tuaserie.online/" + url2
					AddDir("[COLOR mediumvioletred]"+name2+"[/COLOR]", url3, 455, '', '', isFolder=True, IsPlayable=True, info="")
	except:
		pass'''
	if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(0, "Comando.to")
	try:
			#p= 1
			AddDir("[B][COLOR lightgreen]|||[/COLOR][COLOR white]|||[/COLOR][COLOR lightgreen]|||[/COLOR][COLOR lightgreen] [Comando.to] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
			#l +=1
			link = requests.get("https://comando.la/?s="+d.replace('%2B','+'),headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			#link2 = re.compile("Results for(.+?)Clientes").findall(link.replace('\n','').replace('\r',''))#.replace("Baixar Série:</b> ","").replace("«</b></span><br /><b>",">").replace("«</b><b> </b></span><br /><b>Título Traduzido</b>: ",">").replace("«</strong></span><br /><b>",">").replace("«</b><b> </b></span><br /><strong>Título Traduzido</strong>: ",">").replace('Título Traduzido:</b> ',"").replace(">>",">").replace('<a href="https://comando.la/category/',"").replace("Titulo original:</b> ","").replace("Titulo Traduzido:</b> ","").replace("Titulo original :</b> ","").replace("Baixar Filme:</b> ",""))
			link2 = re.compile("Results for(.+)").findall(link.replace('\n','').replace('\r',''))
			match = re.compile('"headline" ><a href="(.+?)">(.+?)<.+?" src="(.+?)"').findall(link2[0])
			for link, name2, image2 in match:
				if "Temporada" in name2 or "Completo" in name2 or "Minissérie" in name2:
					AddDir("[COLOR lightgreen]"+name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]", link, 523, image2, image2, isFolder=True, info='\xa0')
				else:
					AddDir("[COLOR lightgreen]"+name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]", link, 519, image2, image2, isFolder=True, info='\xa0')
	except:
		pass
	if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(30, "ComandoHdTorrents")        
	try:
			#p= 1
			AddDir("[B][COLOR mediumpurple]|||[/COLOR][COLOR white]|||[/COLOR][COLOR mediumpurple]|||[/COLOR][COLOR mediumpurple] [ComandoHdTorrents] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
			#l +=1
			link = requests.get("https://www.torrentbrfilmes.com/?s="+d.replace('%2B','+'),headers={'Referer':'https://www.torrentbrfilmes.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','').replace('&#124;','|').replace('src="data:','')
			#arquivo = open(cachefolder + "testeplayer.txt", "w+")
			#arquivo.write(link)
			#arquivo.close()
			match = re.compile('"item"><a href="(.+?)".+?title="(.+?)".+?img.src="(.+?)"').findall(link)
			for link,name2, image2 in match:
				name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
				if "Serie" in name2 or "Anime" in name2 or "Temporada" in name2 or "Completo" in name2:
					AddDir("[COLOR mediumpurple]" +name2.replace(" Torrent","").replace(" –","").replace(' Download','')+"[/COLOR]", link, 174, image2, image2, isFolder=True, info='\xa0')
				else:
					AddDir("[COLOR mediumpurple]" +name2.replace(" Torrent","").replace(" –","").replace(' Download','')+"[/COLOR]", link, 1711, image2, image2, isFolder=True, info='\xa0')
	except:
		pass
	if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(60, "Pirate-Torrent")
	try:
			#p= 1
			AddDir("[B][COLOR yellow]|||[/COLOR][COLOR white]|||[/COLOR][COLOR yellow]|||[/COLOR][COLOR yellow] [Pirate-Torrent] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
			#l +=1
			link = requests.get("https://thepiratetorrents.org/?s="+d.replace('%2B','+'),headers={'Referer':'https://thepiratetorrents.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('<\/i><a href="(.+?)#.+?title="(.+?)".+?src="(.+?)".+?Duração:.+?>(.+?)<').findall(link)
			for link, name2, image2, ep in match:
				if "Temporada" in name2 or "EPISÓDIO" in name2 or "TEMPORADA" in name2 or 'EP' in ep:
					AddDir("[COLOR yellow]"+name2.replace("Torrent ","").replace(" –","").replace('Download','')+"[/COLOR]", link, 251, image2, image2, isFolder=True, info='\xa0')
				else:
					AddDir("[COLOR yellow]"+name2.replace("Torrent ","").replace(" –","").replace('Download','')+"[/COLOR]", link, 187, image2, image2, isFolder=True, info='\xa0')
	except:
		pass
	if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(80, "FilmesViaTorrent")
	try:
		p= 1
		AddDir("[B][COLOR deepskyblue]|||[/COLOR][COLOR white]|||[/COLOR][COLOR deepskyblue]|||[/COLOR][COLOR deepskyblue] [FilmesViaTorrent] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
		l= 0
		for x in range(0, 1):
			l +=1
			link = OpenURL("https://filmesviatorrents.site/?s="+d.replace('%2B','+'),headers={'Referer':'https://filmesviatorrents.site/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).replace('\n','').replace('\r','').replace("  ","").replace("Dub & Leg","Dubleg")
			match = re.compile('TPost C"><a href="(.+?)">.+?src="(.+?)".alt=".+? (.+?)".+?ClB">(\w+).{1,99}<div class="mi').findall(link)
			if match:
				for link, img2, name2,dubleg in match:
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					if "Serie" in name2 or "Anime" in name2 or "Temporada" in name2 or "Completo" in name2:
						AddDir("[COLOR deepskyblue]" +name2+" ("+dubleg.replace("Dubleg","Dublado & Legendado")+")"+"[/COLOR]", link, 534, "https:"+img2.replace("w185","original"), "https:"+img2.replace("w185","original"), isFolder=True, IsPlayable=True, info="[COLOR][/COLOR]")
					else:
						AddDir("[COLOR deepskyblue]" +name2+" ("+dubleg.replace("Dubleg","Dublado & Legendado")+")"+"[/COLOR]", link, 531, "https:"+img2.replace("w185","original"), "https:"+img2.replace("w185","original"), isFolder=True, IsPlayable=True, info="[COLOR][/COLOR]")
	except:
		pass

	'''if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(90, "DosTorrents")
	try:
			#p= 1
			AddDir("[B][COLOR salmon]|||[/COLOR][COLOR white]|||[/COLOR][COLOR salmon]|||[/COLOR][COLOR salmon] [DosTorrents] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
			#l +=1
			link = requests.get("https://comandotorrent4k.net/?s="+d, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('headline.+?<a href="(.+?)">(.+?)<.+?src="(.+?)"').findall(link)
			for link, name2, image2 in match:
				if "Temporada" in name2 or "Completo" in name2:
					AddDir("[COLOR salmon]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 5381, image2, image2, isFolder=True, info='\xa0')
				else:
					AddDir("[COLOR salmon]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 5271, image2, image2, isFolder=True, info='\xa0')
	except:
		pass'''
	'''if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(100, "ComoEuBaixo")
	try:
		AddDir("[B][COLOR mediumvioletred]|||[/COLOR][COLOR white]|||[/COLOR][COLOR mediumvioletred]|||[/COLOR][COLOR mediumvioletred] [ComoEuBaixo] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
		l= 0
		for x in range(0, 2):
			l +=1
			link = requests.get("https://comoeubaixo.com/"+d.replace('%2B','%20')+'/'+str(l)+'/', headers={'Referer':'https://comoeubaixo.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile("middle'>	<a href='(.+?)'.+?src='(.+?)'.+?title.+?title.+?'>(.+?)<.+?strong>(.+?)<.+?Servidores<\/strong>:.(.+?)<").findall(link)
			for link,image2, name2, nome3, tipo in match:
				if not 'Torrent' in tipo: False
				else:
					if "Temporada" in name2 or "Completo" in name2:
						AddDir("[COLOR mediumvioletred]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 538, image2, image2, isFolder=True, info='\xa0')
					else:
						AddDir("[COLOR mediumvioletred]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 527, image2, image2, isFolder=True, info='\xa0')
	except:
		pass'''    
	'''try:
			#p= 1
			AddDir("[B][COLOR salmon]|||[/COLOR][COLOR white]|||[/COLOR][COLOR salmon]|||[/COLOR][COLOR salmon] [DosTorrents] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
			#l +=1
			link = requests.get("https://comandotorrent4k.net/?s="+d, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('headline" ><a href="(.+?)">(.+?)<.+?src="(.+?)"').findall(link)
			for link, name2, image2 in match:
				if "Temporada" in name2 or "Completo" in name2:
					AddDir("[COLOR salmon]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 538, image2, image2, isFolder=True, info='\xa0')
				else:
					AddDir("[COLOR salmon]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 527, image2, image2, isFolder=True, info='\xa0')
	except:
		pass'''
	'''if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(100, "DosTorrents")
	try:
			#p= 1
			AddDir("[B][COLOR salmon]|||[/COLOR][COLOR white]|||[/COLOR][COLOR salmon]|||[/COLOR][COLOR salmon] [DosTorrents] •[/B][/COLOR]", "" , 0 ,"", isFolder=False, info="[COLOR][/COLOR]")
			#l +=1
			link = requests.get("https://www.thepiratefilmetorrent.me/?s="+d,headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('headline">.+?href="(.+?)".+?title="(.+?)".src="(.+?)"').findall(link)
			for link, name2, image2 in match:
				if "Temporada" in name2 or "Completo" in name2:
					AddDir("[COLOR salmon]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 538, image2, image2, isFolder=True, info='\xa0')
				else:
					AddDir("[COLOR salmon]"+html.unescape(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')+"[/COLOR]"), link, 527, image2, image2, isFolder=True, info='\xa0')
	except:
		pass'''
	if (progress.iscanceled()):
		sys.exit(int(sys.argv[1]))
	progress.update(100, "100%")
	progress.close()
    
	#l=0
	#i=0
	#try:
	#	AddDir("[COLOR maroon][B][Gofilmes.me][/B][/COLOR]", "" , 0 ,"", isFolder=False)
	#	for x in range(0, 3):
	#		l+=1
	#		link = OpenURL("http://gofilmes.me/search?s="+d+"&p="+str(l)).replace("</div><div","\r\n")
	#		m = re.compile('href=\"([^\"]+)\" title\=\"([^\"]+).+b\" src\=\"([^\"]+).+').findall(link)
	#		for url2,name2,img2 in m:
	#			AddDir(name2, url2, 211, img2, img2, isFolder=False, IsPlayable=True)
	#except:
	#	pass
# ----------------- FIM BUSCA
# ----------------- TV Cubeplay
def TVCB(x): #102
	url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/Tv2.txt').text
	urlx = re.compile('<title>(.+?)<.+\s.link>(.+?)<.+\s.+\s.thumbnail>(.+?)<').findall(url1)
	jq = sorted(urlx, key=lambda urlx: urlx)
	for name2, url2, img2 in jq:
		AddDir(name2, url2, 103, img2, img2, isFolder=False, IsPlayable=True, info='\xa0')
    
def PlayTVCB(): #103
	try:
		try:
			EPG = OpenURL('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/EPG3')
			contents = re.compile(name.replace('[B][COLOR white]','').replace('[/COLOR] [COLOR gold]HD[/COLOR][/B]','')+'.+ = "(.+?)"').findall(EPG)
			url2 = OpenURL(contents[0]).replace('\n','').replace('\t','').replace('<h2>','"/>').replace('/><img','').replace('synopsis">','title">').replace('.</p>','</span')
			url4 = re.compile('<li class=("ongoing">.+)').findall(url2)
			url4x = re.compile('restantes(.+)').findall(url2)
			title = re.compile('"ongoing">.+?class="time">.+?<.+?\/>(.+?)<\/h2.+?title">.+?<.+?progress-container">.+?<div').findall(url4[0])
			program = re.compile('"ongoing">.+?class="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?)<.+?progress-(container">.+?<div).+?(:.+?)"').findall(url4[0])
			program2 = re.compile('lass="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?<\/span)').findall(url4x[0])
			ir1 = str(program).replace('<div','').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','[COLOR red]AO VIVO:[/COLOR] ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace("container - >","Tempo:").replace('</span>','').replace(' - Tempo:','\n[COLOR yellow]TEMPO:[/COLOR] ').replace('- :',' : ').replace('%',"% concluído\n\n").replace("'Tempo:",'\n[COLOR yellow]TEMPO:[/COLOR] ')
			ir2 = str(program2).replace('</span','\n\n').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','Horário: ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace('><p class= - title - >','').replace(']','').replace('- )','').replace("-,",'')
			title = " - "+title[0]
			url5 = "[B]"+'\n\n\n'+ir1+"[/B]" + ir2
			url6 = url5
		except:
			pass
		stream = requests.get(url,headers={'Referer':'https://player.aovivotv.xyz/','User-Agent':'Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F94.0.4606.71+Safari%2F537.36'}).text
		texto = re.findall('(eval\(.+?)</script>', stream, re.MULTILINE | re.DOTALL | re.IGNORECASE)[0]
		descom = unpack(texto)
		unpack1 = re.findall('media=(.+?);let', descom, re.MULTILINE|re.DOTALL|re.IGNORECASE)[0]
		filtro = re.compile('String.fromCharCode\((.+?)\)', re.MULTILINE|re.DOTALL|re.IGNORECASE).findall(unpack1)
		for delete in filtro:
			novo = chr(int(delete) & 0xffff)
			unpack1 = unpack1.replace('String.fromCharCode(' + delete + ')', "'" + novo + "'")
		filtro = re.compile("(\\\\u0.+?)'", re.MULTILINE | re.DOTALL | re.IGNORECASE).findall(unpack1)
		for delete in filtro:
			novo = str.encode(delete).decode('unicode_escape')
			unpack1 = unpack1.replace(delete, novo)
		unpack1 = 'https:' + unpack1.replace("+", '').replace("'", '')
		try:
			#PlayUrl(name+title, unpack1+"|Referer=https://player.aovivotv.xyz/&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F94.0.4606.71+Safari%2F537.36", iconimage, url6)
			PlayFFmpeg(name+title, unpack1+"|Referer=https://player.aovivotv.xyz/&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F94.0.4606.71+Safari%2F537.36", iconimage, url6)
		except:
			#PlayUrl(name, unpack1+"|Referer=https://player.aovivotv.xyz/&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F94.0.4606.71+Safari%2F537.36", iconimage, name)
			PlayFFmpeg(name, unpack1+"|Referer=https://player.aovivotv.xyz/&User-Agent=Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F94.0.4606.71+Safari%2F537.36", iconimage, name)
	except:
		xbmcgui.Dialog().ok('Play XD', 'Canal indisponível no momento')
        
##########################################################################################
###########################################################################################
# ----------------- Fim TV Cubeplay
# ----------------- REDECANAIS TV
def Acento(x):
	x = x.replace("\xe7","ç").replace("\xe0","à").replace("\xe1","á").replace("\xe2","â").replace("\xe3","ã").replace("\xe8","è").replace("\xe9","é").replace("\xea","ê").replace("\xed","í").replace("\xf3","ó").replace("\xf4","ô").replace("\xf5","õ").replace("\xfa","ú")
	return x
def EPG():
	epg1 = "{"
	try:
		xbmc.executebuiltin("Notification({0}, {1}, 7000, {2})".format(AddonName, "Carregando lista EPG. Aguarde um momento!", icon))
		link = OpenURL("http://www.epg.com.br/~mysql41/vertv.php").replace('	','')
		m = re.compile('javascript:toggleCanal\(\d+,.([^\']+)\h*(?s)(.+?)\<\!-- orig').findall(link)
		for c,f in m:
			hora = ""
			m2 = re.compile('(.+)(\(\d+.\d+\))\s').findall(f)
			if m2:
				for prog1,prog2 in m2:
					hora += prog2 +" "+ prog1 + ";;;"
					try:
						hora= Acento(hora)
					except:
						hora = hora
			hora = hora.replace("'","")
			epg1 += "'"+c+"' : '"+hora+"' , "
		return epg1+"'none':''}"
	except:
		return ""
		xbmc.executebuiltin("Notification({0}, {1}, 7000, {2})".format(AddonName, "Erro. tente novamente!", icon))
def TVRC(): #100
	c = ["Categoria","Alfabético"]
	d = xbmcgui.Dialog().select("Qual a ordem dos canais?", c)
	link = OpenURL("http://cubeplay.000webhostapp.com/epg/_rc.php?c="+str(d))
	#link = OpenURL("http://localhost:8080/epg/_rc.php?c="+str(d))
	match = re.compile('tvg\-logo\=\"([^\"]+).+,(.+)\s(.+)|,(.+)\s(.+)').findall(link)
	for img2,name2,url2,a,c in match:
		AddDir(name2, url2, 3, img2, img2, isFolder=False, IsPlayable=True, info='\xa0')
def PlayTVRC(): # 101
	#url2 = re.sub('redecanais\.[^\/]+', "redecanais.xyz", url.replace("https","http") )
	try:
		link = OpenURL(url)
		#player = re.compile('<iframe name=\"Player\".+src=\"([^\"]+)\"').findall(link)
		player = re.compile('<iframe name=\"Player\".+src=\"[^\"]+\=([^\"]+)').findall(link)
		#ST(player[0])
		#link2 = OpenURL(player[0])
		#m2 = re.compile('action="[^\"]+\=([^\"]+)').findall(link2)
		#m2[0] = re.sub('.\/', 'https://canais.ink/', m2[0])
		link3 = OpenURL("http://cometa.top/player3/canaisvibfree.php?canal="+player[0],headers={'referer': "http://social.olimpicusads.com/"})
		ST(link3)
		#ST(link3)
		#http://cometa.top/player3/canaisvibfree.php?canal=
		urlp = re.compile('(http[^\"]+m3u[^\"]+)').findall(link3)
		#ST(urlp[0])
		if urlp:
			#ST(urlp[0])
			PlayUrl(name, urlp[0] + "|Referer=http://canaisgratis.info/player3/canaisvibfree.php?canal=", iconimage, info)
		else:
			xbmcgui.Dialog().ok('Play XD', "Erro, aguarde atualização")
	except:
		xbmcgui.Dialog().ok('Play XD', 'Erro, tente novamente em alguns minutos')
# ----------------- FIM REDECANAIS TV
# ----------------- Inicio Filmes Online
def GenerosFO(): #85
	d = xbmcgui.Dialog().select("Escolha o Genero", Clistafo1)
	if d != -1:
		global Cat
		Addon.setSetting("Catfo", str(d) )
		Cat = d
		Addon.setSetting("cPageserTR", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosPR(): #86
	d = xbmcgui.Dialog().select("Escolha o Genero", Clistapr1)
	if d != -1:
		global Cat
		Addon.setSetting("Catpr", str(d) )
		Cat = d
		Addon.setSetting("cPagepr1", "0" )
		xbmc.executebuiltin("Container.Refresh()")

#https://torrentdofilmes.com/
def MoviesFO(): #170
	pagina = "0" if not cPageserTR else cPageserTR
	AddDir("[COLOR yellow][B][Gênero dos Filmes]:[/B] " + Clistafo1[int(Catfo)] +"[/COLOR]", "url" ,85 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		if int(pagina) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserTR", info='\xa0')
		l= int(pagina)*5
		for x in range(0, 5):
			l +=1
			link = requests.get("https://www.torrentbrfilmes.com/category/"+Clistafo0[int(Catfo)]+"/page/"+str(l)+"/",headers={'Referer':'https://www.torrentbrfilmes.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
			match = re.compile('"item"><a href="(.+?)".+?title="(.+?)".+?img.src="(.+?)"').findall(html.unescape(link.text.encode("utf-8").decode().replace('src="data:', '').replace('\n', '').replace('\r', '')))
			for link, name2, image2 in match:
				#if "Serie" in genero or "Anime" in genero or "Temporada" in name2 or "Completo" in name2: False
				if "Serie" in name2 or "Anime" in name2 or "Temporada" in name2 or "Completo" in name2: False
				else:
					AddDir(name2.replace(" Torrent","").replace(" –","").replace(' Download',''), link, 1711, image2, image2, isFolder=True, info='\xa0')
		AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserTR", info='\xa0')
	except:
		pass
		
		
def GetMFO1(): #171
	try:
		you = re.compile("(\w.+?)[)]").findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		trailer = requests.get("https://www.youtube.com/results?search_query="+ you[0].replace(" ","+").replace("(","")+"+Trailer"+"")
		namey = re.compile('\w').findall(you[0])
		trailer2 = re.compile('"label":"'+namey[0]+'.+?"label":"([0-5].minuto|[0-9][0-9].segundo).+?addedVideoId":"(.+?)"').findall(trailer.text.replace('Filme ','').replace('FILME ','').replace('TRAILER ','').replace('Trailer','').replace('“',''))
		AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0][1], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+you[0].replace("(",""))
	except:
		pass
	try:
		link = requests.get(url,headers={'Referer':'https://www.torrentbrfilmes.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "testeplayer.txt", "w+")
		#arquivo.write(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
		#arquivo.close()
		genero = re.compile('<b>Baixar.(.+?):<.b>').findall(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))[0]
		match = re.compile('<strong>::.(.+?)::(.+?)><h2').findall(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
		matchpff = match[0]
		sinopse = re.compile('<.span><.strong>:(.+?)<.p>').findall(html.unescape(link.replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
		if 'O Massacre da Serra Elétrica 3' in name:
			AddDir('[COLOR springgreen][B]Sem Censura[/B][/COLOR]', '/></a></strong></p><p style="text-align: center;"><strong>BluRay 720p [Versão sem censura] </strong>(Mkv)<strong><br /><a rel="nofollow" target="_blank" href="magnet:?xt=urn:btih:8808F94E50CADEDF1662A8DA389D7226ED1D6C05&dn=O%20Massacre%20da%20Serra%20El%c3%a9trica%203%201990%20BluRay%20720p%20Dublado%20%5bgeek-filmes.com%5d&tr=udp%3a%2f%2ftracker.openbittorrent.com%3a80%2fannounce&tr=udp%3a%2f%2ftracker.opentrackr.org%3a1337%2fannounce&tr=http%3a%2f%2fnyaa.tracker.wf%3a7777%2fannounce&tr=http%3a%2f%2fanidex.moe%3a6969%2fannounce&tr=http%3a%2f%2fopen.tracker.thepiratebay.org%2fannounce&tr=http%3a%2f%2fwww.torrent-downloads.to%3a2710%2fannounce&tr=http%3a%2f%2fdenis.stalker.h3q.com%3a6969%2fannounce&tr=udp%3a%2f%2fdenis.stalker.h3q.com%3a6969%2fannounce&tr=http%3a%2f%2fwww.sumotracker.com%2fannounce&tr=udp%3a%2f%2f9.rarbg.com%3a2790%2fannounce&tr=udp%3a%2f%2f9.rarbg.me%3a2770%2fannounce&tr=http%3a%2f%2ftracker.anirena.com%3a80%2fannounce"><img loading="lazy" class="aligncenter" src="https://i.imgur.com/vgdG1Kt.png" alt="MAGNET LINK" width="300" height="125" /></a></strong></p><hr /><h3 style="text-align: center;"><img loading="lazy" class="alignnone" src="https://image.tmdb.org/t/p/original/3f40SgZ4Ty4uxITrvhAOHM0QhOw.jpg" alt="" width="500" height="352" /></h3><hr', 172, iconimage, iconimage, isFolder=False, IsPlayable=True, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), info='\xa0')
		for title2, link in match:
			title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]").replace("OFICIAL","")
			if sinopse:
				for info1 in sinopse:
					if 'Anime' in genero or 'Serie' in genero:
						AddDir(title2, link, 177, iconimage, iconimage, isFolder=True, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
					else:
						AddDir(title2, link, 172, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
			else:
				if 'Anime' in genero or 'Serie' in genero:
					AddDir(title2, link, 177, iconimage, iconimage, isFolder=True, IsPlayable=True, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), info='\xa0', legdub=title2)
				else:
					AddDir(title2, link, 172, iconimage, iconimage, isFolder=False, IsPlayable=True, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), info='\xa0', legdub=title2)
	except:
		pass
		try:
			match = re.compile('(href="https:\/\/www.ad.+?idd=.+?")').findall(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
			#arquivo = open(cachefolder + "testeplayer.txt", "w+")
			#arquivo.write(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
			#arquivo.close()
			match1 = re.compile('dn=(.+?)&').findall(urllib.parse.unquote(str(match)))
			matchpffx = match1[0]
			filtrar = re.compile('^\w+').findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
			t = 0
			for name1 in match:
				linkL = '<p style="text-align:.center;"><strong>Completo<strong'+name1
				filtro = re.compile('(.+)').findall(str(linkL))
				t += 1
				for magnet in filtro:
					AddDir("[B]"+'Completo'+"[/B]", magnet, 172, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
		except:
			pass
			try:
				#link = requests.get(url,headers={'Referer':'https://www.torrentbrfilmes.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				#arquivo = open(cachefolder + "testeplayer.txt", "w+")
				#arquivo.write(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
				#arquivo.close()
				match2 = re.compile('(<.span><.strong><.p><hr .><p style="text-align: center;"><strong>.+?)<hr').findall(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('Download Mkv: ','').replace(' / Áudio:','')))
				title2 = re.compile('<.span><.strong><.p><hr .><p style="text-align: center;"><strong>.+?00ff;">(.+?)<').findall(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
				matchpffx = title2[0]
				sinopse = re.compile('<.span><.strong>:(.+?)<.p>').findall(html.unescape(link.replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
				for link in match2:
					title2 = title2[0].replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]").replace("OFICIAL","").replace("Inglês","[COLOR red][B]Legendado[/B][/COLOR]")
					if sinopse:
						for info1 in sinopse:
							AddDir(title2, link, 172, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
					else:
						AddDir(title2, link, 172, iconimage, iconimage, isFolder=False, IsPlayable=True, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), info='\xa0', legdub=title2)
			except:
				match2 = re.compile('(<.p><h3><a href=".+?".target=")').findall(html.unescape(link.replace('\n','').replace('\r','').replace('Â ','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('Download Mkv: ','').replace(' / Áudio:','')))
				sinopse = re.compile('<.span><.strong>:(.+?)<.p>').findall(html.unescape(link.replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','')))
				for link in match2:
					teste = str(link.replace('</p><h3><a href="','<p style="text-align:.center;"><strong>Completo<...href="magnet:?xt=urn:btih:'))
					if sinopse:
						for info1 in sinopse:
							AddDir('Selecione a opção', teste , 172, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
					else:
						AddDir('Selecione a opção', teste , 172, iconimage, iconimage, isFolder=False, IsPlayable=True, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), info='\xa0', legdub=title2)
                    
def PlayMFO1(): #172
	listar=[]
	listal=[]
	#arquivo = open(cachefolder + "testeplayer.txt", "w+")
	#arquivo.write(url)
	#arquivo.close()
	match = re.compile('<p style="text-align:.center;"><strong>(.+?)<.+?href="(.+?)"').findall(url.replace('center;"><strong>ASSISTIR ONLINE',''))
	if match:
		for name2, url2 in match:
			listal.append(url2)
			listar.append(name2)
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			try:
				cookiex = re.compile('id=(.+?)&').findall(url2x)
				invertida = ''.join(palavra[::-1] for palavra in cookiex[0].split())
				decode = base64.b64decode(invertida)
				PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+decode.decode(), subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
			except:
				PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
			try:
				popup = re.compile("(\w.+?)([(])").findall(background.replace(',',''))
				popup = popup[0][0]
				xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(popup, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
			except:
				pass
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			if 'Legendado' in legdub:
				try:
					xbmc.sleep(3000)
					cutzim = re.compile('btih:(.+?)&|btih:(.+)').findall(str(decode).lower())
					for cutzm in cutzim:
						cache = xbmcvfs.translatePath("special://temp")
						file = open(cache +'elementum/'+''.join(cutzm).replace("'",'')+'.torrent', 'r', errors="ignore")
						leg4 = re.compile('name.+?:(.+? )[0-9][0-9][0-9][0-9]').findall(file.readline().replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
				except:
					try:
						leg4 = re.compile('dn=(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
					except:
						try:
							while True:
								decode = requests.get('http://127.0.0.1:65220/torrents/').text
								leg4 = re.compile('"title":"(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
								time.sleep(2)
								if leg4:
									#arquivo = open(cachefolder + "movies.txt", "w+")
									#arquivo.write(leg4[0])
									#arquivo.close()
									break
						except:
							try:
								re22 = re.compile("(\w.+?)([(])").findall(background)
								recom2 = re22[0][0]
								leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
								leg1x1 = recom2[:-1].split(' ')
								notific1 = (['\w' + name[1:] + '' for name in leg1x1])
								cut = ' '.join(notific1)
								try:
									leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
									legx = leg2[0]
								except:
									urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
									leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
								leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
								leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
							except:
								pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0]).findall(url5.replace(':','').replace("'",''))
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5.replace(':','').replace("'",''))
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5.replace(':','').replace("'",''))
				except:
					pass
			else:
				try:
					re22 = re.compile("(\w.+?)([(])").findall(background)
					recom2 = re22[0][0]
					leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
					leg1x1 = recom2[:-1].split(' ')
					notific1 = (['\w' + name[1:] + '' for name in leg1x1])
					cut = ' '.join(notific1)
					try:
						leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
						legx = leg2[0]
					except:
						urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
						leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
					leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
				except:
					pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0]).findall(url5)
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5)
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5)
				except:
					pass
			try:
				dev1 = re.compile('href="(.title.+?)"').findall(dev1x[0])
				url2 = requests.get('https://www.elsubtitle.com'+dev1[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					devx = re.compile('Brazil.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
					off = devx[0]
					url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-br', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				except:
					try:
						devx = re.compile('Portugal.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						off = devx[0]
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					except:
						devx = re.compile('Portugue.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
				teste3 = 'https://www.elsubtitle.com' + dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				with open(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					#if 'Legendei' in nome or 'Legendas-Dev' in nome or 'OpenSubtitles' in nome: False
					#else:
					if ".srt" in nome:
						novo_nome = "Elsubtitle (Brasil)-pt.forced" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt"
						renam = renam[0]
			except:
				pass
			try:
				#arquivo = open(cachefolder + "LegendaT.txt", "w+")
				#arquivo.write(leg4[0])
				#arquivo.close()
				url5 = requests.get("https://legendei.top/?s="+leg4[0].replace(':',''),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
				teste = re.compile('thumbnail">\s\s.+?href="(.+?)".+?title.+?'+leg4[0][:-1].replace(':','')+'\s[(]').findall(url5.replace(':',''))
				teste = teste[0]
				teste2 = requests.get(teste.replace('https//','https://'),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
				teste3 = teste3[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			'''try:
				url5 = requests.get('https://subtitles123.com/category/brazillian-portuguese/?s='+leg4[0].replace(':','')).text
				dev1 = re.compile('"headline"><a href="(.+?)".+?bookmark">'+leg4[0][:-1].replace(': ','.').replace(' ','.')+'.[0-9]').findall(url5)
				url2 = requests.get(dev1[0]).text
				dev2 = re.compile('<a href="(.+?)"><button').findall(url2)
				teste3 = dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				try:
					file = zipfile.ZipFile(io.BytesIO(response.content))
        
					file.extractall(path)
				except:
					pass
					with open(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendas-Dev (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendas-Dev (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass'''
			try:
				link = requests.get("https://www.opensubtitles.org/pb/search2/sublanguageid-pob/moviename-"+leg4[0].replace(' ','+').replace(':',''),headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				link2 = re.compile('href=".pb.search.sublanguageid-pob.(idmovie-\w+)">'+leg4[0][:-1].replace(':','')+'[(]').findall(link.text.replace('\n','').replace('\r','').replace(':','').encode('ascii', 'ignore').decode())
				try:
					link3 = "https://www.opensubtitles.org/pb/search/"+link2[0]+"/sublanguageid-pob"
					link4 = requests.get(link3)
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link4.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link4.text)
				except:
					link5 = re.compile('servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link5[0]
				except:
					pass
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link6[0]
				except:
					pass

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/OpenSubtitles (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "OpenSubtitles (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				link = requests.get("https://www.baixarlegenda.net/?s="+popup[:-1].replace(' ','+'), headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n', '').replace('\r', '')
				match = re.compile('title">'+popup[:-1]+'<.+?<.span> <.div> <a href="(.+?)"').findall(link)
				link2 = requests.get(match[0], headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				match2 = re.compile('href="(.+?)" class="btn sm rnd blk">Download').findall(link2.replace('#038;',''))
				download = match2[0]
				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Baixarlegenda (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.baixarlegenda.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome or 'OpenSubtitles' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Baixarlegenda (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass

			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Baixarlegenda (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(popup,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(popup, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass

############### PIRATES
##########################
##################################
def MoviesPR(): #186
	AddDir("[COLOR yellow][B][Gênero dos Filmes]:[/B] " + Clistapr1[int(Catpr)] +"[/COLOR]", "url" ,86 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPagepr1) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPagepr1) ) +"][/B][/COLOR]", cPagepr1 , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPagepr1", info='\xa0')
		l= int(cPagepr1)*6
		for x in range(0, 6):
			l +=1
			link = requests.get("https://thepiratetorrents.org/category/genero/"+Clistapr0[int(Catpr)]+"/page/"+str(l)+"/",headers={'Referer':'https://thepiratetorrents.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('<\/i><a href="(.+?)#.+?title="(.+?)".+?src="(.+?)".+?Duração:.+?>(.+?)<').findall(link)
			for link, name2, image2, ep in match:
				if "Temporada" in name2 or "EPISÓDIO" in name2 or "TEMPORADA" in name2 or 'EP' in ep: False
				else:
					AddDir(name2.replace("Torrent ","").replace(" –",""), link, 187, image2, image2, isFolder=True, info='\xa0')
				p += 1
		if p >= 60:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPagepr1) + 2) +"][/B][/COLOR]", cPagepr1 , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPagepr1", info='\xa0')
	except:
		pass
		
		
def MenuPR(): #187
	try:
		brevelink = requests.get(url,headers={'Referer':'https://thepiratetorrents.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
		breve = re.compile('">(EM BREVE)<.span>').findall(brevelink)
		breve = breve[0]
		AddDir("[COLOR red][B]*EM BREVE (AINDA NÃO DISPONIVEL)*[/B][/COLOR]", '', '', iconimage, iconimage, isFolder=False, IsPlayable=True, info='Filme ainda não está disponivel, provavelmente ainda nos cinemas')
	except:
		pass
	try:
		you = re.compile("(.+?)(WEB|CAM|BluRay|HDRip)").findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		for youtub, complemet in you:
			trailer = requests.get("https://www.youtube.com/results?search_query="+ youtub.replace(" ","+")+"+Trailer"+"")
			namey = re.compile('\w').findall(youtub)
			trailer2 = re.compile('"label":"'+namey[0]+'.+?"label":"([0-5].minuto|[0-9][0-9].segundo).+?addedVideoId":"(.+?)"').findall(trailer.text.replace('Filme ','').replace('FILME ','').replace('TRAILER ','').replace('Trailer','').replace('“',''))
			AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0][1], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+youtub)
	except:
		pass
	try:
		link = requests.get(url,headers={'Referer':'https://thepiratetorrents.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
		#arquivo = open(cachefolder + "pirate.txt", "w+")
		#arquivo.write(url)
		#arquivo.close()
		match = re.compile('<strong>::.(.+?)::(.+?)<.noscript>').findall(link.replace('center;"><strong><','').replace(': </strong></p><hr /><p style="text-align: center;">','<strong>:: Escolha a opção :: <p style="text-align:.center;">').replace('_</p><p style="text-align: center;">','<strong>:: Escolha a opção :: <p style="text-align:.center;">'))
		sinopse = re.compile('SINOPSE:<.span>.+?>(.+?)<.p>').findall(link)
		for title2, link in match:
			title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]")
			if sinopse:
				for info1 in sinopse:
					AddDir(title2, link, 188, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
			else:
				AddDir(title2, link, 188, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
	except:
		pass
def PlayPR(): #188
	listar=[]
	listal=[]
	match = re.compile('<p style="text-align:.center;"><strong>(.+?)<.+?href="(.+?)"').findall(url)
	if match:
		for name2, url2 in match:
			listal.append(url2)
			listar.append(name2)
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
			try:
				popup = re.compile("(\w.+?)(WEB|CAM|BluRay|HDRip)").findall(background)
				popup = popup[0][0]
				xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(popup, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
			except:
				pass
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			if 'Legendado' in legdub:
				try:
					xbmc.sleep(3000)
					cutzim = re.compile('btih:(.+?)&|btih:(.+)').findall(str(decode).lower())
					for cutzm in cutzim:
						cache = xbmcvfs.translatePath("special://temp")
						file = open(cache +'elementum/'+''.join(cutzm).replace("'",'')+'.torrent', 'r', errors="ignore")
						leg4 = re.compile('name.+?:(.+? )[0-9][0-9][0-9][0-9]').findall(file.readline().replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
				except:
					try:
						leg4 = re.compile('dn=(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
					except:
						try:
							while True:
								decode = requests.get('http://127.0.0.1:65220/torrents/').text
								leg4 = re.compile('"title":"(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
								time.sleep(2)
								if leg4:
									break
						except:
							try:
								re22 = re.compile("(\w.+?)([(])").findall(background)
								recom2 = re22[0][0]
								leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
								leg1x1 = recom2[:-1].split(' ')
								notific1 = (['\w' + name[1:] + '' for name in leg1x1])
								cut = ' '.join(notific1)
								try:
									leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
									legx = leg2[0]
								except:
									urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
									leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
								leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
								leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
							except:
								pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0]).findall(url5.replace(':','').replace("'",''))
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5.replace(':','').replace("'",''))
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5.replace(':','').replace("'",''))
				except:
					pass
			else:
				try:
					re22 = re.compile("(\w.+?)(WEB|CAM|BluRay|HDRip)").findall(background)
					recom2 = re22[0][0]
					leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
					leg1x1 = recom2[:-1].split(' ')
					notific1 = (['\w' + name[1:] + '' for name in leg1x1])
					cut = ' '.join(notific1)
					try:
						leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
						legx = leg2[0]
					except:
						urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
						leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
					leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
				except:
					pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0]).findall(url5)
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5)
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5)
				except:
					pass
			try:
				dev1 = re.compile('href="(.title.+?)"').findall(dev1x[0])
				url2 = requests.get('https://www.elsubtitle.com'+dev1[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					devx = re.compile('Brazil.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
					off = devx[0]
					url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-br', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				except:
					try:
						devx = re.compile('Portugal.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						off = devx[0]
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					except:
						devx = re.compile('Portugue.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
				teste3 = 'https://www.elsubtitle.com' + dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				with open(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					#if 'Legendei' in nome or 'Legendas-Dev' in nome or 'OpenSubtitles' in nome: False
					#else:
					if ".srt" in nome:
						novo_nome = "Elsubtitle (Brasil)-pt.forced" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt"
						renam = renam[0]
			except:
				pass
			try:
				#arquivo = open(cachefolder + "LegendaT.txt", "w+")
				#arquivo.write(leg4[0])
				#arquivo.close()
				url5 = requests.get("https://legendei.top/?s="+leg4[0].replace(':',''),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
				teste = re.compile('thumbnail">\s\s.+?href="(.+?)".+?title.+?'+leg4[0][:-1].replace(':','')+'\s[(]').findall(url5.replace(':',''))
				teste = teste[0]
				teste2 = requests.get(teste.replace('https//','https://'),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
				teste3 = teste3[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			'''try:
				url5 = requests.get('https://subtitles123.com/category/brazillian-portuguese/?s='+leg4[0].replace(':','')).text
				dev1 = re.compile('"headline"><a href="(.+?)".+?bookmark">'+leg4[0][:-1].replace(': ','.').replace(' ','.')+'.[0-9]').findall(url5)
				url2 = requests.get(dev1[0]).text
				dev2 = re.compile('<a href="(.+?)"><button').findall(url2)
				teste3 = dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				try:
					file = zipfile.ZipFile(io.BytesIO(response.content))
        
					file.extractall(path)
				except:
					pass
					with open(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendas-Dev (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendas-Dev (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass'''
			try:
				link = requests.get("https://www.opensubtitles.org/pb/search2/sublanguageid-pob/moviename-"+leg4[0].replace(' ','+').replace(':',''),headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				link2 = re.compile('href=".pb.search.sublanguageid-pob.(idmovie-\w+)">'+leg4[0][:-1].replace(':','')+'[(]').findall(link.text.replace('\n','').replace('\r','').replace(':','').encode('ascii', 'ignore').decode())
				try:
					link3 = "https://www.opensubtitles.org/pb/search/"+link2[0]+"/sublanguageid-pob"
					link4 = requests.get(link3)
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link4.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link4.text)
				except:
					link5 = re.compile('servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link5[0]
				except:
					pass
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link6[0]
				except:
					pass

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/OpenSubtitles (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "OpenSubtitles (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				link = requests.get("https://www.baixarlegenda.net/?s="+popup[:-1].replace(' ','+'), headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n', '').replace('\r', '')
				match = re.compile('title">'+popup[:-1]+'<.+?<.span> <.div> <a href="(.+?)"').findall(link)
				link2 = requests.get(match[0], headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				match2 = re.compile('href="(.+?)" class="btn sm rnd blk">Download').findall(link2.replace('#038;',''))
				download = match2[0]
				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Baixarlegenda (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.baixarlegenda.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome or 'OpenSubtitles' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Baixarlegenda (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Baixarlegenda (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(popup,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(popup, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass

            
            
###############PIRATE SERIE
def Pirateserie(): #250
	pagina = "0" if not cPageserPR else cPageserPR
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserPR", info='\xa0')
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			link = requests.get("https://thepiratetorrents.org/category/series/page/"+str(y)+"/",headers={'Referer':'https://thepiratetorrents.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('<\/i><a href="(.+?)#.+?title="(.+?)".+?src="(.+?)"').findall(link)
			for link, name2, image2 in match:
				AddDir(name2.replace("Torrent ","").replace(" –",""), link, 251, image2, image2, isFolder=True, info='\xa0')
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserPR", info='\xa0')

def Piratemenu(): #251
	try:
		link = requests.get(url,headers={'Referer':'https://thepiratetorrents.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
		#arquivo = open(cachefolder + "netcine.txt", "w+")
		#arquivo.write(link.replace('Versão Legendado:',':: LEGENDADO ::').replace('Versão Dual Áudio / Dublado:',':: DUAL ÁUDIO / DUBLADO ::').replace('color: #ff0000;">','><h2').replace('﻿',''))
		#arquivo.close()
		match = re.compile('<strong>::.(.+?)::(.+?)><h2').findall(link.replace('Versão Legendado:',':: LEGENDADO ::').replace('Versão Dual Áudio / Dublado:',':: DUAL ÁUDIO / DUBLADO ::').replace('color: #ff0000;">','><h2').replace('0p Dual Áudio / Dublado','<strong>:: DUAL ÁUDIO / DUBLADO ::').replace('﻿',''))
		match1 = match[0]
		for title2, link in match:
			title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]")
			AddDir(title2, "https://"+link, 252, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
	except:
		pass
		#link = requests.get(url,headers={'Referer':'https://thepiratetorrents.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
		match = re.compile('DOWNLOAD.+?<strong>(.+?)<(.+?)><h2').findall(link.replace('﻿',''))
		for title2, link in match:
			if ":: LEGENDADO ::" in title2 or ":: DUAL ÁUDIO / DUBLADO ::" in title2 or "OBS:" in title2: False
			else:
				AddDir(title2, "https://"+link, 252, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')

def Piratemenu2(): #252
	#arquivo = open(cachefolder + "netcine.txt", "w+")
	#arquivo.write(url.replace('—<br /> ','ter;">').replace('/strong></p><p>','ter;">Temporada Completa'))
	#arquivo.close()
	try:
		match = re.compile('(Temporada.+?|Epi.+?)<a(.+?)<.a><.p>').findall(url.replace('—<br /> ','ter;">').replace('/strong></p><p>','ter;">Temporada Completa').replace('TEMPORADA','Temporada').replace('COMPLETA','completa'))
		match1 = match[0]
		try:
			url3 = ([name1 for name1, link in match])
			if re.search(r'(o [0-9][0-9]\b)|x([0-9][0-9]\b)|O ([0-9][0-9]\b)', str(url3)):
				teste = false
			else:
				teste = ''
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 542, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for name2, url2 in match:
			AddDir(name2.replace("<b>","").replace(":","").replace("|","").replace("<strong>","").replace('<ter;">'," ").replace('</b>',"").replace('</strong>','').replace('</p><p style="text-align center;">','').replace('Temporada Temporada','Temporada'), url2, 253, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
	except:
		match = re.compile('(Temporada.+?|Epi.+?|S[0-9].+?)<a(.+?)<.a><.p>').findall(url.replace('—<br /> ','ter;">').replace('/strong></p><p>','ter;">Temporada Completa'))
		try:
			url3 = ([name1 for name1, link in match])
			if re.search(r'(o [0-9][0-9]\b)|x([0-9][0-9]\b)|O ([0-9][0-9]\b)', str(url3)):
				teste = false
			else:
				teste = ''
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 542, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for name2, url2 in match:
			AddDir(name2.replace("<b>","").replace(":","").replace("|","").replace("<strong>","").replace('<ter;">'," ").replace('</b>',"").replace('</strong>','').replace('</p><p style="text-align center;">','').replace('Temporada Temporada','Temporada'), url2, 253, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')

def Pirateplay(): #253
	listar=[]
	listal=[]
	url1 = re.sub('<img loading="lazy".+', 'Completo', url)
	#arquivo = open(cachefolder + "Comandoto.txt", "w+")
	#arquivo.write(url.replace('<img class="aligncenter jetpack-lazy-image"','">Completo').replace('pCompleto','p'))
	#arquivo.close()
	match = re.compile('href="(.+?)".+?">(\w+)').findall(url1.replace('<img class="aligncenter jetpack-lazy-image"','">Completo').replace('pCompleto','p'))
	if match:
		for url2, name2 in match:
			if "Legenda" in name2: False
			else:
				listal.append(url2)
				listar.append(name2.replace('<img class="aligncenter jetp',"720p"))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:
				try:
					re22 = re.compile("(\w.+?) [(]").findall(background)
					recom2 = urllib.parse.unquote(re22[0].replace('.',' '))
					recom2 = re.sub('.+-.', '', recom2)
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(url2x)
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
				except:
					pass
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				url5 = requests.get("https://legendei.top/?s="+recom2,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste = re.compile('thumbnail.+\s.+?href="(.+?)"').findall(url5)
				teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						new1 = re.compile('E([0-9][0-9])').findall(recom2)[0]
						if 'E'+new1 in nome or 'e'+new1 in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass

############## TORRENT SERIE

def comandoseries(): #173
	pagina = "0" if not cPageserCM else cPageserCM
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserCM", info='\xa0')
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			link = requests.get("https://www.torrentbrfilmes.com/category/series/page/"+str(y)+"/",headers={'Referer':'https://www.torrentbrfilmes.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			match = re.compile('"item"><a href="(.+?)".+?title="(.+?)".+?img.src="(.+?)"').findall(html.unescape(link.replace('src="data:','').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('\n', '').replace('\r', '')))
			for link, name2, image2 in match:
				AddDir(name2.replace(" Torrent","").replace(" –","").replace(' Downloads',''), link, 174, image2, image2, isFolder=True, info='\xa0')
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserCM", info='\xa0')

def comandomenu1(): #174
	#try:
		link = requests.get(url,headers={'Referer':'https://www.torrentbrfilmes.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "testeplayer.txt", "w+")
		#arquivo.write(link.replace('\n','').replace('\r','').replace('﻿','').replace('​​','').replace('»<b>','<strong>::').replace('«</strong>','::').replace('»<b>','<strong>:: ').replace('«</strong>','::').replace('**FIM DE TEMPORADA**','><h2'))
		#arquivo.close()
		match = re.compile('<strong>::.(.+?)::(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('<strong> ::','<strong>::').replace('center;">::','<strong>::').replace('»<b>','<strong>:: ').replace('«</strong>','::').replace('**FIM DE TEMPORADA**','><h2').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​',''))
		if match:
			for title2, link in match:
				if 'ONLINE' in title2: False
				else:
					title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("MULTI ÁUDIO","[COLOR springgreen][B]MULTI ÁUDIO[/B][/COLOR]").replace('</b>','').replace("MULTI-ÁUDIO","[COLOR springgreen][B]Multi-Áudio[/B][/COLOR]").replace("MULTI-SUBS","/ [COLOR red][B]Multi-Subs[/B][/COLOR]")
					AddDir(title2, link, 177, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
	#except:
	#	pass

def comandomenu2(): #177
	urlx = re.sub('<p style="text-align: center;"><strong>.+?Completa<\/strong><\/p><p style="text-align: center;"><strong>EPISÓDIO .+?<', '<p style="text-align: center;"><strong>EPISÓDIO 01: <', url)
	urlx = re.sub('<p style="text-align: center;"><strong>.+?Completa<\/strong><\/p><p style="text-align: center;"><strong>EPISÓDIOS .+?<', '<p style="text-align: center;"><strong>EPISÓDIOS 01 ao...: <', urlx)
	urlx = urlx.replace('| Episodio </strong><strong>','<p style="text-align:.center;"><strong>').replace('</a> <p style="text-align:.center;">','</p> <p style="text-align:.center;">')
	try:
		#arquivo = open(cachefolder + "testeplayer.txt", "w+")
		#arquivo.write(urlx.replace('<p><strong>','<p style="text-align: center;"><strong>').replace('<p style="text-align: center;"><b>','<p style="text-align: center;"><strong>').replace('<div style="text-align: center;"><strong>','<p style="text-align:.center;"><strong>').replace('o </b>','o ').replace('</div><div style="text-align: center;">','<p style="text-align:.center;"><strong>').replace('</a></strong>','</a></p').replace('center;"><b>Episódio','><strong>Episódio').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('</b>',''))
		#arquivo.close()
        #(TEM.+?|Tem.+?|EPI.+?|Epi.+?)<.+?href="(.+?<.p)
		try:
			match = re.compile('<p style="text-align:.center;"><strong>(.+?)<.+?href=".+?(id.+?)<\/p>').findall(urlx.replace('<p><strong>','<p style="text-align: center;"><strong>').replace('<p style="text-align: center;"><b>','<p style="text-align: center;"><strong>').replace('<div style="text-align: center;"><strong>','<p style="text-align:.center;"><strong>').replace('o </b>','o ').replace('</div><div style="text-align: center;">','<p style="text-align:.center;"><strong>').replace('</a></strong>','</a></p').replace('center;"><b>Episódio','><strong>Episódio').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('</b>',''))
			teste = match[0]
		except:
			match = re.compile('<p style="text-align:.center;"><strong>(.+?)<.+?href=".+?(id.+?)<\/p>').findall(urlx.replace('<p><strong>','<p style="text-align: center;"><strong>').replace('<p style="text-align: center;"><b>','<p style="text-align: center;"><strong>').replace('<div style="text-align: center;"><strong>','<p style="text-align:.center;"><strong>').replace('o </b>','o ').replace('</div><div style="text-align: center;">','<p style="text-align:.center;"><strong>').replace('</a></strong>','</a></p').replace('center;"><b>Episódio','><strong>Episódio').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('</b>',''))
			matchoff = match[0]
		#arquivo = open(cachefolder + "testeplayer.txt", "w+")
		#arquivo.write(str(match))
		#arquivo.close()
		try:
			url3 = ([name1 for name1, link in match])
			if re.search(r'(WEB-DL)|(Completo)|(Temporada)', str(url3)):
				teste = ''
			else:
				teste = false
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 543, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for name2, url2 in match:
			if "ONLINE" in name2: False
			else:
				cookiex = re.compile('(http.+?)<.p').findall(url2)
				name2 = re.sub('.+Em Exibição.', 'EPISÓDIO 01', name2)
				AddDir(name2.replace("<b>","").replace(":","").replace("|","").replace("<strong>","").replace('<ter;">'," ").replace('</b>',""), url2, 178, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=background)
	except:
		pass
		#arquivo = open(cachefolder + "testeplayer.txt", "w+")
		#arquivo.write(url)
		#arquivo.close()
		try:
			match = re.compile('><strong>(.+?)<.+?(href=".+?idd.+?<.a>)').findall(url.replace('<p><strong>','<p style="text-align: center;"><strong>').replace('center;"><b>Episódio','><strong>Episódio').replace('o </b>','o ').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('</b>',''))
		except:
			match = re.compile('><strong>(.+?)<.+?(href="magnet.+?<.a>)').findall(url.replace('<p><strong>','<p style="text-align: center;"><strong>').replace('center;"><b>Episódio','><strong>Episódio').replace('o </b>','o ').replace('Â ','').replace('Ã¡','á').replace('Ã¢','â').replace('Ã£','ã').replace('Ã§','ç').replace('Ã¨','è').replace('Ã©','é').replace('Ãª','ê').replace('Ã¬','ì').replace('Ã³','ó').replace('Ãµ','õ').replace('Ã´','ô').replace('Ã€','À').replace('Ã­','í').replace('Ã','Á').replace('Ã','É').replace('Ã”','Ó').replace('Âª','ª').replace('â','').replace('â€“','-').replace('Ãº','ú').replace('â','’').replace('Ã','Ú').replace('Ã ','à').replace('â¦','…').replace('â','“').replace('â','”').replace('﻿','').replace('​​','').replace('</b>',''))
		#arquivo = open(cachefolder + "testeplayer.txt", "w+")
		#arquivo.write(str(match))
		#arquivo.close()
		try:
			url3 = ([name1 for name1, link in match])
			if re.search(r'(WEB-DL)|(Completo)|(Temporada)', str(url3)):
				teste = ''
			else:
				teste = false
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 543, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for name2, url2 in match:
			cookiex = re.compile('(http.+?<).a>').findall(url2.replace('\xa0',' '))
			name2 = re.sub('.+Em Exibição.', 'EPISÓDIO 01', name2)
			AddDir(name2.replace("<b>","").replace(":","").replace("|","").replace("<strong>","").replace('<ter;">'," ").replace('</b>',""), cookiex, 178, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=background)
                
def comandoplay(): #178
	#arquivo = open(cachefolder + "testeplayer.txt", "w+")
	#arquivo.write(url)
	#arquivo.close()
	listar=[]
	listal=[]
	try:
		match = re.compile('id=(.+?)&.+?">(.+?)<').findall(url.replace('" rel="nofollow noopener noreferrer',''))
		matchoff = match[0]
	except:
		match = re.compile('(magnet.+?)">(.+?)<').findall(url.replace('" rel="nofollow noopener noreferrer',''))
	if match:
		for url2, name2 in match:
			if "Online" in name2: False
			else:
				name2 = re.sub('<img.+', name, name2)
				listal.append(url2)
				listar.append(name2)
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			try:
				invertida = ''.join(palavra[::-1] for palavra in url2x.split())
				decode = base64.b64decode(invertida)
				urloffx = decode.decode()
				PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+urloffx, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			except:
				PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:
				try:
					re22 = re.compile("(\w.+?) [(]").findall(background)
					recom2 = urllib.parse.unquote(re22[0].replace('.',' '))
					recom2 = re.sub('.+-.', '', recom2)
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(str(decode))
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
						#arquivo = open(cachefolder + "ComandotoT.txt", "w+")
						#arquivo.write(recom2)
						#arquivo.close()
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(url2x)
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
						#arquivo = open(cachefolder + "ComandotoT.txt", "w+")
						#arquivo.write(recom2)
						#arquivo.close()
				except:
					pass
				try:
					re22 = re.compile("(.+).ª").findall(recom2)[0]
					re23 = re.compile(".+(.)ª").findall(recom2)[0]
					re24 = re.compile("([0-9][0-9])").findall(name)[0]
					recom2 = re22+'S0'+re23+'E'+re24
				except:
					pass
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				cuts = re.compile('(.+) S[0-9][0-9]').findall(recom2)[0]
				cutsnum = re.compile('S[0-9]([0-9])').findall(recom2)[0]
				seasonnum = cuts+' '+cutsnum+'ª'
				try:
					url5 = requests.get("https://legendei.top/?s=" + recom2, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="'+cuts).findall(url5.replace('Permanent Link to ',''))
					teste = teste[0]
				except:
					url5 = requests.get("https://legendei.top/?s=" + seasonnum, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="' + cuts).findall(url5.replace('Permanent Link to ', ''))
					teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						new1 = re.compile('E([0-9][0-9])').findall(recom2)[0]
						if 'E'+new1 in nome or 'e'+new1 in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass

def Paylistplay(): #542
	url1 = url.replace(' (REPACK)','')
	try:
		result = re.compile('[0-9]([0-9]) \w.+?[0-9]([0-9]).+?href="(.+?)"').findall(url1)
		lista_episodios = []
		for num1, num2, link in result:
			lista_numeros = list(range(int(num1), int(num2) + 1))
			for numero in lista_numeros:
				episodio = f'"Episódio 0{numero}<: - href={link}&index={numero-1}"'
				lista_episodios.append(episodio)
		url1 = re.sub('Episodio [0-9][0-9] \w.+?[0-9][0-9].+?magnet.+?"',str(lista_episodios).replace("']",""), url1.replace('ó','o'))
		#arquivo = open(cachefolder + "testeplayer.txt", "w+")
		#arquivo.write(str(url1))
		#arquivo.close()
	except:
		pass
	playlist = xbmc.PlayList(xbmc.PLAYLIST_VIDEO)
	ur = re.compile('"(.+?[0-9]+?)[<:].+?(mag.+?)"').findall(str(url1.replace('ó','o').replace("'",'"').replace(' - ','<').replace('xa0','')))
	for name2,stream in ur:
		name2 = re.sub(".+a>", '', name2)
		name2 = re.sub('.+"', '', name2)
		name2 = re.sub('.+>', '', name2)
		name2 = "Episódio "+name2
		name2 = name2.replace('Episódio Episodio','Episódio')
		name2 = name2.replace('  ',' ')
		if re.search(r'([0-9]+ \w+ [0-9]+)|(Completa)|(Temporada)|(BluRay)', name2): False
		else:
			item = xbmcgui.ListItem(name2.replace(':','').replace(',','').replace('"',''), path = name2)
			item.setSubtitles([cachefolder+"Legendas/Legendei (Brasil)-pt.srt"])
			item.setInfo('video', infoLabels={'Title': '', 'plot': name2.replace(':','').replace(',','').replace('"','')})
			item.setArt({'thumb': iconimage,'poster': iconimage, 'fanart': iconimage, "icon": iconimage})
			playlist.add("plugin://plugin.video.elementum/play?show=''&uri="+stream, item)
			xbmcplugin.endOfDirectory(int(sys.argv[1]))
	while True:
		decode = requests.get('http://127.0.0.1:65220/torrents/list').text
		leg4 = re.compile('"name":"(.+?[0-9][0-9])').findall(str(decode).replace('.', ' '))
		time.sleep(2)
		if leg4:
			break
	while True:
		url4 = ''
		try:
			time.sleep(1)
			arquivo1 = open(cachefolder + 'subcheck.txt', 'r')
			url4 = arquivo1.read()
		except:
			pass
		time.sleep(2)
		tag = xbmc.getInfoLabel('VideoPlayer.PlaylistPosition')
		try:
			tag1 = int(tag)-1
		except:
			pass
		if tag1 <= 9:
			number = f"0{str(tag1)}"
		else:
			number = str(tag1)
		arquivo = open(cachefolder + "subcheck.txt", "w+")
		arquivo.write(number)
		arquivo.close()
		if number == url4:
			ok = ''
		else:
            ###################################################################################################################
			try:
				try:
					dir = cachefolder+'Legendas'
					dir2 = os.listdir(dir)
					for f in dir2:
						if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
							os.remove(os.path.join(dir, f))
				except:
					pass
				try:
					dir =  cachefolder+'Legendas'
					dir2 = os.listdir(dir)
					for f in dir2:
						shutil.rmtree(cachefolder+'Legendas/'+f)
				except:
					pass
				recom2 = leg4[0]+'E'+number
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				cuts = re.compile('(.+) S[0-9][0-9]').findall(recom2)[0]
				cutsnum = re.compile('S[0-9]([0-9])').findall(recom2)[0]
				seasonnum = cuts+' '+cutsnum+'ª'
				try:
					url5 = requests.get("https://legendei.top/?s=" + recom2, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="'+cuts).findall(url5.replace('Permanent Link to ',''))
					teste = teste[0]
				except:
					url5 = requests.get("https://legendei.top/?s=" + seasonnum, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="' + cuts).findall(url5.replace('Permanent Link to ', ''))
					teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						new1 = re.compile('E([0-9][0-9])').findall(recom2)[0]
						if 'E'+new1 in nome or 'e'+new1 in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass
		if not tag:
			arquivo = open(cachefolder + "subcheck.txt", "w+")
			arquivo.write(str(tag))
			arquivo.close()
			break
    
def Paylistplay2(): #543
	playlist = xbmc.PlayList(xbmc.PLAYLIST_VIDEO)
	#arquivo = open(cachefolder + "testeplayer.txt", "w+")
	#arquivo.write(str(url))
	#arquivo.close()
	try:
		r720vr1080 = re.compile('720p.+?1080p').findall(url)
		resolution = r720vr1080[0]
		d = xbmcgui.Dialog().select("Selecione a resolução", ['720','1080'])
		if d!= -1:
			url2 = d
			ends = []
			epi = re.compile('[0-9]+?:.+?<\/p').findall(url)
			Episo = (["Episódio "+name.replace('00','0').replace("', '",'') for name in epi])
			#arquivo = open(cachefolder + "testeplayer.txt", "w+")
			#arquivo.write(str(Episo))
			#arquivo.close()
			invert = re.compile('(Epi.+?[0-9]+?:.+?id=)(.+?)&.+?>(720.).+?id=(.+?)&.+?>(1080p)').findall(str(Episo))
			for part1, comp1, reso1, comp2, reso2 in invert:
				invertida = ''.join(palavra[::-1] for palavra in comp1.split())
				link = base64.b64decode(invertida+'=')
				invertida1 = ''.join(palavra[::-1] for palavra in comp2.split())
				link2 = base64.b64decode(invertida1+'=')
				end = part1 + link.decode() +" >"+ reso1 +"< - "+ link2.decode() +" >"+ reso2+"<"
				ends.append(end)
				#arquivo = open(cachefolder + "testeplayer.txt", "w+")
				#arquivo.write(str(ends))
				#arquivo.close()
			teste = re.compile("(.+?720p)< - (.+?1080p)").findall(str(ends))
			#arquivo = open(cachefolder + "testeplayer.txt", "w+")
			#arquivo.write(str(ends))
			#arquivo.close()
			r720 = ([r720 for r720, unk1 in teste])
			r1080 = ([r1080 for unk, r1080 in teste])
			cont = re.compile('[0-9][0-9]').findall(r720[0])
			if url2 == 0:
				for test in r720:
					ur = str(test)
					ur1 = re.compile('(Ep.+?[0-9]+?):.+?(magnet.+?) >').findall(ur)
					for name2, stream in ur1:
						name2 = re.sub(">.+?, '", '', name2)
						name2 = re.sub('.+"', '', name2)
						name2 = re.sub('.+>', '', name2)
						if re.search(r'([0-9]+ \w+ [0-9]+)|(Completa)|(Temporada)|(BluRay)', name2): False
						else:
							#arquivo = open(cachefolder + "testeplayer.txt", "w+")
							#arquivo.write(str(stream))
							#arquivo.close()
							item = xbmcgui.ListItem(name2.replace(':',''), path = name2)
							item.setSubtitles([cachefolder+"Legendas/Legendei (Brasil)-pt.srt"])
							item.setInfo('video', infoLabels={'Title': '', 'plot': name2.replace(':','')})
							item.setArt({'thumb': iconimage,'poster': iconimage, 'fanart': iconimage, "icon": iconimage})
							playlist.add("plugin://plugin.video.elementum/play?show=''&uri="+stream, item)
							xbmcplugin.endOfDirectory(int(sys.argv[1]))
                
			elif url2 == 1:
				t = int(cont[0].replace('0',''))-1
				for epx in r1080:
					t += 1
					ur = "Episódio "+str(t)+": - "+str(epx)
					#arquivo = open(cachefolder + "testeplayer.txt", "w+")
					#arquivo.write(str(ur))
					#arquivo.close()
					ur1 = re.compile('(Ep.+?[0-9]+?):.+?(magnet.+?) >').findall(ur)
					for name2, stream in ur1:
						name2 = re.sub(">.+?, '", '', name2)
						name2 = re.sub('.+"', '', name2)
						name2 = re.sub('.+>', '', name2)
						if re.search(r'([0-9]+ \w+ [0-9]+)|(Completa)|(Temporada)|(BluRay)', name2): False
						else:
							item = xbmcgui.ListItem(name2.replace(':',''), path = name2)
							item.setSubtitles([cachefolder+"Legendas/Legendei (Brasil)-pt.srt"])
							item.setInfo('video', infoLabels={'Title': '', 'plot': name2.replace(':','')})
							item.setArt({'thumb': iconimage,'poster': iconimage, 'fanart': iconimage, "icon": iconimage})
							playlist.add("plugin://plugin.video.elementum/play?show=''&uri="+stream, item)
							xbmcplugin.endOfDirectory(int(sys.argv[1]))
		while True:
			decode = requests.get('http://127.0.0.1:65220/torrents/list').text
			leg4 = re.compile('"name":"(.+?[0-9][0-9]\w)').findall(str(decode).replace('.', ' '))
			time.sleep(2)
			if leg4:
				break
		while True:
			url4 = ''
			try:
				time.sleep(1)
				arquivo1 = open(cachefolder + 'subcheck.txt', 'r')
				url4 = arquivo1.read()
			except:
				pass
			time.sleep(2)
			tag = xbmc.getInfoLabel('VideoPlayer.PlaylistPosition')
			try:
				tag1 = int(tag)-1
			except:
				pass
			if tag1 <= 9:
				number = f"0{str(tag1)}"
			else:
				number = str(tag1)
			arquivo = open(cachefolder + "subcheck.txt", "w+")
			arquivo.write(number)
			arquivo.close()
			if number == url4:
				ok = ''
			else:
				try:
					try:
						dir = cachefolder+'Legendas'
						dir2 = os.listdir(dir)
						for f in dir2:
							if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
								os.remove(os.path.join(dir, f))
					except:
						pass
					try:
						dir =  cachefolder+'Legendas'
						dir2 = os.listdir(dir)
						for f in dir2:
							shutil.rmtree(cachefolder+'Legendas/'+f)
					except:
						pass
					recom2 = leg4[0]+number
					try:
						xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
					except:
						pass
					cuts = re.compile('(.+) S[0-9][0-9]').findall(recom2)[0]
					cutsnum = re.compile('S[0-9]([0-9])').findall(recom2)[0]
					seasonnum = cuts+' '+cutsnum+'ª'
					try:
						url5 = requests.get("https://legendei.top/?s=" + recom2, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="'+cuts).findall(url5.replace('Permanent Link to ',''))
						teste = teste[0]
					except:
						url5 = requests.get("https://legendei.top/?s=" + seasonnum, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="' + cuts).findall(url5.replace('Permanent Link to ', ''))
						teste = teste[0]
					try:
						teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
						teste3 = teste3[0]
					except:
						xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

					path = cachefolder+"Legendas/"
					try:
						os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
					except:
						pass
					response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
	
					file = zipfile.ZipFile(io.BytesIO(response.content))

					file.extractall(path)
					try:
						local = os.path.abspath(cachefolder+"Legendas")
						for p, _, files in os.walk(local):
							for file in files:
								filex = file.replace('(','#%').replace(')','#@')
								arquivos = os.path.join(p, filex)
								arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
								arquivos1x = arquivos1
								teste = str(arquivos1x).replace('\n','').replace('\r','')
								final = re.compile('.+srt').findall(teste)
								for teste in final:
									arquivos2 = re.compile('.'*5+'.srt').findall(teste)
									os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
					except:
						pass
					for nome in os.listdir(cachefolder+"Legendas/"):
						if ".srt" in nome:
							new1 = re.compile('E([0-9][0-9])').findall(recom2)[0]
							if 'E'+new1 in nome or 'e'+new1 in nome:
								novo_nome = "Legendei (Brasil)-pt" + ".srt"
								os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
								renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
								renam = renam[0]
				except:
					pass
				try:
					notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
					teste = re.compile('srt').findall(str(notific))
					teste = teste[0]
					LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
					legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
					xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
				except:
					try:
						xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
					except:
						pass
			if not tag:
				arquivo = open(cachefolder + "subcheck.txt", "w+")
				arquivo.write(str(tag))
				arquivo.close()
				break
                                
	except:
		url1 = url.replace(' (REPACK)','')
		try:
			ends = []
			invert = re.compile('(Epi.+?[0-9]+?:.+?id=)(.+?)&.+?(")').findall(url1)
			for part1, comp, rest in invert:
				invertida = ''.join(palavra[::-1] for palavra in comp.split())
				link = base64.b64decode(invertida+'=')
				end = part1+link.decode()+rest
				ends.append(end)
			result = re.compile('[0-9]([0-9]) \w.+?[0-9]([0-9]).+?id=(.+?)"').findall(str(ends))
			lista_episodios = []
			for num1, num2, link in result:
				lista_numeros = list(range(int(num1), int(num2) + 1))
				for numero in lista_numeros:
					episodio = f'"Episódio 0{numero}: - id={link}&index={numero - 1}"'
					lista_episodios.append(episodio)
			url1 = re.sub('Episodio [0-9][0-9] \w.+?[0-9][0-9]:.+?id=.+?"',str(lista_episodios).replace("']",""), str(ends).replace('ó','o'))
			#arquivo = open(cachefolder + "testeplayer.txt", "w+")
			#arquivo.write(str(url1.replace('ó','o').replace('','').replace("'",'"').replace('\ '[0],'').replace('xa0',' ')))
			#arquivo.close()
		except:
			pass
		try:
			ur = re.compile('"(.+?[0-9]+?):.+?id=(.+?)"').findall(str(url1.replace('ó','o').replace('','').replace("'",'"').replace('\ '[0],'').replace('xa0',' ')))
			urlof = ur[0]
		except:
			ur = re.compile('"(.+?[0-9]+?):.+?(magnet.+?)"').findall(str(url1.replace('ó','o').replace("'",'"').replace('\ '[0],'').replace('xa0',' ')))
		for name2, stream in ur:
			name2 = re.sub(">.+?, '", '', name2)
			name2 = re.sub('.+"', '', name2)
			name2 = re.sub('.+>', '', name2)
			if re.search(r'([0-9]+ \w+ [0-9]+)|(Completa)|(Temporada)|(BluRay)', name2): False
			else:
				item = xbmcgui.ListItem(name2.replace(':',''), path = name2)
				item.setSubtitles([cachefolder+"Legendas/Legendei (Brasil)-pt.srt"])
				item.setInfo('video', infoLabels={'Title': '', 'plot': name2.replace(':','')})
				item.setArt({'thumb': iconimage,'poster': iconimage, 'fanart': iconimage, "icon": iconimage})
				playlist.add("plugin://plugin.video.elementum/play?show=''&uri="+stream, item)
				xbmcplugin.endOfDirectory(int(sys.argv[1]))
		while True:
			decode = requests.get('http://127.0.0.1:65220/torrents/list').text
			leg4 = re.compile('"name":"(.+?[0-9][0-9]\w)').findall(str(decode).replace('.', ' '))
			time.sleep(2)
			if leg4:
				break
		while True:
			url4 = ''
			try:
				time.sleep(1)
				arquivo1 = open(cachefolder + 'subcheck.txt', 'r')
				url4 = arquivo1.read()
			except:
				pass
			time.sleep(2)
			tag = xbmc.getInfoLabel('VideoPlayer.PlaylistPosition')
			try:
				tag1 = int(tag)-1
			except:
				pass
			if tag1 <= 9:
				number = f"0{str(tag1)}"
			else:
				number = str(tag1)
			arquivo = open(cachefolder + "subcheck.txt", "w+")
			arquivo.write(number)
			arquivo.close()
			if number == url4:
				ok = ''
			else:
   	         ###################################################################################################################
				try:
					try:
						dir = cachefolder+'Legendas'
						dir2 = os.listdir(dir)
						for f in dir2:
							if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
								os.remove(os.path.join(dir, f))
					except:
						pass
					try:
						dir =  cachefolder+'Legendas'
						dir2 = os.listdir(dir)
						for f in dir2:
							shutil.rmtree(cachefolder+'Legendas/'+f)
					except:
						pass
					recom2 = leg4[0]+number
					try:
						xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
					except:
						pass
					cuts = re.compile('(.+) S[0-9][0-9]').findall(recom2)[0]
					cutsnum = re.compile('S[0-9]([0-9])').findall(recom2)[0]
					seasonnum = cuts+' '+cutsnum+'ª'
					try:
						url5 = requests.get("https://legendei.top/?s=" + recom2, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="'+cuts).findall(url5.replace('Permanent Link to ',''))
						teste = teste[0]
					except:
						url5 = requests.get("https://legendei.top/?s=" + seasonnum, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="' + cuts).findall(url5.replace('Permanent Link to ', ''))
						teste = teste[0]
					try:
						teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
						teste3 = teste3[0]
					except:
						xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

					path = cachefolder+"Legendas/"
					try:
						os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
					except:
						pass
					response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})	

					file = zipfile.ZipFile(io.BytesIO(response.content))

					file.extractall(path)
					try:
						local = os.path.abspath(cachefolder+"Legendas")
						for p, _, files in os.walk(local):
							for file in files:
								filex = file.replace('(','#%').replace(')','#@')
								arquivos = os.path.join(p, filex)
								arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
								arquivos1x = arquivos1
								teste = str(arquivos1x).replace('\n','').replace('\r','')
								final = re.compile('.+srt').findall(teste)
								for teste in final:
									arquivos2 = re.compile('.'*5+'.srt').findall(teste)
									os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
					except:
						pass
					for nome in os.listdir(cachefolder+"Legendas/"):
						if ".srt" in nome:
							new1 = re.compile('E([0-9][0-9])').findall(recom2)[0]
							if 'E'+new1 in nome or 'e'+new1 in nome:
								novo_nome = "Legendei (Brasil)-pt" + ".srt"
								os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
								renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
								renam = renam[0]
				except:
					pass
				try:
					notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
					teste = re.compile('srt').findall(str(notific))
					teste = teste[0]
					LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
					legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
					xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
				except:
					try:
						xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
					except:
						pass
			if not tag:
				arquivo = open(cachefolder + "subcheck.txt", "w+")
				arquivo.write(str(tag))
				arquivo.close()
				break
		#playlist.remove('') 
            
def Paylistplay3(): #544        
	liStyle = xbmcgui.ListItem(path = url)
	liStyle.setInfo('video', {})
	liStyle.setProperty('isPlayable', 'true')
	liStyle.setProperty('inputstream', 'inputstream.adaptive')
	liStyle.setProperty('inputstream.adaptive.manifest_type', 'mpd')
	liStyle.setProperty('inputstream.adaptive.stream_headers', 'User-Agent=Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.45 Safari/537.36 Edg/79.0.309.30&verifypeer=false')
	liStyle.setMimeType('application/dash+xml')
	liStyle.setContentLookup(False)
	xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, liStyle)
    
def Paylistplay4(): #545
	#arquivo = open(cachefolder + "playerteste.txt", "w+")
	#arquivo.write(str(url.replace("', '",'x').replace('"',"'")))
	#arquivo.close()
	playlist = xbmc.PlayList(xbmc.PLAYLIST_VIDEO)
	ur = re.compile("'([0-9]+)x([0-9]+)', 'link': '(.+?)'").findall(str(url.replace("', '",'x').replace('"',"'")))
	for episode,season,stream in ur:
		name2 = "Episódio "+season+'x'+episode
		item = xbmcgui.ListItem(name2.replace(':','').replace(',','').replace('"',''), path = name2)
		item.setInfo('video', infoLabels={'Title': '', 'plot': name2.replace(':','').replace(',','').replace('"','')})
		item.setArt({'thumb': iconimage,'poster': iconimage, 'fanart': iconimage, "icon": iconimage})
		headerp = 'fFVzZXItQWdlbnQ9UkVETElORUNMSUVOVCBzYW1zdW5nIFNNLUc5ODhOIDEuMC4wMg=='
		headerp = base64.b64decode(headerp).decode('utf-8')
		playlist.add(stream+headerp, item)
	#playlist.remove('')
##################################
#COMANDO.TO
########################

##### Alternativo: comandotorrents.fun
def Comandotomenu(): #518
	AddDir("[COLOR yellow][B][Gênero dos Filmes]:[/B] " + ClistaMEG11[int(CatMG)] +"[/COLOR]", "url" ,233 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageMEG) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageMEG) ) +"][/B][/COLOR]", cPageMEG , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageMEG", info='\xa0')
		l= int(cPageMEG)*4
		for x in range(0, 4):
			l +=1
			if 'Fixados' in ClistaMEG11[int(CatMG)]:
				#pagina = "0" if not FIXADOS else FIXADOS
				#if int(pagina) > 0:
				#	AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="FIXADOS", info='\xa0')
				#y= int(pagina)*4
				#for x in range(0, 4):
					try:
						#y +=1
						#link = requests.get("https://comando.la/page/"+str(y)+"/",headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
						link = requests.get("https://comando.la/",headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
						match = re.compile('"headline" ><a href="(.+?)">(.+?)<.+?" src="(.+?)".+?>([0-9].+?)<').findall(link.replace('>: ','>'))
						for link, name2, image2, imdb in match:
							if "Temporada" in name2 or "Completo" in name2 or "Minissérie" in name2: False
							else:
								imdb1 = re.sub('\w\w\w\w','Sem nota',imdb)
								AddDir(name2.replace(" Torrent","").replace(" –","").replace("Download","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…'), link, 519, image2.replace('#038;',''), image2.replace('#038;',''), isFolder=True, info='[COLOR yellow]\nIMDb: [/COLOR]'+imdb1.replace('–/10','Sem nota').replace('&#8211;/10','Sem nota'))
					except:
						pass
				#AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="FIXADOS", info='\xa0')
			elemento = "https://comando.la/category/"+ClistaMEG10[int(CatMG)]+"/page/"+str(l)+"/"
			link = requests.get(elemento.replace('page/1/',''),headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			link2 = re.compile("Categoria:(.+?)Página").findall(link.replace('\n','').replace('\r',''))
			#arquivo = open(cachefolder + "TuaSerie2.txt", "w+")
			#arquivo.write(html.unescape(link2[0]))
			#arquivo.close()
			match = re.compile('"headline" ><a href="(.+?)">(.+?)<.+?" src="(.+?)".+?>([0-9].+?)<').findall(html.unescape(link2[0].replace('>: ','>')))
			for link, name2, image2, imdb in match:
				if "Temporada" in name2 or "Completo" in name2 or "Minissérie" in name2: False
				else:
					imdb1 = re.sub('\w\w\w\w','Sem nota',imdb)
					AddDir(name2.replace(" Torrent","").replace(" –","").replace("Download","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…'), link, 519, image2.replace('#038;',''), image2.replace('#038;',''), isFolder=True, info='[COLOR yellow]\nIMDb: [/COLOR]'+imdb1.replace('–/10','Sem nota').replace('&#8211;/10','Sem nota'))
				p += 1
		if p >= 40:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageMEG) + 2) +"][/B][/COLOR]", cPageMEG , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageMEG", info='\xa0')
	except:
		pass

def Comandotomenu2(): #519
	try:
		you = re.compile("(\w.+?)[)]").findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		trailer = requests.get("https://www.youtube.com/results?search_query="+ you[0].replace(" ","+").replace("(","")+"+Trailer"+"")
		namey = re.compile('\w').findall(you[0])
		trailer2 = re.compile('"label":"'+namey[0]+'.+?"label":"([0-5].minuto|[0-9][0-9].segundo).+?addedVideoId":"(.+?)"').findall(trailer.text.replace('Filme ','').replace('FILME ','').replace('TRAILER ','').replace('Trailer','').replace('“',''))
		#arquivo = open(cachefolder + "TuaSerie2.txt", "w+")
		#arquivo.write(trailer2[0][1])
		#arquivo.close()
		AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0][1], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+you[0].replace("(",""))
	except:
		pass
	try:
		link = requests.get(url,headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('<strong>DUAL ÁUDIO</strong>','<strong>:: DUAL ÁUDIO ::</strong>').replace('<strong>DUBLADO OFICIAL</strong>','<strong>:: DUBLADO OFICIAL ::</strong>').replace('<strong>DUBLADO NÃO OFICIAL</strong>','<strong>:: DUBLADO NÃO OFICIAL ::</strong>').replace('<strong>LEGENDADO</strong>','<strong>:: LEGENDADO ::</strong>').replace('<strong>DUBLADO</strong>','<strong>:: DUBLADO ::</strong>')
		#arquivo = open(cachefolder + "TuaSerie2.txt", "w+")
		#arquivo.write(link.replace('\n','').replace('\r','').replace("</a></strong></p><p><","<strong>:: SELECIONE A OPÇÃO ::</strong>").replace('blank">K-Lite-Codec-Pack</a></strong></p><h2 style="text-align: center;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace("</a></p><h2","").replace('/> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('</strong></a></strong></p> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('" width="300" height="125" /></p><p>','<p style="text-align: center;"><strong>Completo').replace('DVDRip (<strong style="font-style: italic;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('</strong>)</h4><p>','<p style="text-align: center;"><strong>Completo').replace("<strong>BAIXAR FILME</strong>",'<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('LEGENDA</a></p></div><div style="text-align: center;">','<p style="text-align: center;"><strong>Completo').replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]").replace("</strong></p><p>720p</p></div>","<strong>:: 720 ::</a></div>").replace("</a></strong></p></div>","<strong>:: Dublado ::</a></div>"))
		#arquivo.close()
		match = re.compile('<strong>::.(.+?)::(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace("</a></strong></p><p><","<strong>:: SELECIONE A OPÇÃO ::</strong>").replace('blank">K-Lite-Codec-Pack</a></strong></p><h2 style="text-align: center;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace("</a></p><h2","").replace('/> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('</strong></a></strong></p> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('" width="300" height="125" /></p><p>','<p style="text-align: center;"><strong>1080p').replace('DVDRip (<strong style="font-style: italic;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('</strong>)</h4><p>','<p style="text-align: center;"><strong>1080p').replace("<strong>BAIXAR FILME</strong>",'<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('LEGENDA</a></p></div><div style="text-align: center;">','<p style="text-align: center;"><strong>1080p').replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]").replace("</strong></p><p>720p</p></div>","<strong>:: SELECIONE A OPÇÃO ::</a></div>").replace("</a></strong></p></div>","<strong>:: Dublado ::</a></div>").replace("</a></strong></p><h2>","<strong>:: Dublado ::</a></div>").replace('/></strong></a></p><hr /><p style="text-align: center;">','><h2').replace('<strong>::','><h2<strong>::'))
		matchoff = match[0]
		sinopse = re.compile('<.span><.strong>:(.+?)<.p>').findall(html.unescape(link))
		for title2, link in match:
			title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio").replace("LEGENDADO","[COLOR red][B]Legendado").replace("NACIONAL","[COLOR springgreen][B]Nacional").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio").replace("DUBLADO","[COLOR springgreen][B]Dublado").replace("EGENDADO","[COLOR red][B]Legendado").replace("UBLADO","[COLOR springgreen][B]Dublado").replace("</strong><strong>","").replace("[COLOR springgreen][B]Dublado[/B][/COLOR] OFICIAL","[COLOR springgreen][B]Dublado").replace("Dublado","[COLOR springgreen][B]Dublado").replace("SELECIONE A OPÇÃO","[COLOR springgreen][B]SELECIONE A OPÇÃO").replace("[/B][/COLOR][/B][/COLOR] ","[/B][/COLOR]").replace('OFICIAL','R5')
			if 'ASSISTIR ONLINE' in title2: False
			else:
            	#arquivo = open(cachefolder + "TuaSerie2.txt", "w+")
				#arquivo.write(title2)#.replace('\n','').replace('\r','').replace("</a></strong></p><p><","<strong>:: SELECIONE A OPÇÃO ::</strong>").replace('blank">K-Lite-Codec-Pack</a></strong></p><h2 style="text-align: center;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace("</a></p><h2","").replace('/> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('</strong></a></strong></p> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('" width="300" height="125" /></p><p>','<p style="text-align: center;"><strong>Completo').replace('DVDRip (<strong style="font-style: italic;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('</strong>)</h4><p>','<p style="text-align: center;"><strong>Completo').replace("<strong>BAIXAR FILME</strong>",'<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('LEGENDA</a></p></div><div style="text-align: center;">','<p style="text-align: center;"><strong>Completo').replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]").replace("</strong></p><p>720p</p></div>","<strong>:: 720 ::</a></div>").replace("</a></strong></p></div>","<strong>:: Dublado ::</a></div>"))
				#arquivo.close()
				if sinopse:
					for info1 in sinopse:
						AddDir(html.unescape(title2+"[/B][/COLOR]"), link, 521, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
				else:
					AddDir(html.unescape(title2+"[/B][/COLOR]"), link, 521, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
	except:
		match = re.compile('<p style="text-align:.center;"><strong>(.+?)<.+?href="(mag.+?)"').findall(link.replace('\n','').replace('\r','').replace("</a></strong></p><p><","<strong>:: SELECIONE A OPÇÃO ::</strong>").replace('blank">K-Lite-Codec-Pack</a></strong></p><h2 style="text-align: center;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace("</a></p><h2","").replace('/> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('</strong></a></strong></p> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('" width="300" height="125" /></p><p>','<p style="text-align: center;"><strong>1080p').replace('DVDRip (<strong style="font-style: italic;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('</strong>)</h4><p>','<p style="text-align: center;"><strong>1080p').replace("<strong>BAIXAR FILME</strong>",'<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('LEGENDA</a></p></div><div style="text-align: center;">','<p style="text-align: center;"><strong>1080p').replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]").replace("</strong></p><p>720p</p></div>","<strong>:: SELECIONE A OPÇÃO ::</a></div>").replace("</a></strong></p></div>","<strong>:: Dublado ::</a></div>").replace("</a></strong></p><h2>","<strong>:: Dublado ::</a></div>").replace('<strong>Caso haja algum problema de reprodução: <a',''))
		sinopse = re.compile('<.span><.strong>:(.+?)<.p>').findall(html.unescape(link))
		for title2, link in match:
			link = '<p style="text-align:.center;"><strong>'+title2+'<..href="'+link+'"'
			title2 = title2.replace('Baixar ','')
			#arquivo = open(cachefolder + "TuaSerie2.txt", "w+")
			#arquivo.write(title2)#.replace('\n','').replace('\r','').replace("</a></strong></p><p><","<strong>:: SELECIONE A OPÇÃO ::</strong>").replace('blank">K-Lite-Codec-Pack</a></strong></p><h2 style="text-align: center;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace("</a></p><h2","").replace('/> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('</strong></a></strong></p> style="text-align: center;">','<p style="text-align: center;"><strong>').replace('" width="300" height="125" /></p><p>','<p style="text-align: center;"><strong>Completo').replace('DVDRip (<strong style="font-style: italic;">','<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('</strong>)</h4><p>','<p style="text-align: center;"><strong>Completo').replace("<strong>BAIXAR FILME</strong>",'<strong>:: SELECIONE A OPÇÃO ::</strong></a></strong></p> style="text-align: center;">').replace('LEGENDA</a></p></div><div style="text-align: center;">','<p style="text-align: center;"><strong>Completo').replace("MULTI ÁUDIO","[COLOR springgreen][B]Multi Áudio[/B][/COLOR]").replace("</strong></p><p>720p</p></div>","<strong>:: 720 ::</a></div>").replace("</a></strong></p></div>","<strong>:: Dublado ::</a></div>"))
			#arquivo.close()
			if sinopse:
				for info1 in sinopse:
					AddDir(html.unescape("[B]"+title2+"[/B]"), link, 521, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
			else:
				AddDir(html.unescape("[B]"+title2+"[/B]"), link, 521, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
        
def Comandotoplayer(): #519
	listar=[]
	listal=[]
	match = re.compile('<p style="text-align:.center;"><strong>(.+?)<.+?href="(mag.+?)"').findall(url.replace("</strong>a href",'<p style="text-align:.center;"><strong>1080p< a href').replace('</a></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>720p').replace("<div><p>",'<p style="text-align:.center;"><strong>1080p').replace('</h2></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>1080p'))
	#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
	#arquivo.write(url.replace("</strong>a href",'<p style="text-align:.center;"><strong>Completo< a href').replace('</a></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>720').replace('</h2></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>1080'))
	#arquivo.close()
	if match:
		for name2, url2 in match:
			if "legendas" in url2 or "daichoho.com" in url2: False
			else:
				listal.append(url2)
				listar.append(name2.replace("|","").replace("720p1080p","1080p"))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
			try:
				popup = re.compile("(\w.+?)([(])").findall(background.replace(',',''))
				popup = popup[0][0]
				xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(popup, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
			except:
				pass
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			if 'Legendado' in legdub:
				try:
					xbmc.sleep(3000)
					cutzim = re.compile('btih:(.+?)&|btih:(.+)').findall(str(decode).lower())
					for cutzm in cutzim:
						cache = xbmcvfs.translatePath("special://temp")
						file = open(cache +'elementum/'+''.join(cutzm).replace("'",'')+'.torrent', 'r', errors="ignore")
						leg4 = re.compile('name.+?:(.+? )[0-9][0-9][0-9][0-9]').findall(file.readline().replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
				except:
					try:
						leg4 = re.compile('dn=(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
					except:
						try:
							while True:
								decode = requests.get('http://127.0.0.1:65220/torrents/').text
								leg4 = re.compile('"title":"(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
								time.sleep(2)
								if leg4:
									break
						except:
							try:
								re22 = re.compile("(\w.+?)([(])").findall(background)
								recom2 = re22[0][0]
								leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
								leg1x1 = recom2[:-1].split(' ')
								notific1 = (['\w' + name[1:] + '' for name in leg1x1])
								cut = ' '.join(notific1)
								try:
									leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
									legx = leg2[0]
								except:
									urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
									leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
								leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
								leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
							except:
								pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.+?.-.\(' + backcut[0]).findall(url5.replace(':','').replace("'",''))
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.+?.-.\(' + backcut[0][:-1]).findall(url5.replace(':','').replace("'",''))
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.+?.-.\(' + backcut[0][:-2]).findall(url5.replace(':','').replace("'",''))
				except:
					pass
			else:
				try:
					re22 = re.compile("(\w.+?)([(])").findall(background)
					recom2 = re22[0][0]
					leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
					leg1x1 = recom2[:-1].split(' ')
					notific1 = (['\w' + name[1:] + '' for name in leg1x1])
					cut = ' '.join(notific1)
					try:
						leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
						legx = leg2[0]
					except:
						urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
						leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
					leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
				except:
					pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.+?.-.\(' + backcut[0]).findall(url5)
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.+?.-.\(' + backcut[0][:-1]).findall(url5)
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.+?.-.\(' + backcut[0][:-2]).findall(url5)
				except:
					pass
			try:
				dev1 = re.compile('href="(.title.+?)"').findall(dev1x[0])
				arquivo = open(cachefolder + "movies.txt", "w+")
				arquivo.write(dev1[0])
				arquivo.close()
				url2 = requests.get('https://www.elsubtitle.com'+dev1[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					devx = re.compile('Brazil.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
					off = devx[0]
					url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-br', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					url4 = re.compile('subtitles-download-p2.+?>\s.+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)"').findall(url3)
					for rawurlencode, sublanguage, downloadtext, worktitle, workyear, workid in url4:
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download-p2/',data={'rawurlencode': rawurlencode, 'sublanguage': sublanguage, 'downloadtext': downloadtext,'worktitle': worktitle,'workyear': workyear, 'workid': workid},headers={'Referer': 'https://www.elsubtitle.com/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				except:
					try:
						devx = re.compile('Portugal.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						off = devx[0]
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						url4 = re.compile('subtitles-download-p2.+?>\s.+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)"').findall(url3)
						for rawurlencode, sublanguage, downloadtext, worktitle, workyear, workid in url4:
							url3 = requests.post('https://www.elsubtitle.com/subtitles-download-p2/',data={'rawurlencode': rawurlencode, 'sublanguage': sublanguage, 'downloadtext': downloadtext,'worktitle': worktitle,'workyear': workyear, 'workid': workid},headers={'Referer': 'https://www.elsubtitle.com/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					except:
						devx = re.compile('Portugue.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
						url4 = re.compile('subtitles-download-p2.+?>\s.+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)".+?value="(.+?)"').findall(url3)
						for rawurlencode, sublanguage, downloadtext, worktitle, workyear, workid in url4:
							url3 = requests.post('https://www.elsubtitle.com/subtitles-download-p2/',data={'rawurlencode': rawurlencode, 'sublanguage': sublanguage, 'downloadtext': downloadtext,'worktitle': worktitle,'workyear': workyear, 'workid': workid},headers={'Referer': 'https://www.elsubtitle.com/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
				teste3 = 'https://www.elsubtitle.com' + dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				with open(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					#if 'Legendei' in nome or 'Legendas-Dev' in nome or 'OpenSubtitles' in nome: False
					#else:
					if ".srt" in nome:
						novo_nome = "Elsubtitle (Brasil)-pt.forced" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt"
						renam = renam[0]
			except:
				pass
			try:
				#arquivo = open(cachefolder + "LegendaT.txt", "w+")
				#arquivo.write(leg4[0])
				#arquivo.close()
				url5 = requests.get("https://legendei.top/?s="+leg4[0].replace(':','').replace('(',''),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
				leg1x1 = leg4[0][:-2].replace(':', '').replace('(','').split(' ')
				notific1 = (['\w' + name[1:] + '' for name in leg1x1])
				cut1 = ' '.join(notific1)
				teste = re.compile('thumbnail">\s\s.+?href="(.+?)".+?title.+?'+cut1+'\s[(]').findall(url5.replace(':',''))
				teste = teste[0]
				teste2 = requests.get(teste.replace('https//','https://'),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
				teste3 = teste3[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			'''try:
				url5 = requests.get('https://subtitles123.com/category/brazillian-portuguese/?s='+leg4[0].replace(':','')).text
				dev1 = re.compile('"headline"><a href="(.+?)".+?bookmark">'+leg4[0][:-1].replace(': ','.').replace(' ','.')+'.[0-9]').findall(url5)
				url2 = requests.get(dev1[0]).text
				dev2 = re.compile('<a href="(.+?)"><button').findall(url2)
				teste3 = dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				try:
					file = zipfile.ZipFile(io.BytesIO(response.content))
        
					file.extractall(path)
				except:
					pass
					with open(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendas-Dev (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendas-Dev (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass'''
			try:
				link = requests.get("https://www.opensubtitles.org/pb/search2/sublanguageid-pob/moviename-"+leg4[0].replace(' ','+').replace(':',''),headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				link2 = re.compile('href=".pb.search.sublanguageid-pob.(idmovie-\w+)">'+leg4[0][:-1].replace(':','')+'[(]').findall(link.text.replace('\n','').replace('\r','').replace(':','').encode('ascii', 'ignore').decode())
				try:
					link3 = "https://www.opensubtitles.org/pb/search/"+link2[0]+"/sublanguageid-pob"
					link4 = requests.get(link3)
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link4.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link4.text)
				except:
					link5 = re.compile('servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link5[0]
				except:
					pass
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link6[0]
				except:
					pass

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/OpenSubtitles (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "OpenSubtitles (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				link = requests.get("https://www.baixarlegenda.net/?s="+popup[:-1].replace(' ','+'), headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n', '').replace('\r', '')
				match = re.compile('title">'+popup[:-1]+'<.+?<.span> <.div> <a href="(.+?)"').findall(link)
				link2 = requests.get(match[0], headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				match2 = re.compile('href="(.+?)" class="btn sm rnd blk">Download').findall(link2.replace('#038;',''))
				download = match2[0]
				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Baixarlegenda (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.baixarlegenda.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome or 'OpenSubtitles' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Baixarlegenda (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Baixarlegenda (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(popup,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(popup, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass

            
########################
########COMANDO.TO SERIE
###############################
def Comandotoserie(): #522
	pagina = "0" if not cPageserCMT else cPageserCMT
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserCMT", info='\xa0')
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			urs = "https://comando.la/category/series/page/"+str(y)+"/"
			link = requests.get(urs.replace('page/1/',''),headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			#link2 = re.compile("Categoria:(.+?)Clientes").findall(link.replace('\n','').replace('\r',''))#.replace("Baixar Série:</b> ","").replace("«</b></span><br /><b>",">").replace("«</b><b> </b></span><br /><b>Título Traduzido</b>: ",">").replace("«</strong></span><br /><b>",">").replace("«</b><b> </b></span><br /><strong>Título Traduzido</strong>: ",">").replace('Título Traduzido:</b> ',"").replace(">>",">").replace('<a href="https://comando.la/category/',"").replace("Titulo original:</b> ","").replace("Titulo Traduzido:</b> ","").replace("Titulo original :</b> ","").replace("Baixar Filme:</b> ",""))
			link2 = re.compile("Categoria:(.+)").findall(link.replace('\n','').replace('\r',''))
			match = re.compile('"headline" ><a href="(.+?)">(.+?)<.+?" src="(.+?)"').findall(link2[0])
			for link, name2, image2 in match:
				AddDir(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…'), link, 523, image2, image2, isFolder=True, info='\xa0')
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserCMT", info='\xa0')

def Comandotoserie2(): #523
	link = requests.get(url,headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('DUAL ÁUDIO','<strong>:: DUAL ÁUDIO ::</strong>').replace('<strong>DUBLADO OFICIAL</strong>','<strong>:: DUBLADO OFICIAL ::</strong>').replace('DUBLADO NÃO OFICIAL','<strong>:: DUBLADO NÃO OFICIAL ::</strong>').replace('LEGENDADO','<strong>:: LEGENDADO ::</strong>').replace('<strong>DUBLADO</strong>','<strong>:: DUBLADO ::</strong>').replace('<strong> DUBLADO </strong>','<strong>:: DUBLADO ::</strong>')
	#arquivo = open(cachefolder + "Comandoto.txt", "w+")
	#arquivo.write(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2").replace('><h3>','><h2>').replace('﻿',''))
	#arquivo.close()
	try:
		#link = requests.get(url,headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2").replace('><h3>','><h2>').replace('<hr','<h2>').replace('﻿',''))
		#arquivo.close()
		try:
			match = re.compile('>::.(.+?)::(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2").replace('><h3>','><h2>').replace('<hr','<h2>').replace('﻿',''))
			teste = match[0]
		except:
			match = re.compile('<strong>(DUAL.+?|LEGENDADO.+?|DUBLADO.+?)<(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2").replace('><h3>','><h2>').replace('<hr','<h2>').replace('﻿',''))
			teste = match[0]
		if match:
			for title2, link in match:
				title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace('</strong>','')
				AddDir(title2, link, 524, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
	except:
		pass
		try:
			#link = requests.get(url,headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			#arquivo = open(cachefolder + "Comandoto.txt", "w+")
			#arquivo.write(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2"))
			#arquivo.close()
			match = re.compile('<h2 style="text-align: center;">(.+?)<.h2>(.+?)><h2|>(K.+?)<(.+?magnet.+?)<h2').findall(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2").replace('><h3>','><h2>').replace('﻿',''))
			teste = match[0]
			if match:
				for title2, link in match:
					title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace('</strong>','')
					AddDir(title2, link, 524, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
		except:
			pass
			try:
				#link = requests.get(url,headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				#arquivo = open(cachefolder + "Comandoto.txt", "w+")
				#arquivo.write(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2"))
				#arquivo.close()
				match = re.compile('Versão(.+?)<.h2>(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2").replace('><h3>','><h2>').replace('﻿',''))
				teste = match[0]
				if match:
					for title2, link in match:
						title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace('</strong>','')
						AddDir(title2, link, 524, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
			except:
				pass
				#link = requests.get(url,headers={'Referer':'https://comando.la/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				#arquivo = open(cachefolder + "Comandoto.txt", "w+")
				#arquivo.write(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2"))
				#arquivo.close()
				match = re.compile('>(K.+?)<(.+?)<h2').findall(link.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2").replace('﻿',''))
				if match:
					for title2, link in match:
						title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace('</strong>','')
						AddDir("[COLOR springgreen][B]Dual Áudio[/B][/COLOR]", link, 524, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')

def Comandotoserie3(): #524
	#arquivo = open(cachefolder + "Comandoto.txt", "w+")
	#arquivo.write(url.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))#.replace('\n','').replace('\r','').replace('sans-serif; font-size: 22px;"',"><h2"))
	#arquivo.close()
	try:
		match = re.compile('(Tem.+?|E.+?)<a(.+?magn.+?)<.a><.p>').findall(url.replace('</a></p','</a></p>').replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p").replace('</a></div><div>','</a></p>'))
		teste = match[0]
		try:
			url3 = ([name1 for name1, link in match])
			if re.search(r'(EB-DL)|(Completo)|(Temporada)', str(url3)):
				teste = ''
			else:
				teste = false
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 542, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for name2, url2 in match:
			name2 = re.sub('.+?Epi', 'Epi', name2)
			if "&#8230;" in name2 or 'problemas' in name2 or 'EGENDAS' in name2  or "Respostas" in name2 or 'ES</a>' in name2: False
			else:
				AddDir(name2.replace('EB-DL','WEB-DL').replace('</a></p>',' ').replace("<b>","").replace(":","").replace("|","").replace("<strong>","").replace("</strong>","").replace('<ter;">'," ").replace('</b>',"").replace('<br />',"").replace('</div><div style="text-align center;"><p style="text-align center;">'," ").replace("1080p</a></p>","").replace('<p style="text-align center;">',"").replace('EMPORADA','TEMPORADA').replace('ET LINK" width="300" height="100"','').replace('>','').replace(' / ',''), url2, 525, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
	except:
		#pass
		try:
			match = re.compile('<p>.+?(E.+?)<a(.+?magn.+?)<.p>').findall(url)#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
			teste = match[0]
			for name2, url2 in match:
				name2 = re.sub('.+?Epi', 'Epi', name2)
				if "&#8230;" in name2 or 'problemas' in name2 or 'ENT END' in name2 or 'EGENDAS' in name2  or "Respostas" in name2: False
				else:
					AddDir(name2.replace('EB-DL','WEB-DL').replace("<b>","").replace('</a></p>',' ').replace('Baixar ','').replace(":","").replace("|","").replace("<strong>","").replace("</strong>","").replace('<ter;">'," ").replace('</b>',"").replace('<br />',"").replace('</div><div style="text-align center;"><p style="text-align center;">'," ").replace("1080p</a></p>","").replace('<p style="text-align center;">',""), url2, 525, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
		except:
			#pass
			try:
				match = re.compile('(href.+?)lazy".+?alt="(.+?)"').findall(url.replace('" target="_blank"','">Completo').replace('alt="" width="','alt="Completo"').replace('<img ','Completo"'))#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
				for url2,name2 in match:
					name2 = re.sub('.+?Epi', 'Epi', name2)
					if "&#8230;" in name2 or 'problemas' in name2 or 'EGENDAS' in name2 or "Respostas" in name2: False
					else:
						AddDir(name2.replace('EB-DL','WEB-DL').replace("<b>","").replace('</a></p>',' ').replace('Torrent Download','').replace(":","").replace("|","").replace("<strong>","").replace("</strong>","").replace('<ter;">'," ").replace('</b>',"").replace('<br />',"").replace('</div><div style="text-align center;"><p style="text-align center;">'," ").replace("1080p</a></p>","").replace('<p style="text-align center;">',""), url2, 525, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
			except:
				#pass
				try:
					match = re.compile('ter;">(.+?)<a(.+?magn.+?)<.a><.p>').findall(url.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
					teste = match[0]
					for name2, url2 in match:
						name2 = re.sub('.+?Epi', 'Epi', name2)
						if "&#8230;" in name2 or 'problemas' in name2 or 'EGENDAS' in name2 or "Respostas" in name2: False
						else:
							AddDir(name2.replace('EB-DL','WEB-DL').replace('</a></p>',' ').replace("<b>","").replace(":","").replace("|","").replace("<strong>","").replace("</strong>","").replace('<ter;">'," ").replace('</b>',"").replace('<br />',"").replace('</div><div style="text-align center;"><p style="text-align center;">'," ").replace("1080p</a></p>","").replace('<p style="text-align center;">',""), url2, 525, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
				except:
					pass
        

def Comandotoserieplay(): #525
	#arquivo = open(cachefolder + "Comandoto.txt", "w+")
	#arquivo.write(url.replace("<strong>","720p").replace('fannounce"><img loading="lazy"','fannounce">Completo"').replace('" rel="noopener',''))
	#arquivo.close()
	listar=[]
	listal=[]
	match = re.compile('href="(.+?)">(\w+)').findall(url.replace("<strong>","720p").replace('fannounce"><img loading="lazy"','fannounce">Completo"').replace('" rel="noopener','').replace('" rel="nofollow" target="_blank">','">Completo').replace('[',''))
	if match:
		for url2, name2 in match:
			if "Legenda" in name2: False
			else:
				listal.append(url2)
				listar.append(name2.replace('<img class="aligncenter jetp',"720p"))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:

				try:
					re22 = re.compile("(\w.+?) [(]").findall(background)
					recom2 = urllib.parse.unquote(re22[0].replace('.',' '))
					recom2 = re.sub('.+-.', '', recom2)
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(url2x)
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
						#arquivo = open(cachefolder + "ComandotoT.txt", "w+")
						#arquivo.write(recom2)
						#arquivo.close()
				except:
					pass
				#arquivo = open(cachefolder + "Comandotolis.txt", "w+")
				#arquivo.write(recom2)
				#arquivo.close()
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				cuts = re.compile('(.+) S[0-9][0-9]').findall(recom2)[0]
				cutsnum = re.compile('S[0-9]([0-9])').findall(recom2)[0]
				seasonnum = cuts+' '+cutsnum+'ª'
				try:
					url5 = requests.get("https://legendei.top/?s=" + recom2, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="'+cuts).findall(url5.replace('Permanent Link to ',''))
					teste = teste[0]
				except:
					url5 = requests.get("https://legendei.top/?s=" + seasonnum, headers={'Referer': 'https://legendei.top/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste = re.compile('thumbnail.+\s.+?href="(.+?)".+?title="' + cuts).findall(url5.replace('Permanent Link to ', ''))
					teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						new1 = re.compile('E([0-9][0-9])').findall(recom2)[0]
						if 'E'+new1 in nome or 'e'+new1 in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass

# ----------------- FIM Filmes Online
# ----------------- Inicio MM filmes

# ------------------------------ DOS TORRENTS
def DosTorrents(): #526
	AddDir("[COLOR yellow][B][Gênero dos Filmes]:[/B] " + Clista1[int(Cat)] +"[/COLOR]", "url" ,80 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPage) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPage) ) +"][/B][/COLOR]", cPage , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPage", info='\xa0')
		l= int(cPage)*6
		for x in range(0, 6):
			l +=1
			link = requests.get("https://comoeubaixo.com/filmes/"+Clista0[int(Cat)]+"/"+str(l)+"/", headers={'Referer':'https://comoeubaixo.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile("middle'>	<a href='(.+?)'.+?src='(.+?)'.+?title.+?title.+?'>(.+?)<.+?strong>(.+?)<.+?Servidores<\/strong>:.(.+?)<").findall(html.unescape(link))
			for link,image2,name2, nome3, tipo in match:
				if not 'Torrent' in tipo: False
				else:
					AddDir(name2.replace(" Torrent","").replace(" –","").replace("Download","").replace(' - Legendado','').replace(' - Dublado','').replace(' - CAM','').replace(' - R5','')+''+nome3, link, 527, image2, image2, isFolder=True, info='\xa0')
				p += 1
		if p >= 120:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPage) + 2) +"][/B][/COLOR]", cPage , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPage", info='\xa0')
	except:
		pass
        
def DosTorrents2(): #527
	try:
		you = re.compile("(\w.+?)[)]").findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		trailer = requests.get("https://www.youtube.com/results?search_query="+ you[0].replace(" ","+").replace("(","")+"+Trailer"+"")
		namey = re.compile('\w').findall(you[0])
		trailer2 = re.compile('"label":"'+namey[0]+'.+?"label":"([0-5].minuto|[0-9][0-9].segundo).+?addedVideoId":"(.+?)"').findall(trailer.text.replace('Filme ','').replace('FILME ','').replace('TRAILER ','').replace('Trailer','').replace('“',''))
		AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0][1], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+you[0].replace("(",""))
	except:
		pass
	try:
		link = requests.get(url, headers={'Referer':'https://comoeubaixo.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
		#arquivo.write(link.replace('\n','').replace('\r',''))
		#arquivo.close()
		try:
			dub = re.compile("rel='nofollow' title=.+?(DUBLAGEM NÃO OFICIAL)").findall(link)
		except:
			pass
		match = re.compile("strong id=.+?title='(.+?)'(.+?)<.a><br><").findall(link.replace('</a><br>				','</a><br><'))
		offz = match[0]
		sinopse = re.compile('Sinopse<.strong>:(.+?)<.p>').findall(html.unescape(link))
		for title2, link in match:
			#title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)").replace('Dual Áudio','[COLOR springgreen][B]Dual Áudio').replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio").replace("Legendado","[COLOR red][B]Legendado").replace("NACIONAL","[COLOR springgreen][B]Nacional").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio").replace("DUBLADO","[COLOR springgreen][B]Dublado").replace("EGENDADO","[COLOR red][B]Legendado").replace("UBLADO","[COLOR springgreen][B]Dublado").replace("</strong><strong>","").replace("[COLOR springgreen][B]Dublado[/B][/COLOR] OFICIAL","[COLOR springgreen][B]Dublado").replace("Dublado","[COLOR springgreen][B]Dublado").replace("SELECIONE A OPÇÃO","[COLOR springgreen][B]SELECIONE A OPÇÃO").replace("[/B][/COLOR][/B][/COLOR] ","[/B][/COLOR]").replace('OFICIAL','R5').replace("UAL AUDIO","[COLOR springgreen][B]Dual Audio").replace("TRIAL ÁUDIO","[COLOR springgreen][B]Dual Audio")
			title2 = title2+str(dub)
			title2 = title2.replace("Dublado['DUBLAGEM NÃO OFICIAL']",'DUBLADO NÃO OFICIAL').replace("Legendado['DUBLAGEM NÃO OFICIAL']",'Legenda Fixa').replace("Legenda Fixa","[COLOR red][B]Legenda Fixa").replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)").replace('Dual Áudio','[COLOR springgreen][B]Dual Áudio').replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio").replace("Legendado","[COLOR red][B]Legendado").replace("NACIONAL","[COLOR springgreen][B]Nacional").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio").replace("DUBLADO","[COLOR springgreen][B]Dublado").replace("EGENDADO","[COLOR red][B]Legendado").replace("UBLADO","[COLOR springgreen][B]Dublado").replace("</strong><strong>","").replace("[COLOR springgreen][B]Dublado[/B][/COLOR] OFICIAL","[COLOR springgreen][B]Dublado").replace("Dublado","[COLOR springgreen][B]Dublado").replace("SELECIONE A OPÇÃO","[COLOR springgreen][B]SELECIONE A OPÇÃO").replace("[/B][/COLOR][/B][/COLOR] ","[/B][/COLOR]").replace('OFICIAL','R5').replace("UAL AUDIO","[COLOR springgreen][B]Dual Audio").replace("TRIAL ÁUDIO","[COLOR springgreen][B]Dual Audio")
			if sinopse:
				for info1 in sinopse:
					AddDir(html.unescape(title2.replace('/strong><strong>','').replace('[]','')+"[/B][/COLOR]"), link, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
			else:
				AddDir(html.unescape(title2.replace('/strong><strong>','').replace('[]','')+"[/B][/COLOR]"), link, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
	except:
		pass
		match = re.compile('(href="magnet:.+?")').findall(link.replace('\n', '').replace('\r', ''))
		match1 = re.compile('dn=(.+?)&').findall(urllib.parse.unquote(str(match)))
		filtrar = re.compile('^\w+').findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		t = 0
		for name1 in match:
			end = re.sub('[)].+| WWW.+', ')', match1[t].replace('.',' ')).replace('])',']').replace('+',' ')
			linkL = '<p style="text-align: center"><strong>'+end+'<-'+name1
			t += 1
			try:
				filtro = re.compile('(href=".+?<strong.+?)('+filtrar[0]+'.+)').findall(str(linkL))
				matchoffx = filtro[0]
				for magnet,nome in filtro:
					AddDir("[B]"+nome.replace('<','')+"[/B]", magnet+nome, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)
			except:
				AddDir("[B]"+end+"[/B]", linkL, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''), legdub=title2)

def DosTorrentsPlay(): #528
	listar=[]
	listal=[]
	match = re.compile("<br>(.+?)<a.href='(.+?)'").findall(url.replace('DOWNLOAD TORRENT DUBLADO ','').replace('DOWNLOAD TORRENT LEGENDADO ',''))#.replace('</a></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>720p').replace("<div><p>",'<p style="text-align:.center;"><strong>1080p').replace('</h2></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>1080p'))
	#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
	#arquivo.write(url)
	#arquivo.close()
	if match:
		for name2, url2 in match:
			if not "magnet" in url2: False
			else:
				listal.append(url2)
				listar.append(name2.swapcase().title().replace(' Mkv','').replace('Cam','CAM').replace('720P','720p').replace('1080P','1080p').replace('2160P','2160p'))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
			try:
				popup = re.compile("(\w.+?)([(])").findall(background.replace(',',''))
				popup = popup[0][0]
				xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(popup, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
			except:
				pass
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			if 'Legendado' in legdub:
				try:
					xbmc.sleep(3000)
					cutzim = re.compile('btih:(.+?)&|btih:(.+)').findall(str(decode).lower())
					for cutzm in cutzim:
						cache = xbmcvfs.translatePath("special://temp")
						file = open(cache +'elementum/'+''.join(cutzm).replace("'",'')+'.torrent', 'r', errors="ignore")
						leg4 = re.compile('name.+?:(.+? )[0-9][0-9][0-9][0-9]').findall(file.readline().replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
				except:
					try:
						leg4 = re.compile('dn=(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
						legoff = leg4[0]
						#arquivo = open(cachefolder + "movies.txt", "w+")
						#arquivo.write(leg4[0])
						#arquivo.close()
					except:
						try:
							while True:
								decode = requests.get('http://127.0.0.1:65220/torrents/').text
								leg4 = re.compile('"title":"(.+?)[0-9][0-9][0-9][0-9]').findall(str(decode).replace('.',' '))
								time.sleep(2)
								if leg4:
									break
						except:
							try:
								re22 = re.compile("(\w.+?)([(])").findall(background)
								recom2 = re22[0][0]
								leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
								leg1x1 = recom2[:-1].split(' ')
								notific1 = (['\w' + name[1:] + '' for name in leg1x1])
								cut = ' '.join(notific1)
								try:
									leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
									legx = leg2[0]
								except:
									urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
									leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
								leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
								leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
							except:
								pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0]).findall(url5.replace(':','').replace("'",''))
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5.replace(':','').replace("'",''))
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5.replace(':','').replace("'",''))
				except:
					pass
			else:
				try:
					re22 = re.compile("(\w.+?)([(])").findall(background)
					recom2 = re22[0][0]
					leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
					leg1x1 = recom2[:-1].split(' ')
					notific1 = (['\w' + name[1:] + '' for name in leg1x1])
					cut = ' '.join(notific1)
					try:
						leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
						legx = leg2[0]
					except:
						urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
						leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
					leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
				except:
					pass
				try:
					backcut = re.compile('\((\w+)\)').findall(background)
					leg4x = leg4[0][:-1].split(' ')
					notific = (['\w'+name[1:]+'' for name in leg4x])
					leg4xx = ' '.join(notific)
					url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0]).findall(url5)
						off1 = dev1x[0]
					except:
						try:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5)
							off1 = dev1x[0]
						except:
							dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5)
				except:
					pass
			try:
				dev1 = re.compile('href="(.title.+?)"').findall(dev1x[0])
				url2 = requests.get('https://www.elsubtitle.com'+dev1[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					devx = re.compile('Brazil.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
					off = devx[0]
					url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-br', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				except:
					try:
						devx = re.compile('Portugal.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						off = devx[0]
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					except:
						devx = re.compile('Portugue.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
				teste3 = 'https://www.elsubtitle.com' + dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				with open(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					#if 'Legendei' in nome or 'Legendas-Dev' in nome or 'OpenSubtitles' in nome: False
					#else:
					if ".srt" in nome:
						novo_nome = "Elsubtitle (Brasil)-pt.forced" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt"
						renam = renam[0]
			except:
				pass
			try:
				#arquivo = open(cachefolder + "LegendaT.txt", "w+")
				#arquivo.write(leg4[0])
				#arquivo.close()
				url5 = requests.get("https://legendei.top/?s="+leg4[0].replace(':',''),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
				teste = re.compile('thumbnail">\s\s.+?href="(.+?)".+?title.+?'+leg4[0][:-1].replace(':','')+'\s[(]').findall(url5.replace(':',''))
				teste = teste[0]
				teste2 = requests.get(teste.replace('https//','https://'),headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
				teste3 = teste3[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			'''try:
				url5 = requests.get('https://subtitles123.com/category/brazillian-portuguese/?s='+leg4[0].replace(':','')).text
				dev1 = re.compile('"headline"><a href="(.+?)".+?bookmark">'+leg4[0][:-1].replace(': ','.').replace(' ','.')+'.[0-9]').findall(url5)
				url2 = requests.get(dev1[0]).text
				dev2 = re.compile('<a href="(.+?)"><button').findall(url2)
				teste3 = dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				try:
					file = zipfile.ZipFile(io.BytesIO(response.content))
        
					file.extractall(path)
				except:
					pass
					with open(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendas-Dev (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendas-Dev (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass'''
			try:
				link = requests.get("https://www.opensubtitles.org/pb/search2/sublanguageid-pob/moviename-"+leg4[0].replace(' ','+').replace(':',''),headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				link2 = re.compile('href=".pb.search.sublanguageid-pob.(idmovie-\w+)">'+leg4[0][:-1].replace(':','')+'[(]').findall(link.text.replace('\n','').replace('\r','').replace(':','').encode('ascii', 'ignore').decode())
				try:
					link3 = "https://www.opensubtitles.org/pb/search/"+link2[0]+"/sublanguageid-pob"
					link4 = requests.get(link3)
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link4.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link4.text)
				except:
					link5 = re.compile('servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link.text.encode('ascii', 'ignore').decode())
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link5[0]
				except:
					pass
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link6[0]
				except:
					pass

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/OpenSubtitles (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "OpenSubtitles (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				link = requests.get("https://www.baixarlegenda.net/?s="+popup[:-1].replace(' ','+'), headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n', '').replace('\r', '')
				match = re.compile('title">'+popup[:-1]+'<.+?<.span> <.div> <a href="(.+?)"').findall(link)
				link2 = requests.get(match[0], headers={'Referer': 'https://www.baixarlegenda.net/','User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				match2 = re.compile('href="(.+?)" class="btn sm rnd blk">Download').findall(link2.replace('#038;',''))
				download = match2[0]
				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Baixarlegenda (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.baixarlegenda.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome or 'OpenSubtitles' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Baixarlegenda (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Baixarlegenda (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(popup,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(popup, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass
                    
#####################################################################################################

def DosTorrents1(): #5261
	AddDir("[COLOR yellow][B][Gênero dos Filmes]:[/B] " + ClistaQUE11[int(CatQ1)] +"[/COLOR]", "url" ,80 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageQlf) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageQlf) ) +"][/B][/COLOR]", cPageQlf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageQlf", info='\xa0')
		l= int(cPageQlf)*4
		for x in range(0, 4):
			l +=1
			link = requests.get("https://comandotorrent4k.net/category/"+ClistaQUE10[int(CatQ1)]+"/page/"+str(l)+"/", headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('"headline".+?<a href="(.+?)">(.+?)<.+?src="(.+?)"').findall(html.unescape(link))
			for link, name2, image2 in match:
				if "Temporada" in name2 or "Completo" in name2 or "temporada" in name2 or "completo" in name2: False
				else:
					AddDir(name2.replace(" Torrent","").replace(" –","").replace("Download",""), link, 5271, image2, image2, isFolder=True, info='\xa0')
				p += 1
		if p >= 40:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageQlf) + 2) +"][/B][/COLOR]", cPageQlf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageQlf", info='\xa0')
	except:
		pass
        
def DosTorrents21(): #5271
	try:
		you = re.compile("(\w.+?)[)]").findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		trailer = requests.get("https://www.youtube.com/results?search_query="+ you[0].replace(" ","+").replace("(","")+"+Trailer"+"")
		namey = re.compile('\w').findall(you[0])
		trailer2 = re.compile('"label":"'+namey[0]+'.+?"label":"([0-5].minuto|[0-9][0-9].segundo).+?addedVideoId":"(.+?)"').findall(trailer.text.replace('Filme ','').replace('FILME ','').replace('TRAILER ','').replace('Trailer','').replace('“',''))
		AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0][1], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+you[0].replace("(",""))
	except:
		pass
	try:
		link = requests.get(url, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
		#arquivo.write(link.replace('\n','').replace('\r',''))
		#arquivo.close()
		match = re.compile('::.(.+?)::(.+?)><h2').findall(link.replace('\n','').replace('\r',''))
		offz = match[0]
		sinopse = re.compile('<.span>:<.strong>.(.+?)<.p>').findall(html.unescape(link))
		for title2, link in match:
			title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)").replace('DUBLADO / DUAL AUDIO','[COLOR springgreen][B]Dual Áudio').replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio").replace("LEGENDADO","[COLOR red][B]Legendado").replace("NACIONAL","[COLOR springgreen][B]Nacional").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio").replace("DUBLADO","[COLOR springgreen][B]Dublado").replace("EGENDADO","[COLOR red][B]Legendado").replace("UBLADO","[COLOR springgreen][B]Dublado").replace("</strong><strong>","").replace("[COLOR springgreen][B]Dublado[/B][/COLOR] OFICIAL","[COLOR springgreen][B]Dublado").replace("Dublado","[COLOR springgreen][B]Dublado").replace("SELECIONE A OPÇÃO","[COLOR springgreen][B]SELECIONE A OPÇÃO").replace("[/B][/COLOR][/B][/COLOR] ","[/B][/COLOR]").replace('OFICIAL','R5').replace("UAL AUDIO","[COLOR springgreen][B]Dual Audio").replace("TRIAL ÁUDIO","[COLOR springgreen][B]Dual Audio")
			if sinopse:
				for info1 in sinopse:
					AddDir(html.unescape(title2.replace('/strong><strong>','')+"[/B][/COLOR]"), link, 5281, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
			else:
				AddDir(html.unescape(title2.replace('/strong><strong>','')+"[/B][/COLOR]"), link, 5281, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
	except:
		pass
		match = re.compile('(href="magnet:.+?")').findall(link.replace('\n', '').replace('\r', ''))
		match1 = re.compile('dn=(.+?)&').findall(urllib.parse.unquote(str(match)))
		filtrar = re.compile('^\w+').findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		t = 0
		for name1 in match:
			end = re.sub('[)].+| WWW.+', ')', match1[t].replace('.',' ')).replace('])',']').replace('+',' ')
			linkL = '<p style="text-align: center"><strong>'+end+'<-'+name1
			t += 1
			try:
				filtro = re.compile('(href=".+?<strong.+?)('+filtrar[0]+'.+)').findall(str(linkL))
				matchoffx = filtro[0]
				for magnet,nome in filtro:
					AddDir("[B]"+nome.replace('<','')+"[/B]", magnet+nome, 5281, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
			except:
				AddDir("[B]"+end+"[/B]", linkL, 5281, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))

def DosTorrentsPlay1(): #5281
	listar=[]
	listal=[]
	match = re.compile('<p style="text-align: center"><strong>(.+?)<.+?href="(mag.+?)"').findall(url.replace("</h2><p><strong>",'<p style="text-align: center"><strong>').replace('center;">','center">'))#.replace('</a></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>720p').replace("<div><p>",'<p style="text-align:.center;"><strong>1080p').replace('</h2></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>1080p'))
	#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
	#arquivo.write(url.replace("</h2><p><strong>",'<p style="text-align: center;"><strong>'))
	#arquivo.close()
	if match:
		for name2, url2 in match:
			if "legendas" in url2 or "daichoho.com" in url2: False
			else:
				listal.append(url2)
				listar.append(name2.replace("|","").replace("720p1080p","1080p"))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
			try:
				popup = re.compile("(\w.+?)([(])").findall(background.replace(',',''))
				popup = popup[0][0]
				xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(popup, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
			except:
				pass
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:
				re22 = re.compile("(\w.+?)([(])").findall(background)
				recom2 = re22[0][0]
				leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
				leg1x1 = recom2[:-1].split(' ')
				notific1 = (['\w' + name[1:] + '' for name in leg1x1])
				cut = ' '.join(notific1)
				try:
					leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
					legx = leg2[0]
				except:
					urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
					leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
				leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
			except:
				pass
			try:
				backcut = re.compile('\((\w+)\)').findall(background)
				leg4x = leg4[0][:-1].split(' ')
				notific = (['\w'+name[1:]+'' for name in leg4x])
				leg4xx = ' '.join(notific)
				url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0]).findall(url5)
					off1 = dev1x[0]
				except:
					try:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5)
						off1 = dev1x[0]
					except:
						dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5)
				dev1 = re.compile('href="(.title.+?)"').findall(dev1x[0])
				url2 = requests.get('https://www.elsubtitle.com'+dev1[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					devx = re.compile('Brazil.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
					off = devx[0]
					url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-br', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				except:
					try:
						devx = re.compile('Portugal.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						off = devx[0]
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					except:
						devx = re.compile('Portugue.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
				teste3 = 'https://www.elsubtitle.com' + dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				with open(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					#if 'Legendei' in nome or 'Legendas-Dev' in nome or 'OpenSubtitles' in nome: False
					#else:
					if ".srt" in nome:
						novo_nome = "Elsubtitle (Brasil)-pt.forced" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt"
						renam = renam[0]
			except:
				pass
			try:
				#arquivo = open(cachefolder + "LegendaT.txt", "w+")
				#arquivo.write(leg4[0])
				#arquivo.close()
				url5 = requests.get("https://legendei.top/?s="+leg4[0],headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
				teste = re.compile('thumbnail">\s\s.+?href="(.+?)".+?title.+?'+leg4[0][:-1]+'\s[(]').findall(url5)
				teste = teste[0]
				teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
				teste3 = teste3[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendei (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			'''try:
				url5 = requests.get('https://subtitles123.com/category/brazillian-portuguese/?s='+leg4[0].replace(':','')).text
				dev1 = re.compile('"headline"><a href="(.+?)".+?bookmark">'+leg4[0][:-1].replace(': ','.').replace(' ','.')+'.[0-9]').findall(url5)
				url2 = requests.get(dev1[0]).text
				dev2 = re.compile('<a href="(.+?)"><button').findall(url2)
				teste3 = dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				try:
					file = zipfile.ZipFile(io.BytesIO(response.content))
        
					file.extractall(path)
				except:
					pass
					with open(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendas-Dev (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendas-Dev (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass'''
			try:
				link = requests.get("https://www.opensubtitles.org/pb/search2/sublanguageid-pob/moviename-"+leg4[0].replace(' ','+'),headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				link2 = re.compile('href=".pb.search.sublanguageid-pob.(idmovie-\w+)">'+leg4[0][:-1]+'[(]').findall(link.text.replace('\n','').replace('\r',''))
				try:
					link3 = "https://www.opensubtitles.org/pb/search/"+link2[0]+"/sublanguageid-pob"
					link4 = requests.get(link3)
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link4.text)
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link4.text)
				except:
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link.text)
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link.text)
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link5[0]
				except:
					pass
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link6[0]
				except:
					pass

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/OpenSubtitles (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True,headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Elsubtitle' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "OpenSubtitles (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(popup,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(popup, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass
        
'''def DosTorrents(): #526
	AddDir("[COLOR yellow][B][Gênero dos Filmes]:[/B] " + Clista1[int(Cat)] +"[/COLOR]", "url" ,80 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPage) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPage) ) +"][/B][/COLOR]", cPage , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPage", info='\xa0')
		l= int(cPage)*4
		for x in range(0, 4):
			l +=1
			link = requests.get("https://www.thepiratefilmetorrent.me/category/"+Clista0[int(Cat)]+"/page/"+str(l)+"/",headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			match = re.compile('headline">.+?href="(.+?)".+?title="(.+?)".src="(.+?)"').findall(html.unescape(link))
			for link, name2, image2 in match:
				if "Temporada" in name2 or "Completo" in name2 or "temporada" in name2 or "completo" in name2: False
				else:
					AddDir(name2.replace(" Torrent","").replace(" –","").replace("Download",""), link, 527, image2, image2, isFolder=True, info='\xa0')
				p += 1
		if p >= 40:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPage) + 2) +"][/B][/COLOR]", cPage , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPage", info='\xa0')
	except:
		pass

def DosTorrents2(): #527
	try:
		you = re.compile("(\w.+?)[)]").findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		trailer = requests.get("https://www.youtube.com/results?search_query="+ you[0].replace(" ","+").replace("(","")+"+Trailer"+"")
		namey = re.compile('\w').findall(you[0])
		trailer2 = re.compile('"label":"'+namey[0]+'.+?"label":"([0-5].minuto|[0-9][0-9].segundo).+?addedVideoId":"(.+?)"').findall(trailer.text.replace('Filme ','').replace('FILME ','').replace('TRAILER ','').replace('Trailer','').replace('“',''))
		AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0][1], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+you[0].replace("(",""))
	except:
		pass
	try:
		link = requests.get(url,headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		match = re.compile('0000."><strong>(.+?)<.strong>(.+?)<span').findall(link.replace('\n','').replace('\r',''))
		matchoff = match[0]
		sinopse = re.compile('<.span>:<.strong>.(.+?)<.p>').findall(html.unescape(link))
		for title2, link in match:
			title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio").replace("LEGENDADOS","[COLOR red][B]Legendado").replace("LEGENDADO","[COLOR red][B]Legendado").replace("NACIONAL","[COLOR springgreen][B]Nacional").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio").replace("DUBLADO","[COLOR springgreen][B]Dublado").replace("EGENDADO","[COLOR red][B]Legendado").replace("UBLADO","[COLOR springgreen][B]Dublado").replace("</strong><strong>","").replace("[COLOR springgreen][B]Dublado[/B][/COLOR] OFICIAL","[COLOR springgreen][B]Dublado").replace("Dublado","[COLOR springgreen][B]Dublado").replace("SELECIONE A OPÇÃO","[COLOR springgreen][B]SELECIONE A OPÇÃO").replace("[/B][/COLOR][/B][/COLOR] ","[/B][/COLOR]").replace('OFICIAL','R5').replace('LINK ','').replace('LINKS ','')
			if sinopse:
				for info1 in sinopse:
					AddDir(html.unescape(title2.replace('/strong><strong>','')+"[/B][/COLOR]"), link, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info1, background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
			else:
				AddDir(html.unescape(title2.replace('/strong><strong>','')+"[/B][/COLOR]"), link, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
	except:
		pass
		match = re.compile('(href="magnet:.+?")').findall(link.replace('\n', '').replace('\r', ''))
		match1 = re.compile('dn=(.+?)&').findall(urllib.parse.unquote(str(match)))
		filtrar = re.compile('^\w+').findall(name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
		t = 0
		for name1 in match:
			end = re.sub('[)].+| WWW.+', ')', match1[t].replace('.',' ')).replace('])',']').replace('+',' ')
			linkL = name1+'teste<strong>'+end+'<'
			t += 1
			try:
				filtro = re.compile('(href=".+?<strong.+?)('+filtrar[0]+'.+)').findall(str(linkL))
				matchoffx = filtro[0]
				for magnet,nome in filtro:
					AddDir("[B]"+nome.replace('<','')+"[/B]", magnet+nome, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))
			except:
				AddDir("[B]"+end+"[/B]", linkL, 528, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0', background=name.replace('[COLOR yellow]','').replace('[COLOR mediumpurple]','').replace('[COLOR mediumvioletred]','').replace('[COLOR deepskyblue]','').replace('[COLOR lightgreen]','').replace('[COLOR salmon]','').replace('[COLOR mediumvioletred]','').replace('[/COLOR]',''))

def DosTorrentsPlay(): #528
	listar=[]
	listal=[]
	match = re.compile('href="(mag.+?)".+?<strong>(.+?)<').findall(url.replace("</h2><p><strong>",'<p style="text-align: center;"><strong>'))#.replace('</a></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>720p').replace("<div><p>",'<p style="text-align:.center;"><strong>1080p').replace('</h2></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>1080p'))
	#arquivo = open(cachefolder + "TuaSerie.txt", "w+")
	#arquivo.write(url.replace("</strong>a href",'<p style="text-align:.center;"><strong>Completo< a href').replace('</a></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>720').replace('</h2></div><div style="text-align: center;">','<p style="text-align:.center;"><strong>1080'))
	#arquivo.close()
	if match:
		for url2, name2 in match:
			if "legendas" in url2 or "daichoho.com" in url2: False
			else:
				listal.append(url2)
				listar.append(name2.replace("|","").replace("720p1080p","1080p"))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, subs=[cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt", cachefolder+"Legendas/Legendei (Brasil)-pt.srt", cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt", cachefolder+"Legendas/Baixarlegenda (Brasil)-pt.srt"])
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:
				popup = re.compile("(\w.+?)([(])").findall(background.replace(',',''))
				popup = popup[0][0]
				xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(popup, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
			except:
				pass
			try:
				re22 = re.compile("(\w.+?)([(])").findall(background)
				recom2 = re22[0][0]
				leg1 = requests.get("https://www.imdb.com/find?q="+recom2).text
				leg1x1 = recom2[:-1].split(' ')
				notific1 = (['\w' + name[1:] + '' for name in leg1x1])
				cut = ' '.join(notific1)
				try:
					leg2 = re.compile('<a href="(.{1,100})".>'+cut).findall(leg1)
					legx = leg2[0]
				except:
					urlxx = requests.get('https://www.google.com/search?q=imdb+'+recom2.replace(' ','+')).text
					leg2 = re.compile('url.q=https:..www.imdb.com(.title.\w+\/)').findall(urlxx)
				leg3 = requests.get("https://www.imdb.com"+leg2[0]+"ratings",headers={'Referer':'https://www.imdb.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				leg4 = re.compile('title. content="(.+?)[(]').findall(leg3)
				url5 = requests.get("https://legendei.top/?s="+leg4[0],headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text#.replace('\n','').replace('\r','')
				teste = re.compile('thumbnail">\s\s.+?href="(.+?)".+?title.+?'+leg4[0][:-1]+'\s[(]').findall(url5)
				teste = teste[0]
				teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
				teste3 = teste3[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						novo_nome = "Legendei (Brasil)-pt" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
						renam = renam[0]
			except:
				pass
			try:
				url5 = requests.get('https://subtitles123.com/category/brazillian-portuguese/?s='+leg4[0].replace(':','')).text
				dev1 = re.compile('"headline"><a href="(.+?)".+?bookmark">'+leg4[0][:-1].replace(': ','.').replace(' ','.')+'.[0-9]').findall(url5)
				url2 = requests.get(dev1[0]).text
				dev2 = re.compile('<a href="(.+?)"><button').findall(url2)
				teste3 = dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				try:
					file = zipfile.ZipFile(io.BytesIO(response.content))
        
					file.extractall(path)
				except:
					pass
					with open(cachefolder+'Legendas/Legendas-Dev (Brasil)-pt.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Legendas-Dev (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Legendas-Dev (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				link = requests.get("https://www.opensubtitles.org/pb/search2/sublanguageid-pob/moviename-"+leg4[0].replace(' ','+'),headers={'Referer':'https://www.opensubtitles.org/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})
				link2 = re.compile('href=".pb.search.sublanguageid-pob.(idmovie-\w+)">'+leg4[0][:-1]+'[(]').findall(link.text.replace('\n','').replace('\r',''))
				try:
					link3 = "https://www.opensubtitles.org/pb/search/"+link2[0]+"/sublanguageid-pob"
					link4 = requests.get(link3)
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link4.text)
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link4.text)
				except:
					link5 = re.compile('onclick="servOC.(.+?),.+\s.+?title=.+?title="(.+?)"').findall(link.text)
					link5 = ([name for name, teste in link5 if not 'Somente Partes' in teste])
					link6 = re.compile('bt-th" rel="(.+?)"').findall(link.text)
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link5[0]
				except:
					pass
				try:
					download = "https://dl.opensubtitles.org/pb/download/sub/"+link6[0]
				except:
					pass

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/OpenSubtitles (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(download, verify=False, stream=True)

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Legendas-Dev' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "OpenSubtitles (Brasil)-pt" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/OpenSubtitles (Brasil)-pt.srt"
							renam = renam[0]
			except:
				pass
			try:
				backcut = re.compile('\((\w+)\)').findall(background)
				leg4x = leg4[0][:-1].split(' ')
				notific = (['\w'+name[1:]+'' for name in leg4x])
				leg4xx = ' '.join(notific)
				url5 = requests.get('https://www.elsubtitle.com/search-results/?search_name='+leg4[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-1]).findall(url5)
					off1 = dev1x[0]
				except:
					dev1x = re.compile('href=".{1,400}' + leg4xx + '.-.\(' + backcut[0][:-2]).findall(url5)
				dev1 = re.compile('href="(.title.+?)"').findall(dev1x[0])
				url2 = requests.get('https://www.elsubtitle.com'+dev1[0],headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				try:
					devx = re.compile('Brazil.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
					off = devx[0]
					url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-br', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				except:
					try:
						devx = re.compile('Portugal.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						off = devx[0]
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt-pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					except:
						devx = re.compile('Portugue.+?"(ST.+?)".+?value="(.+?)"').findall(url2)
						url3 = requests.post('https://www.elsubtitle.com/subtitles-download/',data={'subtitle_language': 'pt', 'subtitle_id': devx[0][0], 'imdb_id': devx[0][1]},headers={'Referer':'https://www.elsubtitle.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
				teste3 = 'https://www.elsubtitle.com' + dev2[0]
				dev2 = re.compile('<a href="(.+?srt)"').findall(url3)
				teste3 = 'https://www.elsubtitle.com'+dev2[0]

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)
				with open(cachefolder+'Legendas/Elsubtitle (Brasil)-pt.forced.srt', 'wb')as file: file.write(response.content)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if 'Legendei' in nome or 'Legendas-Dev' in nome or 'OpenSubtitles' in nome: False
					else:
						if ".srt" in nome:
							novo_nome = "Elsubtitle (Brasil)-pt.forced" + ".srt"
							os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
							renam = cachefolder+"Legendas/Elsubtitle (Brasil)-pt.forced.srt"
							renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(popup,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(popup, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass'''
                    
 # ------------------------------- DOSTORRENTS SERIE
 
def DosTorrentsSerie(): #529
	pagina = "0" if not cPageserDTS else cPageserDTS
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserDTS", info='\xa0')
	y= int(pagina)*6
	for x in range(0, 6):
		try:
			y +=1
			link = requests.get("https://comoeubaixo.com/series/"+str(y)+"/", headers={'Referer':'https://comoeubaixo.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			#link2 = re.compile("Categoria:(.+?)Clientes").findall(link.replace('\n','').replace('\r',''))#.replace("Baixar Série:</b> ","").replace("«</b></span><br /><b>",">").replace("«</b><b> </b></span><br /><b>Título Traduzido</b>: ",">").replace("«</strong></span><br /><b>",">").replace("«</b><b> </b></span><br /><strong>Título Traduzido</strong>: ",">").replace('Título Traduzido:</b> ',"").replace(">>",">").replace('<a href="https://comando.la/category/',"").replace("Titulo original:</b> ","").replace("Titulo Traduzido:</b> ","").replace("Titulo original :</b> ","").replace("Baixar Filme:</b> ",""))
			match = re.compile("middle'>	<a href='(.+?)'.+?src='(.+?)'.+?title.+?title.+?'>(.+?)<.+?strong>(.+?)<.+?Servidores<\/strong>:.(.+?)<").findall(link)
			for link,image2,name2, nome3, tipo in match:
				if not 'Torrent' in tipo: False
				else:
					AddDir(name2.replace("Torrent ","").replace(' Legendada','').replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…'), link, 538, image2, image2, isFolder=True, info='\xa0')
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 538 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserDTS", info='\xa0')

def DosTorrentsSerie1(): #538
	try:
		link = requests.get(url, headers={'Referer':'https://comoeubaixo.com/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(link.replace('</a><br>				','</a><br><'))
		#arquivo.close()
		match = re.compile("strong id=.+?title='(.+?)'(.+?<).a><br><").findall(link.replace('</a><br>				','</a><br><'))
		teste = match[0]
		if match:
			for title2, link in match:
				title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("Dual Áudio","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("Legendado","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]")
				AddDir(title2, link, 539, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
	except:
		pass
		try:
		    #link = requests.get(url, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		    #arquivo = open(cachefolder + "Comandoto.txt", "w+")
		    #arquivo.write(link)
		    #arquivo.close()
		    match = re.compile('>(Ver.+?)<(.+?)><h2').findall(link.replace('\n','').replace('\r',''))#.replace('</p><hr',"><h2"))
		    teste = match[0]
		    if match:
			    for title2, link in match:
				    AddDir(title2, link, 539, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
		except:
			pass
			#link = requests.get(url, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			#arquivo = open(cachefolder + "Comandoto.txt", "w+")
			#arquivo.write(link)
			#arquivo.close()
			match = re.compile('>(K.+?)<(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('Download" /></p><h2','Download" /></p><'))#.replace('</p><hr',"><h2"))
		    #teste = match[0]
			if match:
				for title2, link in match:
					title2 = title2.replace("K-Lite-Codec-Pack","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]")
					AddDir(title2, link, 539, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
            

def DosTorrentsSerie2(): #539
	try:
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(url)
		#arquivo.close()
		match = re.compile("<br>(.+?)<a (href='.+?)<").findall(url.replace(' DOWNLOAD TORRENT','').replace(' DUBLADO DUAL ÁUDIO','').replace(' LEGENDADA','').replace(' LEGENDADO','').replace(' MKV',''))#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
		teste = match[0]
		try:
			url3 = ([name1 for name1, xxx, link in match])
			if re.search(r'(o [0-9][0-9]\b)|x([0-9][0-9]\b)|O ([0-9][0-9]\b)', str(url3)):
				teste = false
			else:
				teste = ''
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, xx, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 542, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for ts, url2 in match:
			#arquivo = open(cachefolder + "Comandoto.txt", "w+")
			#arquivo.write(url2)
			#arquivo.close()
			ts = re.sub('Temporada – Torrent.+', 'Episódio 01', ts)
			AddDir(ts.replace(":","").swapcase().title().replace('P','p'), url2, 540, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
	except:
		pass
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(url)
		#arquivo.close()
		match = re.compile('(.+?)<.+?href="(.+?">.+?)<').findall(url)#.replace('unce"><img class="alignnone','unce">Completa').replace('</strong></h2><p><strong','<p><b>'))#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
		for name2, url2 in match:
			AddDir(name2.replace(":","").replace('/a>','Temporada Completa').replace('</strong>','Temporada Completa'), url2, 540, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')

def DosTorrentsSeriePlay(): #540
	#arquivo = open(cachefolder + "Comandoto.txt", "w+")
	#arquivo.write(url)
	#arquivo.close() 
	listar=[]
	listal=[]
	match = re.compile("href='(.+?)'.+?(720.|1080.|2160.|title=.+')").findall(url.replace('<img class="aligncenter"','Completo').replace('fannounce"><strong>','fannounce">Completo'))
	if match:
		for url2, name2 in match:
			if "Legenda" in name2: False
			if re.search(r'(720.|1080.|2160.|HDTV.)', name2):
				name1 = re.compile('(720.|1080.|2160.|HDTV.)').findall(name2)
				for name2 in name1:
					listal.append(url2)
					listar.append(name2.replace('P','p').replace("'",'').replace("Mp",'MP').replace('title=',''))
			else:
				listal.append(url2)
				listar.append(name2.replace('P','p').replace("'",'').replace("Mp",'MP').replace('title=',''))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:

				try:
					re22 = re.compile("(\w.+?) [(]").findall(background)
					recom2 = urllib.parse.unquote(re22[0].replace('.',' '))
					recom2 = re.sub('.+-.', '', recom2)
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(url2x)
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
						#arquivo = open(cachefolder + "ComandotoT.txt", "w+")
						#arquivo.write(recom2)
						#arquivo.close()
				except:
					pass
				#arquivo = open(cachefolder + "Comandotolis.txt", "w+")
				#arquivo.write(recom2)
				#arquivo.close()
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				url5 = requests.get("https://legendei.top/?s="+recom2,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste = re.compile('thumbnail.+\s.+?href="(.+?)"').findall(url5)
				teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						novo_nome = "Legendei (Brasil)-pt" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
						renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass
#######################################################################################                    
                    
def DosTorrentsSerie11(): #5291
	pagina = "0" if not cPageserDTS1 else cPageserDTS1
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserDTS1", info='\xa0')
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			link = requests.get("https://comandotorrent4k.net/category/series/page/"+str(y)+"/", headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			#link2 = re.compile("Categoria:(.+?)Clientes").findall(link.replace('\n','').replace('\r',''))#.replace("Baixar Série:</b> ","").replace("«</b></span><br /><b>",">").replace("«</b><b> </b></span><br /><b>Título Traduzido</b>: ",">").replace("«</strong></span><br /><b>",">").replace("«</b><b> </b></span><br /><strong>Título Traduzido</strong>: ",">").replace('Título Traduzido:</b> ',"").replace(">>",">").replace('<a href="https://comando.la/category/',"").replace("Titulo original:</b> ","").replace("Titulo Traduzido:</b> ","").replace("Titulo original :</b> ","").replace("Baixar Filme:</b> ",""))
			match = re.compile('headline".+?<a href="(.+?)">(.+?)<.+?src="(.+?)"').findall(link)
			for link, name2, image2 in match:
				AddDir(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…'), link, 5381, image2, image2, isFolder=True, info='\xa0')
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 5381 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserDTS1", info='\xa0')

def DosTorrentsSerie111(): #5381
	try:
		link = requests.get(url, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(link.replace('\n','').replace('\r','').replace('</p><hr',"><h2"))
		#arquivo.close()
		match = re.compile('>::.(.+?)::(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('</p><hr',"><h2"))
		teste = match[0]
		if match:
			for title2, link in match:
				title2 = title2.replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]")
				AddDir(title2, link, 5391, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
	except:
		pass
		try:
		    #link = requests.get(url, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		    #arquivo = open(cachefolder + "Comandoto.txt", "w+")
		    #arquivo.write(link)
		    #arquivo.close()
		    match = re.compile('>(Ver.+?)<(.+?)><h2').findall(link.replace('\n','').replace('\r',''))#.replace('</p><hr',"><h2"))
		    teste = match[0]
		    if match:
			    for title2, link in match:
				    AddDir(title2, link, 5391, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
		except:
			pass
			#link = requests.get(url, headers={'Referer':'https://comandotorrent4k.net/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
			#arquivo = open(cachefolder + "Comandoto.txt", "w+")
			#arquivo.write(link)
			#arquivo.close()
			match = re.compile('>(K.+?)<(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('Download" /></p><h2','Download" /></p><'))#.replace('</p><hr',"><h2"))
		    #teste = match[0]
			if match:
				for title2, link in match:
					title2 = title2.replace("K-Lite-Codec-Pack","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]")
					AddDir(title2, link, 5391, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
            

def DosTorrentsSerie21(): #5391
	try:
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(url.replace('unce"><img class="alignnone','unce">Completa'))
		#arquivo.close()
		match = re.compile('((Epi|Temporada|s0).+?)<.+?href="(.+?">.+?)<.p>').findall(url.replace('unce"><img class="alignnone','unce">Completa').replace('</strong></h2><p><strong','<p><b>'))#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
		teste = match[0]
		try:
			url3 = ([name1 for name1, xxx, link in match])
			if re.search(r'(o [0-9][0-9]\b)|x([0-9][0-9]\b)|O ([0-9][0-9]\b)', str(url3)):
				teste = false
			else:
				teste = ''
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, xx, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 542, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for ts, name2, url2 in match:
			#arquivo = open(cachefolder + "Comandoto.txt", "w+")
			#arquivo.write(url2)
			ts = re.sub('Temporada – Torrent.+', 'Episódio 01', ts)
			AddDir(ts.replace(":",""), url2, 5401, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
	except:
		pass
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(url)
		#arquivo.close()
		match = re.compile('(.+?)<.+?href="(.+?">.+?)<').findall(url)#.replace('unce"><img class="alignnone','unce">Completa').replace('</strong></h2><p><strong','<p><b>'))#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
		for name2, url2 in match:
			AddDir(name2.replace(":","").replace('/a>','Temporada Completa').replace('</strong>','Temporada Completa'), url2, 5401, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')

def DosTorrentsSeriePlay1(): #5401
	#arquivo = open(cachefolder + "Comandoto.txt", "w+")
	#arquivo.write(url.replace('<img class="aligncenter"','Completo'))
	#arquivo.close() 
	listar=[]
	listal=[]
	match = re.compile('(magnet.+?)">(\w+)').findall(url.replace('<img class="aligncenter"','Completo').replace('fannounce"><strong>','fannounce">Completo'))
	if match:
		for url2, name2 in match:
			if "Legenda" in name2: False
			else:
				listal.append(url2)
				listar.append(name2.replace('<img class="aligncenter jetp',"720p"))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:

				try:
					re22 = re.compile("(\w.+?) [(]").findall(background)
					recom2 = urllib.parse.unquote(re22[0].replace('.',' '))
					recom2 = re.sub('.+-.', '', recom2)
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(url2x)
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
						#arquivo = open(cachefolder + "ComandotoT.txt", "w+")
						#arquivo.write(recom2)
						#arquivo.close()
				except:
					pass
				#arquivo = open(cachefolder + "Comandotolis.txt", "w+")
				#arquivo.write(recom2)
				#arquivo.close()
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				url5 = requests.get("https://legendei.top/?s="+recom2,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste = re.compile('thumbnail.+\s.+?href="(.+?)"').findall(url5)
				teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'})

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						novo_nome = "Legendei (Brasil)-pt" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
						renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass

'''def DosTorrentsSerie(): #529
	pagina = "0" if not cPageserDTS else cPageserDTS
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserDTS", info='\xa0')
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			link = requests.get("https://www.thepiratefilmetorrent.me/category/series/page/"+str(y)+"/",headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text.replace('\n','').replace('\r','')
			#link2 = re.compile("Categoria:(.+?)Clientes").findall(link.replace('\n','').replace('\r',''))#.replace("Baixar Série:</b> ","").replace("«</b></span><br /><b>",">").replace("«</b><b> </b></span><br /><b>Título Traduzido</b>: ",">").replace("«</strong></span><br /><b>",">").replace("«</b><b> </b></span><br /><strong>Título Traduzido</strong>: ",">").replace('Título Traduzido:</b> ',"").replace(">>",">").replace('<a href="https://comando.la/category/',"").replace("Titulo original:</b> ","").replace("Titulo Traduzido:</b> ","").replace("Titulo original :</b> ","").replace("Baixar Filme:</b> ",""))
			match = re.compile('headline">.+?href="(.+?)".+?title="(.+?)".src="(.+?)"').findall(link)
			for link, name2, image2 in match:
				AddDir(name2.replace("Torrent ","").replace(' Torrent',"").replace(" –","").replace("Download","").replace("<b>","").replace("</b>","").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…'), link, 538, image2, image2, isFolder=True, info='\xa0')
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 538 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserDTS", info='\xa0')

def DosTorrentsSerie1(): #538
	try:
		link = requests.get(url,headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(link.replace('\n','').replace('\r','').replace('</p><hr',"><h2"))
		#arquivo.close()
		match = re.compile('0000."><strong>(.+?)<.strong>(.+?)<span').findall(link.replace('\n','').replace('\r','').replace('</p><hr',"><h2"))
		teste = match[0]
		if match:
			for title2, link in match:
				title2 = title2.replace('LEGENDADOS','LEGENDADO').replace("DUBLADO NÃO OFICIAL","[COLOR goldenrod][B]Dublagem (Não Oficial)[/B][/COLOR]").replace("DUAL ÁUDIO / DUBLADO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("LEGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("NACIONAL","[COLOR springgreen][B]Nacional[/B][/COLOR]").replace("DUAL ÁUDIO","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]").replace("DUBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("EGENDADO","[COLOR red][B]Legendado[/B][/COLOR]").replace("UBLADO","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace('LINKS','').replace('LINK','')
				if "LEG" in title2 or 'DUB' in title2: False
				else:
					AddDir(title2, link, 539, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
	except:
		pass
		try:
		    #link = requests.get(url,headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
		    #arquivo = open(cachefolder + "Comandoto.txt", "w+")
		    #arquivo.write(link)
		    #arquivo.close()
		    match = re.compile('>(Ver.+?)<(.+?)><h2').findall(link.replace('\n','').replace('\r',''))#.replace('</p><hr',"><h2"))
		    teste = match[0]
		    if match:
			    for title2, link in match:
				    AddDir(title2, link, 539, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
		except:
			pass
			try:
				#link = requests.get(url,headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				#arquivo = open(cachefolder + "Comandoto.txt", "w+")
				#arquivo.write(link)
				#arquivo.close()
				match = re.compile('(<a href="magnet.+?)">.+?>(Temporada.Completa)').findall(link.replace('\n','').replace('\r','').replace('Download" /></p><h2','Download" /></p><'))#.replace('</p><hr',"><h2"))
				if match:
					for link,title2 in match:
						title2 = title2.replace("K-Lite-Codec-Pack","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]")
						AddDir(title2, "TEMPORADA COMPLETA"+link+'".">720<.a><.p>', 539, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
			except:
				#link = requests.get(url,headers={'Referer':'https://www.thepiratefilmetorrent.me/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				#arquivo = open(cachefolder + "Comandoto.txt", "w+")
				#arquivo.write(link)
				#arquivo.close()
				match = re.compile('>(K.+?)<(.+?)><h2').findall(link.replace('\n','').replace('\r','').replace('Download" /></p><h2','Download" /></p><'))#.replace('</p><hr',"><h2"))
				teste = match[0]
				if match:
					for title2, link in match:
						title2 = title2.replace("K-Lite-Codec-Pack","[COLOR springgreen][B]Dual Áudio[/B][/COLOR]")
						AddDir(title2, link, 539, iconimage, iconimage, isFolder=True, IsPlayable=False, info='\xa0')
            

def DosTorrentsSerie2(): #539
	try:
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(url.replace('unce"><img class="alignnone','unce">Completa').replace('</strong></h2><p><strong','<p><b>').replace('</span></p><p style="text-align: center;">','TEMPORADA COMPLETA').replace('<a href="https','').replace('/><br /></a>','</p>'))
		#arquivo.close()
		match = re.compile('((Epi|s0|EPI|TEMPO).+?)<.+?href="(mag.+?">.+?)<.p>').findall(url.replace('unce"><img class="alignnone','unce">Completa').replace('</strong></h2><p><strong','<p><b>').replace('</a>><h2','<.p>').replace('</span></p><p style="text-align: center;">','TEMPORADA COMPLETA').replace('<a href="https','').replace('/><br /></a>','</p>').replace('TEMPORADA COMPLETA<strong>Episódio','Episódio').replace('<p style','<.p>'))#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
		teste = match[0]
		try:
			url3 = ([name1 for name1, xxx, link in match])
			teste = re.compile('([0-9]+ \w+ [0-9]+)|(Completa)|(Temporada)|(BluRay)').findall(str(url3))
			teste = teste[0]
		except:
			pass
			try:
				playlist = ([nome+' - '+link for nome, xx, link in match])
				playlist2 = playlist[0]
				AddDir('[B]Playlist de episódios[/B]', playlist, 542, iconimage, iconimage, isFolder=False, IsPlayable=True, info='[B]Lista automatizada de episódios[/B]\n\nSó irá carregar episódios soltos, episódios embutidos apenas com UpNext\n\n\n\n\n\n\n\n\n\n\nEste modo não procura legendas externas, mas pode haver legendas inclusas no episódio')
			except:
				pass
		for ts, name2, url2 in match:
			#arquivo = open(cachefolder + "Comandoto.txt", "w+")
			#arquivo.write(url2)
			ts = re.sub('Temporada – Torrent.+', 'Episódio 01', ts)
			AddDir(ts.replace(":",""), url2, 540, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')
	except:
		pass
		#arquivo = open(cachefolder + "Comandoto.txt", "w+")
		#arquivo.write(url)
		#arquivo.close()
		match = re.compile('<a href="(mag.+?"><strong>).+?(Temporada.+?)<').findall(url)#.replace('unce"><img class="alignnone','unce">Completa').replace('</strong></h2><p><strong','<p><b>'))#.replace('—<br /> ','ter;">').replace('center;"><a','center;"><b>Temporada Completa: </b><a').replace('<span style="font-weight',"").replace(' 700 !important;">',"").replace("</span>","").replace('<p>',"").replace('"><strong>','">1080p</a></p>').replace("</p><p","</a></p><p"))
		for url2, name2 in match:
			AddDir(name2.replace(":","").replace('/a>','Temporada Completa').replace('</strong>','Temporada Completa'), url2, 540, iconimage, iconimage, isFolder=False, IsPlayable=True, info='\xa0')

def DosTorrentsSeriePlay(): #540
	#arquivo = open(cachefolder + "Comandoto.txt", "w+")
	#arquivo.write(url.replace('<img class="aligncenter"','Completo').replace('fannounce"><strong>','fannounce">Completo').replace('<strong>','Completo').replace('fannounce"><img loading="lazy"','fannounce"720<.a>'))
	#arquivo.close() 
	listar=[]
	listal=[]
	match = re.compile('(magnet.+?)".+?">(\w+)<.a>').findall(url.replace('<img class="aligncenter"','Completo').replace('fannounce"><strong>','fannounce">Completo').replace('<strong>','Completo').replace('fannounce"><img loading="lazy"','fannounce".">720<.a>').replace('>CompletoTEMPORADA COMPLETA<','">Completa<.a>'))
	if match:
		for url2, name2 in match:
			if "Legenda" in name2: False
			else:
				listal.append(url2)
				listar.append(name2.replace('<img class="aligncenter jetp',"720p"))
		if len(listal) <1:
			xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
			sys.exit(int(sys.argv[1]))
		d = xbmcgui.Dialog().select("Selecione a resolução", listar)
		if d!= -1:
			url2x = listal[d]
			PlayUrl(name,"plugin://plugin.video.elementum/play?show=''&uri="+url2x, sub=cachefolder+"Legendas/Legendei (Brasil)-pt.srt")
			try:
				dir = cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					if '.srt' in f or '.nfo' in f or '.com' in f or '.txt' in f or '.html' in f or '.net' in f:
						os.remove(os.path.join(dir, f))
			except:
				pass
			try:
				dir =  cachefolder+'Legendas'
				dir2 = os.listdir(dir)
				for f in dir2:
					shutil.rmtree(cachefolder+'Legendas/'+f)
			except:
				pass
			try:

				try:
					re22 = re.compile("(\w.+?) [(]").findall(background)
					recom2 = urllib.parse.unquote(re22[0].replace('.',' '))
					recom2 = re.sub('.+-.', '', recom2)
				except:
					pass
				try:
					re22 = re.compile("dn=(\w.+?E[0-9][0-9]+)").findall(url2x)
					for ccc in re22:
						recom2 = urllib.parse.unquote(ccc.replace('.',' '))
						recom1 = re.sub('.+-.', '', recom2)
						recom2 = re.sub('.20[0-9]+.',' ', recom1)
						#arquivo = open(cachefolder + "ComandotoT.txt", "w+")
						#arquivo.write(recom2)
						#arquivo.close()
				except:
					pass
				#arquivo = open(cachefolder + "Comandotolis.txt", "w+")
				#arquivo.write(recom2)
				#arquivo.close()
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 20000, {2})".format(recom2, "[COLOR red][B]Buscando Legendas Externas...[/B][/COLOR]", iconimage))
				except:
					pass
				url5 = requests.get("https://legendei.top/?s="+recom2,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
				teste = re.compile('thumbnail.+\s.+?href="(.+?)"').findall(url5)
				teste = teste[0]
				try:
					teste2 = requests.get(teste,headers={'Referer':'https://legendei.top/','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'}).text
					teste3 = re.compile('buttondown" href="(.+?)"').findall(teste2)
					teste3 = teste3[0]
				except:
					xbmc.executebuiltin("Notification({0}, {1}, 40000, {2})".format(recom2, "[COLOR yellow][B]Legenda em Breve...[/B][/COLOR]", iconimage))

				path = cachefolder+"Legendas/"
				try:
					os.remove(cachefolder+'Legendas/Legendei (Brasil)-pt.srt')
				except:
					pass
				response = requests.get(teste3, verify=False, stream=True)

				file = zipfile.ZipFile(io.BytesIO(response.content))

				file.extractall(path)
				try:
					local = os.path.abspath(cachefolder+"Legendas")
					for p, _, files in os.walk(local):
						for file in files:
							filex = file.replace('(','#%').replace(')','#@')
							arquivos = os.path.join(p, filex)
							arquivos1 = re.sub('.+Legendas.'+filex,'',arquivos)
							arquivos1x = arquivos1
							teste = str(arquivos1x).replace('\n','').replace('\r','')
							final = re.compile('.+srt').findall(teste)
							for teste in final:
								arquivos2 = re.compile('.'*5+'.srt').findall(teste)
								os.rename(teste.replace('#%','(').replace('#@',')'), cachefolder+'Legendas/'+arquivos2[0])
				except:
					pass
				for nome in os.listdir(cachefolder+"Legendas/"):
					if ".srt" in nome:
						novo_nome = "Legendei (Brasil)-pt" + ".srt"
						os.rename(cachefolder+"Legendas/" + nome, cachefolder+"Legendas/" + novo_nome)
						renam = cachefolder+"Legendas/Legendei (Brasil)-pt.srt"
						renam = renam[0]
			except:
				pass
			try:
				notific = ([name for name in os.listdir(cachefolder+"Legendas/")])
				teste = re.compile('srt').findall(str(notific))
				teste = teste[0]
				LegCont = ([name for name in os.listdir(cachefolder+"Legendas/") if 'Legendei (Brasil)' in name or 'Legendas-Dev (Brasil)' in name or 'OpenSubtitles (Brasil)' in name or 'Elsubtitle (Brasil)' in name])
				legname = "[COLOR green][B]"+str(len(LegCont))+" Legendas Encontradas[/B][/COLOR]"
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(recom2,legname.replace('1 Legendas Encontradas','1 Legenda Encontrada'), iconimage))
			except:
				try:
					xbmc.executebuiltin("Notification({0}, {1}, 2000, {2})".format(recom2, "[COLOR red][B]Nenhuma Legenda Encontrada[/B][/COLOR]", iconimage))
				except:
					pass'''
        

def GenerosMM(): #189
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaMM1)
	if d != -1:
		global Cat
		Addon.setSetting("CatMM", str(d) )
		Cat = d
		Addon.setSetting("cPageMMf", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def ListFilmeLancMM(): #184
	l=0
	i=0
	try:
		links = OpenURL("http://www.mmfilmeshd.tv/series/")
		ms = re.compile('href\=\"(.+www.mmfilmeshd.tv.+)\" rel\=\"bookmark\"').findall(links)
		for x in range(0, 5):
			l+=1
			link = OpenURL("http://www.mmfilmeshd.tv/ultimos/page/"+str(l)+"/")
			m = re.compile('id\=\"post\-\d+\".+?\=.([^\"]+)\h*(?s)(.+?)(http[^\"]+)').findall(link)
			res = re.compile('audioy..([^\<]*)').findall(link)
			jpg = re.compile('src=\"(http.+?www.mmfilmeshd.tv\/wp-content\/uploads[^\"]+)').findall(link)
			dubleg = re.compile('boxxer.+\s.+boxxer..([^\<]*)').findall(link)
			if m:
				for name2,b,url2 in m:
					name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'").replace("&#8230;","")
					if not url2 in ms:
						AddDir(name2+ " [COLOR yellow]"+res[i]+"[/COLOR] [COLOR green]"+dubleg[i]+"[/COLOR]", url2, 181, jpg[i], jpg[i],isFolder=True,IsPlayable=False, info='\xa0')
					i+=1
			i=0
	except:
		pass
def ListFilmeMM(pagina2): #180
	AddDir("[COLOR yellow][B][Gênero dos Filmes]:[/B] " + ClistaMM1[int(CatMM)] +"[/COLOR]", "url" ,189 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	pagina=eval(pagina2)
	l= int(pagina)*4
	p=1
	if int(pagina) > 0:
		AddDir("[COLOR lime][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background=pagina2, info='\xa0')
	try:
		links = OpenURL("http://www.mmfilmeshd.tv/series/")
		links = OpenURL("http://www.mmfilmeshd.tv/series/")
		ms = re.compile('href\=\"(.+www.mmfilmeshd.tv.+)\" rel\=\"bookmark\"').findall(links)
		for x in range(0, 4):
			l+=1
			link = OpenURL("http://www.mmfilmeshd.tv/"+ ClistaMM0[int(CatMM)] +"/page/"+str(l)+"/").replace('\n','').replace('\r','')
			m = re.compile('<li id=.+?" title="(.+?)".+?href="(.+?)".+?boxxer.+?boxxer">(.+?)<.+?src="(.+?)".+?audioy..(.+?)<').findall(link)
			if m:
				for name2, url2, dubleg, jpg, res in m:
					name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'").replace("&#8230;","")
					dubleg = dubleg.replace("</div>","")
					if not url2 in ms:
						AddDir(name2+ " [B][COLOR yellow]"+res+"[/COLOR][/B] [B][COLOR cyan]"+dubleg+"[/COLOR][/B]", url2, 181, jpg, jpg,isFolder=True,IsPlayable=False, info='\xa0')
					p+=1
			if p >= 40:
				AddDir("[COLOR lime][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background=pagina2)
	except:
		pass
def OpenLinkMM(): #181
	trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace("[B][COLOR yellow]HD[/COLOR][/B]","").replace(" [B][COLOR cyan]DUB/LEG[/COLOR][/B]","").replace("  [B][COLOR cyan]DUB[/COLOR][/B]","").replace("  [B][COLOR cyan]LEG[/COLOR][/B]","").replace(" ","+")+"Trailer+Legendado")
	trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	try:
		link = OpenURL(url)
		m = re.compile('boxp\(.([^\']+)').findall(link) #princi
		info2 = re.compile('mCSB_container..\s(.+)').findall(link)
		#info2= info2[0][0].replace("\t","") if info2 else ""
		if m:
			link2 = OpenURL(m[0],headers={'referer': "http://www.mmfilmeshd.tv/"})
			m2 = re.compile('opb\(.([^\']+).+?.{3}.+?[^\\>]+.([^\<]+)').findall(link2)
			if m2:
				name2 = re.sub(' \[.+', '', name )
				for link,dubleg in m2:
					AddDir( name2 +" [B][COLOR lime]("+dubleg+")[/COLOR][/B]" ,link, 182, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info2[0].replace("								",""), background=url)
	except:
		pass
def PlayLinkMM(): #182
	#try:
		link = requests.get(url, headers={'referer': "http://www.mmfilmeshd.tv/"})
		m = re.compile("addiframe.'https:\/\/player.moduda.fun\/qweowqie.php.([^\']+)").findall(link.text)
		#result = {'mm': '1', 'url': m2, 'auth': 'benefits-and-risks-of-credit-cards'}
		#r = requests.post('https://noticiasemfoco.online/benefits-and-risks-of-credit-cards/', cookies=result)
		if m:
			m[0] = "https://player.moduda.fun/abcde.php?" + m[0] if not "http" in m[0] else m[0]
			link2 = OpenURL(re.sub('(\/.{1,25}\/).{1,10}\/', r'\1', m[0]),headers={'referer': "http://player.moduda.fun"}).replace("file","\nfile")
			#m2 = re.compile("file.+?(h[^\']+).+?(\,)").findall(link2)
			m2 = re.compile('(:\/\/[^\']+).+?(\d+p)\'').findall(link2)  #player mp4
			legenda = re.compile('([^\']+\.(vtt|srt|sub|ssa|txt|ass))').findall(link2)
			listar=[]
			listal=[]
			for link,res in m2:
				listal.append(link)#.replace("360","720"))
				#listar.append("[COLOR green][B]HD[/COLOR][/B]")
				listar.append(res)#.replace("360p","720p"))
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				#global background
				#background=background+";;;"+name+";;;MM"
				if legenda:
					legenda = re.sub(' ', '%20', legenda[0][0] )
					if not "http" in legenda:
						legenda = "http://player.moduda.fun/" + legenda
					PlayUrl(name,'https' + url2+"|Referer=https://player.moduda.fun/", iconimage, info, sub=legenda)
				else:
					PlayUrl(name,'https' + url2+"|Referer=https://player.moduda.fun/", iconimage, info)
			else:
				sys.exit()
	#except:
	#	pass
# -----------------
def ListSerieMM(): #190
	#try:
		link = OpenURL("http://www.mmfilmeshd.tv/series/")
		m = re.compile('post\-\d+\".+?\=.([^\"]+).+?(.+?)(http[^\"]+)').findall(link.replace("\n","").replace("\r",""))
		jpg = re.compile('src=\"(http.+?www.mmfilmeshd.tv\/wp-content\/uploads[^\"]+)').findall(link)
		i=0
		m2=[]
		if m:
			for name2,b,url2 in m:
				m2.append([name2,url2,jpg[i]])
				i+=1
			m2 = sorted(m2, key=lambda m2: m2[0])
			for name2,url2,jpg2 in m2:
				name2 = name2.replace("&#8211;","-").replace("&#038;","&").replace("&#8217;","\'").replace("&#8230;","")
				AddDir(name2, url2, 191, jpg2, jpg2, isFolder=True,IsPlayable=False, info='\xa0')
	#except:
	#	pass
def ListSMM(x): #191
	#try:
		link = OpenURL(url)
		m = re.compile('boxp\(.([^\']+)').findall(link)
		info2= re.compile('mCSB_container..\s(.+)').findall(link)
		info2= info2[0][0].replace("\t","") if info2 else ""
		arquivo = open(cachefolder + "MMfilmes Cach.txt", "w+")
		arquivo.write(m[0])
		arquivo.close()
		i=0
		if m:
			if x=="None":
				link2 = requests.get(m[0],headers={'referer': "http://www.mmfilmeshd.tv/"})
				m2 = re.compile('opb\(.([^\']+).+?.{3}.+?[^\\>]+.(PRINCIPAL+)').findall(link2.text)
				listar=[]
				listal=[]
				for link,res in m2:
					listal.append(link)
					listar.append(res)
				if len(listar)==1:
					d=0
				else:
					d = xbmcgui.Dialog().select("Selecione o server:", listar)
				if d== -1:
					d= 0
				if m2:
					link3 = OpenURL(m2[0][0],headers={'referer': "http://www.mmfilmeshd.tv/"}).replace("\n","").replace("\r","").replace('".Svplayer"',"<end>").replace('\t'," ")
					link3 = re.sub('(\(s \=\= \d+\))', r'<end>\1', link3 )
					m3 = re.compile('s \=\= (\d+)(.+?\<end\>)').findall(link3)
					for temp in m3:
						AddDir("[B][Temporada "+ temp[0] +"][/B]" ,listal[d], 192, iconimage, iconimage, isFolder=True, info=info2, background=i)
						i+=1
	#except:
	#	pass
def ListEpiMM(x): #192
	try:
		link3 = OpenURL(url,headers={'referer': "http://www.mmfilmeshd.tv/"}).replace("\n","").replace("\r","").replace('".Svplayer"',"<end>").replace('\t'," ")
		link3 = re.sub('(\(s \=\= \d+\))', r'<end>\1', link3 )
		m3 = re.compile('s \=\= (\d+)(.+?\<end\>)').findall(link3)
		r=-1
		p=1
		dubleg = re.compile("t \=\= \'([^\']+)(.+?\})").findall( m3[int(x)][1] )
		epi = re.compile("e \=\= (\d+).+?addiframe\(\'([^\']+)").findall( m3[int(x)][1] )
		for e,url2 in epi:
			url2 = "http://player.moduda.fun" + url2 if not "http" in url2 else url2
			if p == int(e) :
				r+=1
			if len(dubleg[r][1]) < 30:
				r+=1
			name2 = "[COLOR yellow](Dub)[/COLOR]" if "dub" in dubleg[r][0] else "[COLOR blue](Leg)[/COLOR]"
			AddDir("Episódio "+ e + " [COLOR blue]" + name2 ,url2, 194, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info)
	except:
		pass
def PlaySMM(): #194
	try:
		if "drive.google" in url:
			#xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, drive')
			PlayUrl(name, "plugin://plugin.video.gdrive?mode=streamURL&amp;url="+url, iconimage, info)
			sys.exit()
		cdn = re.compile('(\d+)\=(.+?.mp4)|\&l\=(.+)').findall(url)
		if cdn:
			cdn = list(reversed(cdn))
			listar=[]
			listal=[]
			legenda=""
			for res,link,leg in cdn:
				if link != "":
					listal.append(link)
					listar.append(res)
				if leg:
					legenda = leg
					if not "http" in legenda:
						legenda = "http://player.moduda.fun/" + legenda
					legenda = re.sub(' ', '%20', legenda )
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				PlayUrl(name, url2, iconimage, info, sub=legenda)
		else:
			proxy = requests.get("https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/proxy")
			proxy2 = re.compile('proxy = "(.+?)"').findall(proxy.text)
			link2 = OpenURL( re.sub('(\/.{1,25}\/).{1,10}\/', r'\1', url) ,headers={'referer': "http://player.moduda.fun"}).replace('"',"'")
			m2 = re.compile('(h[^\']+).+?label...(\w+)').findall(link2)
			legenda = re.compile('([^\']+\.(vtt|srt|sub|ssa|txt|ass))').findall(link2)
			listar=[]
			listal=[]
			for link,res in m2:
				listal.append(link)
				listar.append(res)
			if len(listal) < 1:
				xbmcgui.Dialog().ok('Play XD', 'Erro!')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				if legenda:
					legenda = re.sub(' ', '%20', legenda[0][0] )
					if not "http" in legenda:
						legenda = "http://player.moduda.fun/" + legenda
					PlayUrl(name, url2+"|Referer=https://player.moduda.fun/", iconimage, info, sub=legenda)
				else:
					PlayUrl(name, url2+"|Referer=https://player.moduda.fun/", iconimage, info)
	except:
		pass
# ----------------- Fim MM filmes
def TVCB2(x): #104
	canal_link = requests.get('https://brazucaplay.forumeiros.com/h101-servermax.xml').text
	canal_link = re.compile('btv1="(.+?)"').findall(canal_link)[0]
	canal_link = base64.b16decode(canal_link[::-1]).decode('utf-8')
	canal_final = canal_link
	print(canal_final)
	userpass = re.compile('(.+?)%.+?(\/.+)').findall(canal_final)
	for user, password in userpass:
		url = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/BTV1').text
		urlx = re.compile('(.B..C.+?)<.+?btv1=(.+?)=.+?il>(.+?)<').findall(url)
		for name2, url2, img2 in urlx:
			AddDir(name2, user+url2+password, 214, img2, img2, isFolder=False, IsPlayable=True, info='\xa0')
	#canal_link = requests.get('https://brazucaplay.forumeiros.com/h101-servermax.xml').text
	#canal_link = re.compile('btv4="(.+?)"').findall(canal_link)[0]
	#canal_link = base64.b16decode(canal_link[::-1]).decode('utf-8')
	#canal_final = canal_link
	#userpass = re.compile('80.(.+?)\/(.+?)\/.+?([|].+)').findall(canal_final)
	#for user, password, agent in userpass:
	#	url = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/tv4.txt').text
	#	urlx = re.compile('tvg-name="(.+?)".+?"(.+?)".+\s(.+)').findall(url)
	#	for name2, img2, url2 in urlx:
	#		AddDir(name2, url2.replace('user',user).replace('pass',password)+agent, 214, img2, img2, isFolder=False, IsPlayable=True, info='\xa0')
def PlayTVB3(): #1212
	t = requests.get("https://cutt.ly/canalTop", verify=False)
	jq_ = json.loads(t.text.replace("\\","//"))
	for jq1 in jq_:
		if jq1['id'] == url:
			PlayUrl(jq1['name'], jq1['link'],jq1['logo'],"")
def TVCB3(): #107
	link = requests.get("https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/radioyoutube.txt").text.replace("\n","").replace('\r','')
	m = re.compile('tvg-id=".+?e](.+?)[[].+?(http.+?)".+?(plugi.+?ffle)').findall(link)
	for name2, img2, url2 in m:
		#url2 = url2.replace('BR-LIVE-TODO MUNDO USA',"[COLOR green][B]HD[/B][/COLOR]").replace('Juntos Vamos Derrotar o Virus',"[COLOR green][B]HD[/B][/COLOR]").replace('BR-LIVE-SEMPRE 0800',"[COLOR green][B]HD[/B][/COLOR]")
		AddDir(name2, url2, 212, img2, img2, isFolder=False, IsPlayable=True, info='\xa0')
def RedOndemand(): #98
	AddDir('[B][COLOR red]|[/COLOR]|[COLOR red]|[/COLOR][COLOR red] Filmes RED[/B][/COLOR]', '', 87, 'https://uploaddeimagens.com.br/images/004/002/278/full/logofilmes.png', 'https://uploaddeimagens.com.br/images/004/002/278/full/logofilmes.png', isFolder=True, IsPlayable=True, info='\xa0')
	AddDir('[B][COLOR red]|[/COLOR]|[COLOR red]|[/COLOR][COLOR red] Séries RED[/B][/COLOR]', '', 89, 'https://uploaddeimagens.com.br/images/004/002/590/full/logoSeries.png', 'https://uploaddeimagens.com.br/images/004/002/590/full/logoSeries.png', isFolder=True, IsPlayable=True, info='\xa0')

'''def auth():
    mstimetwo = int(time.mktime(datetime.datetime.utcnow().timetuple()) * 1000)
    scret = 'Qjg5QkVEMDI0OTU1MjZMZ2hFNnM='
    scret = base64.b64decode(scret).decode('utf-8')
    passwr = 'QkExMjJDMTMwMzRDOTJBMTA0OEI0ODdCRUUwMjU0QUM='
    passwr = base64.b64decode(passwr).decode('utf-8')
    ms =str(mstimetwo)[:-3]+scret
    url = requests.post('https://www.devglan.com/online-tools/aes-encryption', data={'file': 'undefined','data': '{"textToEncrypt":'+ms+',"secretKey":'+passwr+',"mode":"ECB","keySize":"256","dataFormat":"Hex"}'})
    encr = json.loads(url.text)
    auth = encr['output'].swapcase()
    return auth'''

def TVCB4(): #108
	AddDir('[B][COLOR red]|||[/COLOR][COLOR white]|||[/COLOR][COLOR red]|||[/COLOR][COLOR red] Filmes e Séries[/B][/COLOR]', '', 98, 'https://uploaddeimagens.com.br/images/004/002/176/full/filmeseseries.png', 'https://uploaddeimagens.com.br/images/004/002/176/full/filmeseseries.png', isFolder=True, IsPlayable=True, info='[B]Filmes e Séries OnDemand[/B]')
	link = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/redplus%2B').text
	base = re.compile('Nome: (.+)\sUrl: (.+)\sImagem: (.+)').findall(link)
	for name2, url2, img2 in base:
		name2 = name2.replace('HD+','[COLOR springgreen]HD+[/COLOR]').replace('HD','[COLOR springgreen]HD[/COLOR]').replace('4K','[COLOR springgreen]4K[/COLOR]')
		AddDir('[B]'+name2+'[/B]', url2, 109, img2, img2, isFolder=False, IsPlayable=True, info='\xa0')
	#try:
	#	header = 'UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS41Mg=='
	#	header = base64.b64decode(header).decode('utf-8')
	#	log = base64.b64decode('aHR0cHM6Ly9hbmRyb2lkLnJlZGlwdHYyLmNvbS9sb2dpbi5waHA/dXNlcmNvZGU9MDAwMDAwMDAwMCZwaWQ9MSZtYWM9Qjg5QkVEMDI0OTU1JnNuPTIzNDdiOGRjZmIyMiZjdXN0b21lcj1SRUQzNjAmbGFuZz1lbmcmY3M9YW1sb2dpYyZjaGVjaz0yODkxMTY2NTgz').decode('utf-8')
	#	login = requests.get(log, headers={'User-Agent':header}).text
	#	link = 'aHR0cHM6Ly9hbmRyb2lkLnJlZGlwdHYyLmNvbS9jaC5waHA/dXNlcmNvZGU9ODA3MDM5NDcwOSZwaWQ9MSZtYWM9Qjg5QkVEMDI0OTU1JnNuPTIzNDdiOGRjZmIyNiZjdXN0b21lcj1SRUQmbGFuZz1lbmcmY3M9YW1sb2dpYyZjaGVjaz0yNzkxNzIzMTU0'
	#	link = base64.b64decode(link).decode('utf-8')
	#	t = requests.get(link, verify=False, headers={'User-Agent': header,'Connection':'Keep-Alive','Accept-Encoding':'gzip'})
	#	jq_ = json.loads(t.text.replace("\\","//").replace('SKY 10','SKY 99').replace('////','//').replace('///','/').replace("http://files.rednetcontent.com/chlogo2/Brasil/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo2/Portuguese/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo2/english/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo2/french/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo2/arabic/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo2/dutch/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo2/russian/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("http://files.rednetcontent.com/chlogo2/German/","https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/").replace("1280px-SporTV_2017_logo.png","SporTV_2_logo_20167.png").replace("SporTV_2_logo_2016.png","Sportv2.png").replace("TVBAH//u0130A.png","bahia.png").replace('new/','').replace('gloob//u0131nho.png','gloob.png').replace('band_campinas-br.png','tv_globo_br.png').replace('Premiere Clubes','Premiere 1 Clubes').replace('HBO+','HBO 3').replace('MTVL//u0130VE.png','mtv-live.png').replace('http://files.rednetcontent.com/chlogo2/denmark/mtv-80s-us.png','https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/imagens/vh1.png').replace('MTV 80s','V1H'))
	#	jq = sorted(jq_, key=lambda jq_: jq_['name'])
	#	for jq1 in jq:
	#		#if "Action 1" in jq1['name']or "Action 2" in jq1['name'] or "Action 3" in jq1['name'] or "Action 4" in jq1['name'] or "Action 5" in jq1['name'] or "Action 6" in jq1['name'] or "Action 7" in jq1['name'] or "Action 8" in jq1['name'] or "Action 9" in jq1['name'] or "Action 10" in jq1['name'] or "Adventure" in jq1['name'] or "Crime" in jq1['name'] or "Documentary" in jq1['name'] or "Drama" in jq1['name'] or "Horror" in jq1['name'] or "Sci-Fi" in jq1['name'] or "Comedy 1" in jq1['name'] or "Comedy 2" in jq1['name'] or "Comedy 3" in jq1['name'] or "Comedy 4" in jq1['name'] or "Comedy 5" in jq1['name'] or "Comedy 6" in jq1['name'] or "Comedy 7" in jq1['name'] or "Comedy 8" in jq1['name'] or "Comedy 9" in jq1['name'] or "Comedy 10" in jq1['name'] or "Kids 1" in jq1['name'] or "Kids 2" in jq1['name'] or "Kids 3" in jq1['name'] or "Kids 4" in jq1['name'] or "Kids 5" in jq1['name'] or "Kids 6" in jq1['name'] or "Kids 7" in jq1['name'] or "Kids 8" in jq1['name'] or "Kids 9" in jq1['name'] or "Kids 10" in jq1['name']: False
	#		if "Fazenda" in jq1['name'] or "BBB" in jq1['name'] or "Star Hits" in jq1['name'] or 'Disney XD' in jq1['name'] or 'Disney Junior' in jq1['name'] or 'Nat Geo Kids' in jq1['name'] or 'National Geographics' in jq1['name'] or 'DAZN' in jq1['name'] or 'Fashion TV' in jq1['name'] or 'France 24' in jq1['name'] or 'MTVs 00' in jq1['name'] or 'Mega TV' in jq1['name'] or 'Star+' in jq1['name'] or 'Cine SKY' in jq1['name'] or 'Cine Sky' in jq1['name'] or 'Canal Do Boi' in jq1['name'] or 'Band Campinas' in jq1['name'] or 'Agro+' in jq1['name'] or 'Bandeirantes' in jq1['name'] or 'Euro Channel' in jq1['name'] or 'Sabor Arte' in jq1['name'] or 'Smithsonian' in jq1['name'] or 'Trace Brazuca' in jq1['name'] or 'Travel Box' in jq1['name'] or 'Loading TV' in jq1['name'] or 'Entertainment' in jq1['name'] or 'Sao Carlos' in jq1['name'] or 'Film And Arts' in jq1['name'] or 'Gazeta' in jq1['name'] or 'Globo Amazonas' in jq1['name'] or 'Globo Asa Branca' in jq1['name'] or 'Globo Cabugi' in jq1['name'] or 'Globo Centro' in jq1['name'] or 'Globo EPTV Ribeirao Preto' in jq1['name'] or 'Inter TV' in jq1['name'] or 'NSC TV' in jq1['name'] or 'Nsc' in jq1['name'] or 'RPC TV' in jq1['name'] or 'Globo TV Bahia' in jq1['name'] or 'Globo Rede' in jq1['name'] or 'Rede Amazonica' in jq1['name'] or 'TV Cabo Branco' in jq1['name'] or 'TV Clube Teresina' in jq1['name'] or 'TV Diario Mogi Das Cruzes' in jq1['name'] or 'TV Fronteira Presidente' in jq1['name'] or 'TV Gazeta' in jq1['name'] or 'TV Inegracao juiz' in jq1['name'] or 'TV Itapetininga' in jq1['name'] or 'TV Liberal Belem' in jq1['name'] or 'TV Morena' in jq1['name'] or 'TV Riberio Preto' in jq1['name'] or 'TV Sergipe' in jq1['name'] or 'TV TEM' in jq1['name'] or 'TV Tem' in jq1['name'] or 'TV Vanguarda' in jq1['name'] or 'Globo Tribuna Santos' in jq1['name'] or 'Nickelodeon' in jq1['name'] or 'RBS TV Porto' in jq1['name'] or 'Record Campinas' in jq1['name'] or 'Record Goias' in jq1['name'] or 'Record TV Belem' in jq1['name'] or 'Record TV Brasília' in jq1['name'] or 'Record TV Cidade' in jq1['name'] or 'Record TV GO' in jq1['name'] or 'Record TV Interior' in jq1['name'] or 'Record TV MG' in jq1['name'] or 'Record TV R' in jq1['name'] or 'Record TV SP' in jq1['name'] or 'Rede Gospel' in jq1['name'] or 'Rede Vida' in jq1['name'] or 'SBT TV Goias' in jq1['name'] or 'SBT TV Jangadeiro' in jq1['name'] or 'SBT TV PR' in jq1['name'] or 'SporTV 4' in jq1['name'] or 'TV Brasil' in jq1['name'] or 'Globo RBS TV' in jq1['name'] or 'de Fora' in jq1['name'] or 'Mirante' in jq1['name'] or 'Rio Sul' in jq1['name'] or 'Premiere 8' in jq1['name'] or 'Record TV Bras' in jq1['name'] or 'mtv-live.png' in jq1['logo'] or 'VH1' in jq1['name']: False
	#		else:
	#			if jq1['language']== "Brasil" or jq1['language'] == "Brazilian" or jq1['name'] == "MTV Live HD" or jq1['id'] == "49182" or jq1['id'] == "2383" or jq1['id'] == "32062":
	#				try:
	#					jq1['name'] = jq1['name'].replace("AE", "A&E").replace('99','10').replace('Premiere 1 Clubes','Premiere Clubes').replace('HBO 3','HBO+').replace('V1H','VH1').replace('Music Box TV','Music Box Ru')#.replace("HD","[COLOR lime]HD[/COLOR]").replace("F[COLOR lime]HD[/COLOR]","[COLOR lime]HD+[/COLOR]").replace("HEVC", "[COLOR lime]+[/COLOR]")
	#					AddDir( "[B]" + jq1['name'].replace('//','\\').encode().decode('unicode-escape') + "[/B]", jq1['id'] , 109, jq1['logo'], jq1['logo'], isFolder=False, IsPlayable=True, info="[COLOR][/COLOR]")
	#				except:
	#					pass
	#except:
	#	AddDir('[B]Canais offline, tente novamente mais tarde...[/B]', '', 50, 'https://uploaddeimagens.com.br/images/004/090/947/full/pngwing.com.png', 'https://uploaddeimagens.com.br/images/004/090/947/full/pngwing.com.png', isFolder=False, info='[B][/B]')'''
def TVCB4PLAY(): #109
	PlayFFmpeg(name, url+'|User-Agent=Rediptv Plus 2.0.17', iconimage)
	#try:
	#	header = 'UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS41Mg=='
	#	header = base64.b64decode(header).decode('utf-8')
	#	log = base64.b64decode('aHR0cHM6Ly9hbmRyb2lkLnJlZGlwdHYyLmNvbS9sb2dpbi5waHA/dXNlcmNvZGU9MDAwMDAwMDAwMCZwaWQ9MSZtYWM9Qjg5QkVEMDI0OTU1JnNuPTIzNDdiOGRjZmIyMiZjdXN0b21lcj1SRUQzNjAmbGFuZz1lbmcmY3M9YW1sb2dpYyZjaGVjaz0yODkxMTY2NTgz').decode('utf-8')
	#	login = requests.get(log, headers={'User-Agent':header}).text
	#	link = 'aHR0cHM6Ly9hbmRyb2lkLnJlZGlwdHYyLmNvbS9jaC5waHA/dXNlcmNvZGU9ODA3MDM5NDcwOSZwaWQ9MSZtYWM9Qjg5QkVEMDI0OTU1JnNuPTIzNDdiOGRjZmIyNiZjdXN0b21lcj1SRUQmbGFuZz1lbmcmY3M9YW1sb2dpYyZjaGVjaz0yNzkxNzIzMTU0'
	#	link = base64.b64decode(link).decode('utf-8')
	#	headerp = 'fFVzZXItQWdlbnQ9UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS41Mg=='
	#	headerp = base64.b64decode(headerp).decode('utf-8')
	#	t = requests.get(link, verify=False, headers={'User-Agent': header,'Connection':'Keep-Alive','Accept-Encoding':'gzip'})
	#	jq_ = json.loads(t.text.replace("\\","//"))
	#	for jq1 in jq_:
	#		if jq1['id'] == url:
	#			EPG = OpenURL('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/EPG2')
	#			contents = re.compile(jq1['name']+'.+ = "(.+?)"').findall(EPG)
	#			try:
	#				url2 = OpenURL(contents[0]).replace('\n','').replace('\t','').replace('<h2>','"/>').replace('/><img','').replace('synopsis">','title">').replace('.</p>','</span')
	#				url4 = re.compile('<li class=("ongoing">.+)').findall(url2)
	#				url4x = re.compile('restantes(.+)').findall(url2)
	#				title = re.compile('"ongoing">.+?class="time">.+?<.+?\/>(.+?)<\/h2.+?title">.+?<.+?progress-container">.+?<div').findall(url4[0])
	#				program = re.compile('"ongoing">.+?class="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?)<.+?progress-(container">.+?<div).+?(:.+?)"').findall(url4[0])
	#				program2 = re.compile('lass="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?<\/span)').findall(url4x[0])
	#				ir1 = str(program).replace('<div','').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','[COLOR red]AO VIVO:[/COLOR] ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace("container - >","Tempo:").replace('</span>','').replace(' - Tempo:','\n[COLOR yellow]TEMPO:[/COLOR] ').replace('- :',' : ').replace('%',"% concluído\n\n").replace("'Tempo:",'\n[COLOR yellow]TEMPO:[/COLOR] ')
	#				ir2 = str(program2).replace('</span','\n\n').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','Horário: ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace('><p class= - title - >','').replace(']','').replace('- )','').replace("-,",'')
	#				title = " - "+title[0]
	#				url5 = "[B]"+'\n\n\n'+ir1+"[/B]" + ir2
	#				url6 = url5
	#				PlayFFmpeg(name + title, jq1['link'].replace('////','//').replace('///','/')+headerp, iconimage, url6)
	#			except IndexError as url2:
	#				pass
	#				PlayFFmpeg(name, jq1['link'].replace('////','//').replace('///','/')+headerp, iconimage,"")
	#except:
	#	pass

def FilmesRED(): #87
	header = 'UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS40OQ=='
	header = base64.b64decode(header).decode('utf-8')
	header = {'User-Agent': header,'Connection':'Keep-Alive','Accept-Encoding':'gzip'}
	b64 = 'aHR0cHM6Ly9hbmRyb2lkLnJlZGlwdHYyLmNvbS92b2QucGhwP3VzZXJjb2RlPTgwNzAzOTQ3MDkmcGlkPTEmbWFjPUI4OUJFRDAyNDk1NSZzbj0yMzQ3YjhkY2ZiMjYmcGFnZT1saXN0Jmxhbmc9ZW5nJmNzPWFtbG9naWMmY2hlY2s9MTQzOTkyODU2Mg=='
	b64 = base64.b64decode(b64).decode('utf-8')
	link = requests.get(b64,verify=False, headers=header).text
	jq = json.loads(link)
	for jq1 in jq:
		if jq1['language'] == "Brasil" or jq1['language'] == "Brazilian":
			AddDir( "[B]" + jq1['name'].replace('//','\\').encode().decode('unicode-escape') + "[/B]", jq1['id'] , 88, jq1['picture'], jq1['picture'], isFolder=True, IsPlayable=False, info="[COLOR][/COLOR]")
def FilmesRED2(): #88
	header = 'UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS40OQ=='
	header = base64.b64decode(header).decode('utf-8')
	header = {'User-Agent': header,'Connection':'Keep-Alive','Accept-Encoding':'gzip'}
	headerp = 'fFVzZXItQWdlbnQ9UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS40OQ=='
	headerp = base64.b64decode(headerp).decode('utf-8')
	b64 = 'aHR0cHM6Ly9hbmRyb2lkLnJlZGlwdHYyLmNvbS92b2QucGhwP3VzZXJjb2RlPTgwNzAzOTQ3MDkmcGlkPTEmbWFjPUI4OUJFRDAyNDk1NSZzbj0yMzQ3YjhkY2ZiMjYmcGFnZT1kZXRhaWwmaXRlbWlkPQ=='
	b64 = base64.b64decode(b64).decode('utf-8')
	b65 = 'Jmxhbmc9ZW5nJmNzPWFtbG9naWMmY2hlY2s9MTQzOTkyODU2Mg=='
	b65 = base64.b64decode(b65).decode('utf-8')
	link = requests.get(b64+url+b65,verify=False, headers=header).text
	jq = json.loads(link)
	for jq1 in jq:
		AddDir( "[COLOR springgreen][B]Dublado[/B][/COLOR]", jq1['videoLink']+headerp, 212, jq1['picture'], jq1['picture'], isFolder=False, IsPlayable=True, info="[B]"+jq1['description']+"[/B]")

def SeriesRED(): #89
	header = 'UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS40OQ=='
	header = base64.b64decode(header).decode('utf-8')
	header = {'User-Agent': header,'Connection':'Keep-Alive','Accept-Encoding':'gzip'}
	b64 = 'aHR0cHM6Ly9hbmRyb2lkLnJlZGlwdHYyLmNvbS90dnNlcmllcy5waHA/dXNlcmNvZGU9ODA3MDM5NDcwOSZwaWQ9MSZtYWM9Qjg5QkVEMDI0OTU1JnNuPTIzNDdiOGRjZmIyNiZwYWdlPWxpc3QmbGFuZz1lbmcmY3M9YW1sb2dpYyZjaGVjaz0xMzM1MDI4NDAy'
	b64 = base64.b64decode(b64).decode('utf-8')
	link = requests.get(b64,verify=False, headers=header).text
	jq = json.loads(link)
	for jq1 in jq:
		if jq1['language'] == "Brasil" or jq1['language'] == "Brazilian":
			AddDir( "[B]" + jq1['name'].replace('//','\\').encode().decode('unicode-escape') + "[/B]", jq1['id'] , 97, jq1['picture'], jq1['picture'], isFolder=True, IsPlayable=False, info="[COLOR][/COLOR]")
def SeriesRED2(): #97
	header = 'UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS40OQ=='
	header = base64.b64decode(header).decode('utf-8')
	header = {'User-Agent': header,'Connection':'Keep-Alive','Accept-Encoding':'gzip'}
	headerp = 'fFVzZXItQWdlbnQ9UkVETElORUNMSUVOVCBSRUQzNjAgVjAuMS40OQ=='
	headerp = base64.b64decode(headerp).decode('utf-8')
	b64 = 'aHR0cHM6Ly9hbmRyb2lkLnJuZXR0dnVzLmNvbS90dnNlcmllcy5waHA/dXNlcmNvZGU9ODA3MDM5NDcwOSZwaWQ9MSZtYWM9Qjg5QkVEMDI0OTU1JnNuPTIzNDdiOGRjZmIyNiZwYWdlPWVwaXNvZGUmaXRlbWlkPQ=='
	b64 = base64.b64decode(b64).decode('utf-8')
	b65 = 'Jmxhbmc9ZW5nJmNzPWFtbG9naWMmY2hlY2s9MTMzNTAyODQwMg=='
	b65 = base64.b64decode(b65).decode('utf-8')
	link = requests.get(b64+url+b65,verify=False, headers=header).text
	jq = json.loads(link)
	for jq1 in jq:
		if re.search(r'x1\b', jq1['season']+"x"+jq1['number']):
			AddDir( "[B]"+str(jq1['season'])+'ª - '+'Temporada'+"[/B]", '', 212, iconimage, iconimage, isFolder=False, IsPlayable=False, info="[B][/B]")
			playlist = re.compile("(\w+)', 'season': '("+str(jq1['season'])+")'.+?(link'.+?'.+?)'").findall(str(jq))
			AddDir( "[B]Playlist - ("+jq1['season']+"ª Temporada)[/B]", str(playlist), 545, iconimage, iconimage, isFolder=False, IsPlayable=True, info="[B][/B]")
		AddDir( 'Episódio '+str(jq1['season'])+"x"+str(jq1['number']), str(jq1['link'])+headerp, 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info="[B][/B]")
        
def PlayTVCB2(): #212
	PlayUrl(name, url, iconimage, info, "", metah)
def PlayTVCB3(): #214
	PlayUrl(name, url, iconimage, info, "", metah)       
def RadioTV(x): #106
	AddDir("[COLOR white][B]RÁDIO YOUTUBE[/B][/COLOR]" , "", 107, "https://www.youtube.com/img/desktop/yt_1200.png", "https://www.youtube.com/img/desktop/yt_1200.png", info='\xa0')
	link = OpenURL("https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/Radios-tv").replace("\n","").replace('\r','')
	m = re.compile('<title>(.+?)<\/title><link>(.+?)<\/link><thumbnail>(.+?)<\/thumbnail>').findall(link)
	for name2, url2, img2 in m:
		if 'live03' in url2:
			AddDir(name2, url2, 544,img2, img2, isFolder=False, IsPlayable=True, info='Necessita de InputStream Adaptive')
		else:
			AddDir(name2, url2, 214,img2, img2, isFolder=False, IsPlayable=True, info='\xa0')
def TVCB5(): #111
    url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/TV4', headers={'Accept-Encoding': 'deflate'}).text
    url1x = re.compile("<title>(.+?)<.+\s.link>(.+?)<.+\s.thumbnail>(.+?)<").findall(url1)
    jq = sorted(url1x, key=lambda url1x: url1x)
    for name2, url2, img2 in jq:
        #if "AMC" in name2 or "BAND NEWS" in name2 or "COMBATE" in name2 or "DISCOVERY CHANNEL" in name2 or "DISCOVERY CIVILIZATION" in name2 or "DISCOVERY SCIENCE" in name2 or "DISCOVERY THEATER" in name2 or "ESPN EXTRA" in name2 or "ESPN[/COLOR]" in name2 or "FOX SPORTS" in name2 or "H2" in name2 or "MTV" in name2 or "MULTISHOW" in name2 or "NICK" in name2 or "PARAMOUNT" in name2 or "RECORD NEWS" in name2 or "SBT" in name2 or "STUDIO UNIVERSAL" in name2 or "TCM" in name2 or "TNT[/COLOR]" in name2 or "TOONCAST" in name2: False
        #else:
        AddDir(name2.replace('gold','springgreen'), url2, 112,img2, img2, isFolder=False, IsPlayable=True, background=name2, info='\xa0')
        
def TVCB5PLAY(): #112
    try:
        EPG = OpenURL('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/EPG3')
        contents = re.compile(name.replace('[B][COLOR white]','').replace('[/COLOR] [COLOR springgreen]HD[/COLOR][/B]','')+'.+ = "(.+?)"').findall(EPG)
        url2 = OpenURL(contents[0]).replace('\n','').replace('\t','').replace('<h2>','"/>').replace('/><img','').replace('synopsis">','title">').replace('.</p>','</span')
        url4 = re.compile('<li class=("ongoing">.+)').findall(url2)
        url4x = re.compile('restantes(.+)').findall(url2)
        title = re.compile('"ongoing">.+?class="time">.+?<.+?\/>(.+?)<\/h2.+?title">.+?<.+?progress-container">.+?<div').findall(url4[0])
        program = re.compile('"ongoing">.+?class="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?)<.+?progress-(container">.+?<div).+?(:.+?)"').findall(url4[0])
        program2 = re.compile('lass="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?<\/span)').findall(url4x[0])
        ir1 = str(program).replace('<div','').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','[COLOR red]AO VIVO:[/COLOR] ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace("container - >","Tempo:").replace('</span>','').replace(' - Tempo:','\n[COLOR yellow]TEMPO:[/COLOR] ').replace('- :',' : ').replace('%',"% concluído\n\n").replace("'Tempo:",'\n[COLOR yellow]TEMPO:[/COLOR] ')
        ir2 = str(program2).replace('</span','\n\n').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','Horário: ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace('><p class= - title - >','').replace(']','').replace('- )','').replace("-,",'')
        title = " - "+title[0]
        url5 = "[B]"+'\n\n\n'+ir1+"[/B]" + ir2
        url6 = url5
    except:
        pass
    base = '\x61\x48\x52\x30\x63\x48\x4d\x36\x4c\x79\x39\x6e\x61\x58\x4e\x30\x4c\x6d\x64\x70\x64\x47\x68\x31\x59\x6e\x56\x7a\x5a\x58\x4a\x6a\x62\x32\x35\x30\x5a\x57\x35\x30\x4c\x6d\x4e\x76\x62\x53\x39\x7a\x61\x33\x6c\x79\x61\x58\x4e\x72\x4c\x7a\x51\x77\x4e\x47\x4d\x34\x4f\x54\x56\x6a\x4f\x54\x6c\x6d\x59\x54\x46\x6d\x5a\x6d\x4e\x6b\x59\x7a\x51\x30\x5a\x44\x41\x78\x4e\x32\x55\x35\x4e\x54\x51\x33\x59\x6d\x52\x68\x4c\x33\x4a\x68\x64\x79\x39\x75\x5a\x58\x64\x66\x65\x57\x56\x68\x63\x6a\x45\x75\x61\x6e\x4e\x76\x62\x67\x3d\x3d'
    base = base64.b64decode(base).decode('utf-8')
    base = requests.get(base).text
    channel = re.compile("'" + url + "': '(.+?)'").findall(base)[0]
    key = '\x62\x72\x61\x7a\x75\x63\x61\x6e\x65\x77\x79\x65\x61\x72\x32\x30\x32\x31'
    enc = str(channel)
    dec = []
    enc = base64.urlsafe_b64decode(enc).decode()
    for i in range(len(enc)):
        key_c = key[i % len(key)]
        dec_c = chr((256 + ord(enc[i]) - ord(key_c)) % 256)
        dec.append(dec_c)
    end = "".join(dec)
    try:
        #PlayUrl(name+title, end, iconimage, url6)
        PlayFFmpeg(name+title, end, iconimage, url6)
    except:
        #PlayUrl(name, end, iconimage, name)
        PlayFFmpeg(name, end, iconimage, name)
        
'''def POY1(): #113
    #url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/donttv-channel.txt').text
    url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/poyra-channel.txt').text
    url1x = re.compile("Nome=(.+?), imagem=(.+?), link=(.+)").findall(url1)
    for name2, img2, url2 in url1x:
        AddDir("[B]"+name2+"[/B]", url2, 114,img2, img2, isFolder=False, IsPlayable=True, background=name2, info='\xa0')
        
def POY1PLAY(): #114
    #mac = "MDA6MUE6Nzk6QTQ6OTY6NUQ=" #poyra
    #mac = "MDA6MUE6Nzk6RDM6OUI6NEY=" #poyra
    #mac = "MDA6MUE6Nzk6QUI6QUI6QTg=" #Dont
    macportal = re.compile('(.+?)#(.+?)%(.+)').findall(background)
    #mac = "MDA6MUE6Nzk6QTE6NzA6NjU=" #netseeny
    mac = macportal[0][0] #netseeny
    mac = base64.b64decode(mac).decode('utf-8')
    #portal = "aHR0cDovL3BveXJhejY3LmNvbTo4MDgwL2Mv" #poyra
    #portal = "aHR0cDovL2RvbnQudC12LmlvLw==" #Dont
    #portal = "aHR0cDovL25ldHNlZW55Lm1heGhkLnZpcDo4MDAwLw==" #netseeny
    portal = macportal[0][1] #netseeny
    portal = base64.b64decode(portal).decode('utf-8')

    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0","cookie": "mac=" + mac + "; stb_lang=es; timezone=Europe/spain"}
    x = portal + 'portal.php?type=stb&action=handshake&JsHttpRequest=1-xml'
    source = requests.get(x, headers=headers).content
    token = re.findall('token":"(.*?)"', str(source))[0]
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0","cookie": "mac=" + mac + "; stb_lang=es; timezone=Europe/spain", "Authorization": "Bearer " + token}
    x = portal + 'portal.php?type=stb&action=get_profile&JsHttpRequest=1-xml'
    source = requests.get(x, headers=headers).content
    payload = {"login": '', "password": '', "stb_type": ''}
    x = portal + 'portal.php?type=itv&action=get_genres&JsHttpRequest=1-xml'
    source = requests.post(x, headers=headers, data=str(payload)).text
    #brazil = '41' #Dont
    #brazil = '2320' #netseeny
    brazil = macportal[0][2]
    page = portal + 'portal.php?type=itv&action=get_ordered_list&genre='+brazil+'&force_ch_link_check=&fav=0&sortby=number&hd=0&p=1&JsHttpRequest=1-xml'
    source = requests.get(page, headers=headers).content.decode('ascii', 'ignore')

    play = portal + 'portal.php?type=itv&action=create_link&cmd=http://localhost/ch/' + url + '_&series=&forced_storage=undefined&disable_ad=0&download=0&JsHttpRequest=1-xml'
    source = requests.get(play, headers=headers).text
    fuente = re.findall('"cmd":"ffmpeg (.*?)"', source)[0]
    player = fuente.replace("\\", "")
    PlayFFmpeg(name, player, iconimage, '')'''
    
def POY1(): #113
    url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/TouroBox').text
    url1x = re.compile('logo="(.+?)".+?,(.+)\s(.+)').findall(url1)
    for img2, name2,url2 in url1x:
        url2 = url2.replace('#','Tourobox1-VTpgsnOoHj/28QmTPho90')
        AddDir("[B]"+name2+"[/B]", url2, 114,img2, img2, isFolder=False, IsPlayable=True, background=name2, info='\xa0')
        
def POY1PLAY(): #114
    PlayFFmpeg(name, url+"|User-Agent=20216c020ec2834c-1.1.21&Icy-MetaData=1&Accept-Encoding=identity", iconimage, '')
    
def FOX1(): #115
    url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/fox-channels.txt').text
    url1x = re.compile("Nome=(.+?), imagem=(.+?), link=(.+)").findall(url1)
    for name2, img2, url2 in url1x:
        if 'NET#' in name2:
            net = re.compile('NET="(.+?)"').findall(url1)
            AddDir("[B]"+name2.replace('NET#','')+"[/B]", url2, 114,img2, img2, isFolder=False, IsPlayable=True, background=net[0], info='\xa0')
        elif 'DONT#' in name2:
            dont = re.compile('DONT="(.+?)"').findall(url1)
            AddDir("[B]"+name2.replace('DONT#','')+"[/B]", url2, 114,img2, img2, isFolder=False, IsPlayable=True, background=dont[0], info='\xa0')
        else:
            fox = re.compile('FOX="(.+?)"').findall(url1)
            AddDir("[B]"+name2+"[/B]", url2, 116,img2, img2, isFolder=False, IsPlayable=True, background=fox[0], info='\xa0')
        
def FOXPLAY(): #116
    mac = background
    mac = base64.b64decode(mac).decode('utf-8')
    portal = "aHR0cDovL2ZveHgtdHYuY29tOjk2MDAvYy8="
    portal = base64.b64decode(portal).decode('utf-8')

    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0","cookie": "mac=" + mac + "; stb_lang=es; timezone=Europe/spain"}
    x = portal + 'portal.php?type=stb&action=handshake&JsHttpRequest=1-xml'
    source = requests.get(x, headers=headers).content
    token = re.findall('token":"(.*?)"', str(source))[0]
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0","cookie": "mac=" + mac + "; stb_lang=es; timezone=Europe/spain", "Authorization": "Bearer " + token}
    x = portal + 'portal.php?type=stb&action=get_profile&JsHttpRequest=1-xml'
    source = requests.get(x, headers=headers).content
    payload = {"login": '', "password": '', "stb_type": ''}
    x = portal + 'portal.php?type=itv&action=get_genres&JsHttpRequest=1-xml'
    source = requests.post(x, headers=headers, data=str(payload)).text
    brazil = '174'
    page = portal + 'portal.php?type=itv&action=get_ordered_list&genre='+brazil+'&force_ch_link_check=&fav=0&sortby=number&hd=0&p=1&JsHttpRequest=1-xml'
    source = requests.get(page, headers=headers).content.decode('ascii', 'ignore')

    play = portal + 'portal.php?type=itv&action=create_link&cmd=http://localhost/ch/' + url + '_&series=&forced_storage=undefined&disable_ad=0&download=0&JsHttpRequest=1-xml'
    source = requests.get(play, headers=headers).text
    fuente = re.findall('"cmd":"ffmpeg (.*?)"', source)[0]
    player = fuente.replace("\\", "")
    PlayFFmpeg(name, player+'|User-Agent=Lavf53,32.100', iconimage, '')
        
'''def TVCB5(): #111
    url1 = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/rede.txt').text
    url1x = re.compile("img = '(.+?)'.Nome = '(.+?)'.Canal = '(.+?)'").findall(url1)
    for img2, name2, url2 in url1x:
        img2 = 'https://redecanaistv.net'+img2
        AddDir("[B][COLOR white]"+name2+"[/COLOR][/B]", 'https://'+url2, 112,img2, img2, isFolder=False, IsPlayable=True, background=name2, info='\xa0')
def TVCB5PLAY(): #112
    urlplax = 'https://sinalpublico.com/player3/ch.php?canal='+url.replace('https://','')
    urlplax1 = OpenURL(urlplax,headers={'referer': urlplax}).replace("\n","").replace('\r','')
    #arquivo = open(cachefolder + "Comandoto.txt", "w+")
    #arquivo.write(urlplax1)
    #arquivo.close()
    base = re.compile('= \[(.+?)]').findall(urlplax1)
    args = re.compile('\) - (.+?)\);').findall(urlplax1)
    listar = re.compile('"(.+?)"').findall(base[0])
    base = ''
    for value in listar:
        novo = base64.b64decode(value).decode('utf-8')
        unpack = re.sub('\D', '', novo)
        unpack = chr(int(unpack) - int(args[0]))
        base += unpack
    urlplay = re.compile('source.+?"(.+?)"').findall(base)[0]
    EPG = requests.get('https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/EPG-redecanais.txt').text
    contents = re.compile(background+' = "(.+?)"').findall(EPG)
    try:
        url2 = requests.get(contents[0]).text.replace('\n','').replace('\t','').replace('<h2>','"/>').replace('/><img','').replace('synopsis">','title">').replace('.</p>','</span')
        url4 = re.compile('<li class=("ongoing">.+)').findall(url2)
        url4x = re.compile('restantes(.+)').findall(url2)
        title = re.compile('"ongoing">.+?class="time">.+?<.+?\/>(.+?)<\/h2.+?title">.+?<.+?progress-container">.+?<div').findall(url4[0])
        program = re.compile('"ongoing">.+?class="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?)<.+?progress-(container">.+?<div).+?(:.+?)"').findall(url4[0])
        program2 = re.compile('lass="(time">.+?)<.+?\/>(.+?<\/h2).+?title">(.+?<\/span)').findall(url4x[0])
        ir1 = str(program).replace('<div','').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','[COLOR red]AO VIVO:[/COLOR] ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace("container - >","Tempo:").replace('</span>','').replace(' - Tempo:','\n[COLOR yellow]TEMPO:[/COLOR] ').replace('- :',' : ').replace('%',"% concluído\n\n").replace("'Tempo:",'\n[COLOR yellow]TEMPO:[/COLOR] ')
        ir2 = str(program2).replace('</span','\n\n').replace("')]","").replace("('","").replace('"), ',"").replace("'), ","").replace("', '"," - ").replace("[","").replace("', ","").replace('"',' - ').replace('time - >','Horário: ').replace("</h2"," | Gênero/EP").replace(" <span class='rating'>"," IMDB: ").replace("<span class='rating good'>"," IMDB: ").replace('><p class= - title - >','').replace(']','').replace('- )','').replace("-,",'')
        title = " - "+title[0]
        url5 = "[B]"+'\n\n\n'+ir1+"[/B]" + ir2
        url6 = url5
        PlayUrl(name+title, urlplay+"|Referer="+urlplax+"&User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0", iconimage, url6)
    except IndexError as url2:
        pass
        PlayUrl(name, urlplay+"|Referer="+urlplax+"&User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0", iconimage, info)'''

# ----------------- Inicio Go Filmes
def GenerosGO(): #219
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaGO1)
	if d != -1:
		global Cat
		Addon.setSetting("CatGO", str(d) )
		Cat = d
		Addon.setSetting("cPageGOf", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosFl(): #230
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaFl1)
	if d != -1:
		global Cat
		Addon.setSetting("CatFl", str(d) )
		Cat = d
		Addon.setSetting("cPageFlf", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosQUE1(): #231
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaQUE11)
	if d != -1:
		global Cat
		Addon.setSetting("CatQ1", str(d) )
		Cat = d
		Addon.setSetting("cPageQlf", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosBIZ(): #232
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaBIZ11)
	if d != -1:
		global Cat
		Addon.setSetting("CatBB", str(d) )
		Cat = d
		Addon.setSetting("cPageBIZ", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosMEG(): #233
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaMEG11)
	if d != -1:
		global Cat
		Addon.setSetting("CatMG", str(d) )
		Cat = d
		Addon.setSetting("cPageMEG", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosFHD(): #234
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaFHD11)
	if d != -1:
		global Cat
		Addon.setSetting("CatHD", str(d) )
		Cat = d
		Addon.setSetting("cPageFHD", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosVZ(): #235
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaVZ11)
	if d != -1:
		global Cat
		Addon.setSetting("CatVZ", str(d) )
		Cat = d
		Addon.setSetting("cPageVZ", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosAS(): #236
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaAS11)
	if d != -1:
		global Cat
		Addon.setSetting("CatAS", str(d) )
		Cat = d
		Addon.setSetting("cPageAS", "0" )
		xbmc.executebuiltin("Container.Refresh()")
def GenerosMX(): #237
	d = xbmcgui.Dialog().select("Escolha o Genero", ClistaMX11)
	if d != -1:
		global Cat
		Addon.setSetting("CatMX", str(d) )
		Cat = d
		Addon.setSetting("cPageMX", "0" )
		xbmc.executebuiltin("Container.Refresh()")                        
def ListGO(): #210 Topflix Dublado --------------------------------------------
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaFl1[int(CatFl)] +"[/COLOR]", "url" ,230 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageFlf) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageFlf) ) +"][/B][/COLOR]", cPageFlf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageFlf")
		l= int(cPageFlf)*4
		for x in range(0, 4):
			l +=1
			link = OpenURL("https://topflix.tv/lancamentos/"+ str(l))
			match = re.compile("'(.{5,30}[^\']jpg).{4,41}<a href=\'([^\']+).'>([^\']+)<\/span>").findall(link.replace('\n','').replace('\r',''))
			if ClistaFl0[int(CatFl)] != "0":
				link = OpenURL("https://topflix.tv/"+ClistaFl0[int(CatFl)]+"/"+ str(l))
				match = re.compile("'(.{5,30}[^\']jpg).{4,41}<a href=\'([^\']+).{4,300}'>([^\']+)<\/a").findall(link.replace('\n','').replace('\r',''))
			if match:
				for img2,url2,name2, in match:
					img2 = img2.replace('170255',"330490")
					url2 = re.sub('^\.', RC4, url2 )
					if name2!="Close":
						name2 = name2.replace("</font>","").replace("<span>","- ").replace("</span>","")
					if "series" in url2: False
					else:                        
						AddDir(name2 ,RC4 + url2, 211, "https://topflix.vc/" +img2, RC4 + img2, info='\xa0', isFolder=True, IsPlayable=True)
					p += 1
		if p >= 96:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageFlf) + 2) +"][/B][/COLOR]", cPageFlf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageFlf")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def ListGOL(): #310 Lançamentos ---------------------------------------
	try:
		p= 1
		if int(cPageFlf) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageFlf) ) +"][/B][/COLOR]", cPageFlf , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageFlf")
		l= int(cPageFlf)*7
		for x in range(0,7):
			l +=1
			link = OpenURL("https://topflix.tv/lancamentos/"+ str(l))
			match = re.compile("'(.{5,30}[^\']jpg).{4,41}<a href=\'([^\']+).'>([^\']+)<\/span>").findall(link.replace('\n','').replace('\r',''))
			if match:
				for img2,url2,name2, in match:
					img2 = img2.replace('170255',"330490")
					url2 = re.sub('^\.', RC4, url2 )
					if name2!="Close":
						name2 = name2.replace("</font>","").replace("<span>","- ").replace("</span>","")
					if "series" in url2: False
					else:                        
						AddDir(name2 ,RC4 + url2, 211, "https://topflix.vc/" +img2, RC4 + img2, info='\xa0', isFolder=True, IsPlayable=True)
					p += 1
		if p >= 72:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageFlf) + 2) +"][/B][/COLOR]", cPageFlf , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageFlf")
	except:
		AddDir("Server error, tente novamente em alguns minutos" , "", 0, "", "", 0)
def ListTop(): #211
	trailer = requests.get("https://www.youtube.com/results?search_query="+ name.replace(" ","+")+"Trailer+Legendado")
	trailer2 = re.compile('"url":".watch.+?=(.+?)"').findall(trailer.text)
	AddDir("[COLOR yellow]Trailer YouTube[/COLOR]", "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid="+trailer2[0], 212, iconimage, iconimage, isFolder=False, IsPlayable=True, info='Trailer do filme '+name)
	try:	
		link = OpenURL(url).replace('\n','').replace('\r','').replace(' ','%20')
		arquivo = open(cachefolder + "topflix.txt", "w+")
		arquivo.write(link)
		arquivo.close()
		#m = re.compile("globalUri='([^\']+)'").findall(link)
		#m2 = re.compile('idJs%20=%20"([^\"]+";var%20_ano)').findall(link)
		m3 = re.compile('ChangeSource."([^\"]+mp4)",%20"').findall(link)
		#m4 = re.compile('data%20=%20"([^\"]+";var%20lnc)%20=').findall(link)
		#m5 = re.compile('ctm%20=%20"([^\"]+";_data)=').findall(link)
		#m1 = re.compile("globalUri='([^\']+)'").findall(link)
		#m12 = re.compile('idJs%20=%20"([^\"]+";var%20_ano)').findall(link)
		m13 = re.compile('ChangeSource."([^\"]+mp4)",%20"5').findall(link)
		#m14 = re.compile('data%20=%20"([^\"]+";var%20lnc)%20=').findall(link)
		#m15 = re.compile('ctm%20=%20"([^\"]+";_data)=').findall(link)
		#lista = re.compile("(.+)").findall(m[0]+m2[0]+m3[0]+m4[0]+m5[0])
		lista = re.compile("(.+)").findall(m3[0])
		#lista2 = re.compile("(.+)").findall(m1[0]+m12[0]+m13[0]+m14[0]+m15[0])
		lista2 = re.compile("(.+)").findall(m13[0])
		info2 = re.compile('12"><p>(.+?)<\/p>').findall(link)
		info2= info2[0].replace("%20"," ")
		lista = "https://cdnx9.ntcdn.stream/prop/httpdelivery"+lista[0]+"#Dublado#"#.replace('.php',"/").replace('";var%20_ano',"&url=").replace('",%20"',"&mediaType=filme&mediaName=").replace('";var%20lnc',"&idfy=3&lnc=s&vid=").replace('";_data',"&out=null&webv=nao&cdn=cdn11#Dublado#").replace('\n','')
		lista2= "https://cdnx9.ntcdn.stream/prop/httpdelivery"+lista2[0]+"#Legendado#"#.replace('.php',"/").replace('";var%20_ano',"&url=").replace('",%20"5',"&mediaType=filme&mediaName=").replace('";var%20lnc',"&idfy=5&lnc=s&vid=").replace('";_data',"&out=null&webv=nao&cdn=cdn11#Legendado#").replace('\n','')
		lista3 = lista + lista2
		arquivo = open(cachefolder +"lista", "w+")
		arquivo.write(lista3)
		arquivo.close()
		AddDir(name + "[COLOR blue] - Dublado e Legendado[/COLOR]", "", 213, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info2, background=url)
	except IndexError as lista2:
			pass
	try:     
			info2 = re.compile('12"><p>(.+?)<\/p>').findall(link)
			info2= info2[0].replace("%20"," ")
			for url2 in lista:
				name2 = re.compile('(\w|-|leg+.+)p4').findall(url2)
				name2= name2[0].replace("m", "[COLOR blue] - Dublado[/COLOR]")
				url2= url2.replace('.php',"/").replace('";var%20_ano',"&url=").replace('",%20"',"&mediaType=filme&mediaName=").replace('";var%20lnc',"&idfy=3&lnc=s&vid=").replace('";_data',"&out=null&webv=nao&cdn=cdn11#Dublado#").replace('\n','')
				arquivo = open(cachefolder +"lista", "w+")
				arquivo.write(url2)
				arquivo.close()
				AddDir(name + name2, "", 213, iconimage, iconimage, isFolder=False, IsPlayable=True, info=info2, background=url)
	except:
			pass     
def ListPlay(): #213 play =====================================================================
	try:
			arquivo = open(cachefolder + 'lista', 'r')
			url3 = arquivo.read()
			m2 = re.compile('(https.+?)#(.+?)#').findall(url3)
			listar=[]
			listal=[]
			for link, res in m2:
				listal.append(link)
				listar.append(res.replace("Dublado","[COLOR blue][B]Dublado[/B][/COLOR]").replace("Legendado","[COLOR red][B]Legendado[/B][/COLOR]"))
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione o idioma", listar)
			if d!= -1:
				url2 = listal[d]
				link2 = requests.get(listal[d])
				#url2x = re.compile("var mp4Id = '(https:.+?.mp4)").findall(link2.text)
				#url2x = url2x[0]
				legenda = re.compile('(filmes\/subtitles.+?vtt)').findall(link2.text)
				#global background
				#background=background+";;;"+name+";;;MM"
				if legenda:
					legenda = "https://topflix.tv/" + legenda[0]
					if not "http" in legenda:
						legenda = "https://sub.streamservice.online/subdata/" + legenda
					PlayUrl(name, url2+"|Referer=https://topflix.tv/&Connection=Keep-Alive&Accept-Language=en&User-Agent=Mozilla%2F5.0+%28compatible%3B+MSIE+10.6%3B+Windows+NT+6.1%3B+Trident%2F6.0%29", iconimage, info, sub=legenda)
				else:
					PlayUrl(name, url2+"|Referer=https://topflix.tv/&Connection=Keep-Alive&Accept-Language=en&User-Agent=Mozilla%2F5.0+%28compatible%3B+MSIE+10.6%3B+Windows+NT+6.1%3B+Trident%2F6.0%29", iconimage, info)
			else:
				sys.exit()
	except:
		xbmcgui.Dialog().ok('Play XD', 'Video não encontrado')
		sys.exit()           
# ----------------- Inicio Superflix
def ListMovieSF(): #411:
	AddDir("[COLOR yellow][B][Genero dos Filmes]:[/B] " + ClistaMEG11[int(CatMG)] +"[/COLOR]", "url" ,233 ,"https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", "https://lh5.ggpht.com/gv992ET6R_InCoMXXwIbdRLJczqOHFfLxIeY-bN2nFq0r8MDe-y-cF2aWq6Qy9P_K-4=w300", isFolder=False, info='\xa0')
	try:
		p= 1
		if int(cPageMEG) > 0:
			AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(cPageMEG) ) +"][/B][/COLOR]", cPageMEG , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageMEG")
		l= int(cPageMEG)*3
		for x in range(0, 3):
			l +=1
			movie = "https://www.superflix.net/categoria/"+ClistaMEG10[int(CatMG)]+"/page/"+str(l)+"/"
			link = OpenURL(movie.replace("page/1/",""))
			match = re.compile('"> <art.+?title">([^\"].+?)<.+?src="([^\"].+?)".+?year">([^\"].+?)<.+?sm.+? (.+?)<.+?href="([^\"].+?)"').findall(link.replace('\n','').replace('\r',''))
			if match:
				for name2, img2, year2, tvmovie, url2 in match:
					img2 = img2.replace("w185", 'original').replace("https:", '').replace("w220_and_h330_face", 'original').replace("-185x278", "")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					if "Série" in tvmovie: False
					else:
						AddDir(name2+" ("+year2+")", url2, 405, "http:"+img2, "http:"+img2,isFolder=True,IsPlayable=True, info='\xa0')
					p += 1
		if p >= 33:
			AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(cPageMEG) + 2) +"][/B][/COLOR]", cPageMEG , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageMEG")
	except:
		pass
# -----------------
def PlaySSF(): #405
	i=0
	link = OpenURL(url).replace("</span><span>","").replace("                                ","").replace("SuperFlix-Nacional","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("- Full HD","").replace("- HD 720p","").replace("SuperFlix-Dublado","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("SuperFlix-Legendado","[COLOR red][B]Legendado[/B][/COLOR]").replace("- HD","").replace("- SD","")
	desc = re.compile('(<p>Filme.+?<\/p>|>Assistir.+?<\/p|"><p>.+?<\/p>)').findall(link)
	desc = desc[0].replace("Assistir","").replace(">","").replace("</p","").replace('"',"").replace("<p","").replace("Filme ","").replace("Online","").replace("Dublado","").replace("Legendado","").replace("  "," ").replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”')
	m = re.compile("href='\/\/.+?=(.+?)'").findall(link)
	m2 = re.compile('class="server">(.+?)<').findall(link)
	if m:
		for url2 in m:
			hexd = codecs.decode(url2, "hex_codec").decode('utf-8')
			if "SuperFliX" in m2[i] or "SuperFlix FB" in m2[i] or "OK.RU" in m2[i] or "OpenLoad" in m2[i] or "Mega" in m2[i] or "Ok" in m2[i] or "The Vid" in m2[i] or "Vid.To" in m2[i] or "Alta" in m2[i]: False
			else:
				AddDir(m2[i].replace("</span>",""), hexd.replace("#038;",""), 407, iconimage, iconimage, isFolder=False, IsPlayable=True, info = desc)
			i+=1
def Play2SFS(): #407
		try:         
				url3Play = OpenURL(url)
				url4Play = re.compile('(https.+?")').findall(url3Play)
				url4Play= url4Play[0]
		except IndexError as url4Play:
			sys.exit()
        
		try:

			if 'http' in url4Play:  ###### Ja saquei a do ‰PNG fica suave.
				urlxx = re.compile('x.html.(.+?)"').findall(url4Play)
				urlxx = urlxx[0]
				legenda = re.compile('sub=(.+?srt)').findall(url4Play)
				url1 = re.compile('(id=.+?\w+)').findall(urlxx)
				inver = re.compile('id=(\w+)').findall(urlxx)
				url1 = url1[0].replace("id=", "https://lbsuper.sfplayer.net/playlist/") + "/1590191456752"
				url2 = requests.get(url1)
				url3x = re.compile('x([^\"]\w+)\s(\/.+?m3u8)').findall(url2.text)
				url3x.reverse()
				listar=[]
				listal=[]
				for res, link in url3x:
					listal.append(link)
					listar.append(res.replace("1080","[COLOR springgreen][B]HD[/B][/COLOR]").replace("360","[COLOR crimson][B]SD[/B][/COLOR]").replace("720","[COLOR springgreen][B]HD[/B][/COLOR]").replace("480","[COLOR crimson][B]SD[/B][/COLOR]"))
				if len(listal) <1:
					xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
					sys.exit(int(sys.argv[1]))
				d = xbmcgui.Dialog().select("Selecione a resolução", listar)
				if d!= -1:
					url2x = re.sub(' ', '%20', listal[d] )
					url3 = url2x.replace("/hls/", "https://lbsuper.sfplayer.net/hls/").replace(".m3u8", "")
					url4 = requests.get(url3)
					url4 = url4.text
					inverter = inver[0]
					invertida = ''.join(palavra[::-1] for palavra in inverter.split())
					url7 = "https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=" + invertida + "&url=https"
					server = re.compile('-0.html.msKey=m(\w+)').findall(url4)
                    	#url8 = url4.replace('://', '%3A%2F%2F').replace('/', '%2F').replace('.png', '').replace('?', '%3F').replace('=','%3D').replace('https', url7).replace('lbsuper.sfplayer.net','s'+server[0]+'.sfslave.com')
					url8 = url4.replace('://', '%3A%2F%2F').replace('/', '%2F').replace('.png', '').replace('?', '%3F').replace('=','%3D').replace('https', url7).replace('lbsuper.sfplayer.net','s1.sfslave.com')
					arquivo = open(cachefolder + "movies.m3u8", "w+")
					arquivo.write(url8)
					arquivo.close()
					x1 = randrange(300)
					x = str(x1)
					session = ftplib.FTP('files.000webhost.com','unlikely-terms','gladiston')
					file = open(cachefolder + "movies.m3u8",'rb')
					session.storbinary('STOR /public_html/Cacheflix/movies'+x+'.m3u8', file)
					file.close()                      
					session.quit()
					if legenda:
						for legenda2 in legenda:
							legenda3 = urllib.parse.quote(legenda2)
							legenda4 = "https://sub.sfplayer.net/subdata/" + legenda3
                    	        #try:
							PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info, sub=legenda4)
						else:
							PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info)                                
					else:
						sys.exit()
                        
#            if 'xxxxxxxx' in url4Play:
#                    urlxx = re.compile('tid=(.+?)&"').findall(url4Play)
#                    urlxx = urlxx[0]
#                    inverter1 = urlxx
#                   invertida1 = ''.join(palavra[::-1] for palavra in inverter1.split())
#                   hexd = codecs.decode(invertida1, "hex_codec").decode('utf-8')
#                   legenda = re.compile('sub=(.+?srt)').findall(hexd)
#                   url1 = re.compile('(id=.+?\w+)').findall(hexd)
#                   url1= url1[0].replace("id=","https://lbsuper.sfplayer.net/playlist/") + "/1590191456752"
#                    url2 = OpenURL(url1)
#                    url3 = re.compile('EXTM3U\s.+\s.+\s.+\s(.+?m3u8)').findall(url2)
#                   url3= url3[0].replace("/hls/","https://lbsuper.sfplayer.net/hls/").replace(".m3u8","")
#                    url4 = OpenURL(url3)
#                    url4x = OpenURL(url3)
##                    url6 = re.compile('playlist.(\w+)').findall(url1)
#                    url6 = url6[0]
#                    inverter = url6
#                    invertida = ''.join(palavra[::-1] for palavra in inverter.split())
#                    url7 = "https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container="+invertida+"&url=https"
#                    url8 =url4.replace('://','%3A%2F%2F').replace('/','%2F').replace('.png','').replace('?','%3F').replace('=','%3D').replace('https',url7)
#                    arquivo = open(cachefolder + "movies.m3u8", "w+")
#                    arquivo.write(url8)
#                    arquivo.close()
#                    x1 = randrange(300)
#                    x = str(x1)
#                    session = ftplib.FTP('files.000webhost.com','unlikely-terms','gladiston')
#                    file = open(cachefolder + "movies.m3u8",'rb')
#                    session.storbinary('STOR /public_html/Cacheflix/movies'+x+'.m3u8', file)
#                    file.close()                      
#                    session.quit()
#                    if legenda:
#                        legenda = legenda[0]
#                        #legenda2 = urllib.parse.quote(legenda)
#                        #if not "http" in legenda:
#                        #   legenda3 = "https://sub.sfplayer.net/subdata/"
#                        #    legenda4 = legenda3 + legenda2
#                        PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info, sub=legenda)
#                    else:
#                        PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info)

#            elif 'xxxxxxxxx' in url4Play:
#                    legenda3 = re.compile('vl(.+?)"').findall(url4Play)
#                    url12 = re.compile('net\/(.+?\w+.\w+)').findall(url4Play)
#                    url12= url12[0].replace("embedplay","https://fb.sfplayer.net/getLinkStreamMd5")
#                    url2x2 = OpenURL(url12)
#                    url3x2 = re.compile('(https.+?)"').findall(url2x2)
#                   url3x2= url3x2[0]
#                    if legenda3:
#                        legenda3 = legenda3[0]
#                        if not "http" in legenda3:
#                            legenda3= legenda3.replace("sub=","https://sub.sfplayer.net/subdata/").replace("à","%C3%A0").replace("é","%C3%A9").replace("ó","%C3%B3").replace("ô","%C3%B4").replace("ã","%C3%A3").replace("ç","%C3%A7").replace("í","%C3%AD")
#                       PlayUrl(name, url3x2, iconimage, info, sub = legenda3)
#                    else:
#                        PlayUrl(name, url3x2, iconimage, info)
		except:
			xbmcgui.Dialog().ok('Play XD', 'Filme não encontrado')
			sys.exit()
# ----------------- Fim Superflix
# ----------------- Inicio Superflix
def ListSerieSF(): #401:
	pagina = "0" if not cPageserSF else cPageserSF
	if int(pagina) > 0:
		AddDir("[COLOR blue][B]<< Pagina Anterior ["+ str( int(pagina) ) +"][/B][/COLOR]", pagina , 120 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Previous-icon.png", isFolder=False, background="cPageserSF")
	y= int(pagina)*4
	for x in range(0, 4):
		try:
			y +=1
			l = OpenURL("http://www.superflix.net/assistir-series-online/page/"+str(y)+"/")
			link = re.compile('<section class="section movies">(.+?)class="page-link current').findall(l)
			match = re.compile('<h2 class="entry-title">([^\"].+?)<.+?src="([^\"].+?)".+?class.+?class="\w+">([^\"].+?)<.+?Série.{1,52}h.+?"(.+?)"').findall(link[0])
			if match:
				for name2, img2, year2, url2 in match:
					img2 = img2.replace("w185", 'original').replace("https:", '').replace("w220_and_h330_face", 'original').replace("-185x278", "")
					name2 = name2.replace('&#8217;','’').replace('&#8211;','–').replace('&#038;','&').replace('&#8216;','‘').replace('&#8220;','“').replace('&#8221;','”').replace('&#8230;','…')
					AddDir(name2+" ("+year2+")", url2, 402, "http:"+img2, "http:"+img2,isFolder=True,IsPlayable=False)
		except:
			pass
	AddDir("[COLOR blue][B]Proxima Pagina >> ["+ str( int(pagina) + 2) +"][/B][/COLOR]", pagina , 110 ,"http://icons.iconarchive.com/icons/iconsmind/outline/256/Next-2-2-icon.png", isFolder=False, background="cPageserSF")
def ListTempSF(): #402
	l = OpenURL(url).replace("\n","").replace("\r","")
	m = re.compile('drp choose-season">.+?href="(.+?)".+?ne">(.+?)<').findall(l)
	for cont2, temp2 in m:
		AddDir("Temporada "+ temp2, cont2, 403, iconimage, iconimage, isFolder=True)
def ListEpiSF(): #403
	l = OpenURL(url).replace("\n","").replace("\r","")
	epis = re.compile('"num-epi">(.+?)<.+?href="(.+?)"').findall(l)
	for E,url2 in epis:
		AddDir("Episódio "+E,url2, 406, iconimage, iconimage, isFolder=False, IsPlayable=True)
def PlaySSFS(): #406
	try:
		i=0
		link = OpenURL(url).replace("</span><span>","").replace("SuperFlix - Nacional","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("- Full HD","").replace("- HD 720p","").replace("SuperFlix - Dublado","[COLOR springgreen][B]Dublado[/B][/COLOR]").replace("SuperFlix - Legendado","[COLOR red][B]Legendado[/B][/COLOR]").replace("- HD","").replace("- SD","")
		m = re.compile("href='\/\/.+?=(.+?)'").findall(link)
		m2 = re.compile('class="server">(.+?)<').findall(link)
		if m:
			legenda = re.compile('subdata..([^\"]+)').findall(url)
			listar=[]
			listal=[]
			for url3 in m:
				if "SuperFliX" in m2[i] or "SuperFlix FB" in m2[i] or "OK.RU" in m2[i] or "OpenLoad" in m2[i] or "Mega" in m2[i] or "Ok" in m2[i] or "The Vid" in m2[i] or "Vid.To" in m2[i] or "Alta" in m2[i]: False
				else:
					listal.append(url3)
					listar.append(m2[i].replace("</span>",""))
				i+=1
			if len(listal) <1:
				xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado')
				sys.exit(int(sys.argv[1]))
			d = xbmcgui.Dialog().select("Selecione a resolução", listar)
			if d!= -1:
				url2 = re.sub(' ', '%20', listal[d] )
				hexd = codecs.decode(url2, "hex_codec").decode('utf-8')
				url3Play = OpenURL(hexd.replace("#038;",""))
				url4Play = re.compile('(https.+?")').findall(url3Play)
				url4Play= url4Play[0]
                
				if 'http' in url4Play:
					urlxx = re.compile('x.html.(.+?)"').findall(url4Play)
					urlxx = urlxx[0]
					legenda = re.compile('sub=(.+?srt)').findall(url4Play)
					url1 = re.compile('(id=.+?\w+)').findall(urlxx)
					inver = re.compile('id=(\w+)').findall(urlxx)
					url1 = url1[0].replace("id=", "https://lbsuper.sfplayer.net/playlist/") + "/1590191456752"
					url2 = requests.get(url1)
					url3x = re.compile('x([^\"]\w+)\s(\/.+?m3u8)').findall(url2.text)
					url3x.reverse()
					listar=[]
					listal=[]
					for res, link in url3x:
						listal.append(link)
						listar.append(res.replace("1080","[COLOR springgreen][B]HD[/B][/COLOR]").replace("360","[COLOR crimson][B]SD[/B][/COLOR]").replace("720","[COLOR springgreen][B]HD[/B][/COLOR]").replace("480","[COLOR crimson][B]SD[/B][/COLOR]"))
					if len(listal) <1:
						xbmcgui.Dialog().ok('Play XD', 'Erro, video não encontrado, tente outro servidor')
						sys.exit(int(sys.argv[1]))
					d = xbmcgui.Dialog().select("Selecione a resolução", listar)
					if d!= -1:
						url2x = re.sub(' ', '%20', listal[d] )
						url3 = url2x.replace("/hls/", "https://lbsuper.sfplayer.net/hls/").replace(".m3u8", "")
						url4 = requests.get(url3)
						url4 = url4.text
						inverter = inver[0]
						invertida = ''.join(palavra[::-1] for palavra in inverter.split())
						url7 = "https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=" + invertida + "&url=https"
						server = re.compile('-0.html.msKey=m(\w+)').findall(url4)
                    	#url8 = url4.replace('://', '%3A%2F%2F').replace('/', '%2F').replace('.png', '').replace('?', '%3F').replace('=','%3D').replace('https', url7).replace('lbsuper.sfplayer.net','s'+server[0]+'.sfslave.com')
						url8 = url4.replace('://', '%3A%2F%2F').replace('/', '%2F').replace('.png', '').replace('?', '%3F').replace('=','%3D').replace('https', url7).replace('lbsuper.sfplayer.net','s1.sfslave.com')
						arquivo = open(cachefolder + "movies.m3u8", "w+")
						arquivo.write(url8)
						arquivo.close()
						x1 = randrange(300)
						x = str(x1)
						session = ftplib.FTP('files.000webhost.com','unlikely-terms','gladiston')
						file = open(cachefolder + "movies.m3u8",'rb')
						session.storbinary('STOR /public_html/Cacheflix/movies'+x+'.m3u8', file)
						file.close()                      
						session.quit()
						if legenda:
							for legenda2 in legenda:
								legenda3 = urllib.parse.quote(legenda2)
								legenda4 = "https://sub.sfplayer.net/subdata/" + legenda3
								PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info, sub=legenda4)
						else:
								PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info)
					else:
						sys.exit()
#                if 'www.superflix.net' in url4Play:
 #                   urlxx = re.compile('html.(.+?)"').findall(url4Play)
 #                   urlxx = urlxx[0]
 #                   inverter1 = urlxx
 #                   invertida1 = ''.join(palavra[::-1] for palavra in inverter1.split())
 #                   hexd = codecs.decode(invertida1, "hex_codec").decode('utf-8')
 #                   legenda = re.compile('sub=(.+?srt)').findall(hexd)
 #                   url1 = re.compile('(id=.+?\w+)').findall(hexd)
 #                   url1= url1[0].replace("id=","https://lbsuper.sfplayer.net/playlist/") + "/1590191456752"
 #                   url2 = OpenURL(url1)
 #                   url3 = re.compile('EXTM3U\s.+\s.+\s.+\s(.+?m3u8)').findall(url2)
 #                   url3= url3[0].replace("/hls/","https://lbsuper.sfplayer.net/hls/").replace(".m3u8","")
  #                  url4 = OpenURL(url3)
  #                  url6 = re.compile('playlist.(\w+)').findall(url1)
 #                   url6 = url6[0]
 #                   inverter = url6
 #                   invertida = ''.join(palavra[::-1] for palavra in inverter.split())
 #                   url7 = "https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container="+invertida+"&url=https"
 #                   url8 =url4.replace('://','%3A%2F%2F').replace('/','%2F').replace('.png','').replace('?','%3F').replace('=','%3D').replace('https',url7)
 #                   arquivo = open(cachefolder + "movies.m3u8", "w+")
 #                   arquivo.write(url8)
 #                   arquivo.close()
  #                  x1 = randrange(300)
  #                  x = str(x1)
 #                   session = ftplib.FTP('files.000webhost.com','unlikely-terms','gladiston')
  #                  file = open(cachefolder + "movies.m3u8",'rb')
  #                  session.storbinary('STOR /public_html/Cacheflix/movies'+x+'.m3u8', file)
  #                  file.close()                      
 #                   session.quit()
 #                   if legenda:
 #                       legenda = legenda[0]
  #                      legenda2 = urllib.parse.quote(legenda)
 #                       if not "http" in legenda:
 #                           legenda3 = "https://sub.sfplayer.net/subdata/"
 #                           legenda4 = legenda3 + legenda2
 #                       PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info, sub=legenda4)
 #                   else:
 #                       PlayUrl(name, "https://unlikely-terms.000webhostapp.com/Cacheflix/movies"+x+".m3u8|Referer=https://s5.sfslave.com/", iconimage, info)
#
 #               elif 'xxxxxxxxx' in url4Play:
 #                   legenda3 = re.compile('vl(.+?)"').findall(url4Play)
 #                   url12 = re.compile('net\/(.+?\w+.\w+)').findall(url4Play)
 #                   url12= url12[0].replace("embedplay","https://fb.sfplayer.net/getLinkStreamMd5")
#                    url2x2 = OpenURL(url12)
 ##                   url3x2 = re.compile('(https.+?)"').findall(url2x2)
 #                   url3x2= url3x2[0]
 #                   if legenda3:
 #                       legenda3 = legenda3[0]
 ##                       if not "http" in legenda3:
  #                          legenda3= legenda3.replace("sub=","https://sub.sfplayer.net/subdata/").replace("à","%C3%A0").replace("é","%C3%A9").replace("ó","%C3%B3").replace("ô","%C3%B4").replace("ã","%C3%A3").replace("ç","%C3%A7").replace("í","%C3%AD")
 #                      PlayUrl(name, url3x2, iconimage, info, sub = legenda3)
 #                   else:
#                        PlayUrl(name, url3x2, iconimage, info)
	except:
		xbmcgui.Dialog().ok('Play XD', 'Episódio não encontrado')
		sys.exit()
def GetChoice(choiceTitle, fileTitle, urlTitle, choiceFile, choiceUrl, choiceNone=None, fileType=1, fileMask=None, defaultText=""):
	choice = ''
	choiceList = [getLocaleString(choiceFile), getLocaleString(choiceUrl)]
	if choiceNone is not None:
		choiceList = [getLocaleString(choiceNone)] + choiceList
	method = GetSourceLocation(getLocaleString(choiceTitle), choiceList)	
	if choiceNone is None and method == 0 or choiceNone is not None and method == 1:
		if not defaultText.startswith('http'):
			defaultText = ""
		choice = GetKeyboardText(getLocaleString(fileTitle), defaultText).strip().decode("utf-8")
	elif choiceNone is None and method == 1 or choiceNone is not None and method == 2:
		if defaultText.startswith('http'):
			defaultText = ""
		choice = xbmcgui.Dialog().browse(fileType, getLocaleString(urlTitle), 'files', fileMask, False, False, defaultText).decode("utf-8")
	return choice			
def PlayUrl(name, url, iconimage=None, info='', sub='', subs='', metah=''):
	#try:
	#	f = OpenURL("http://sstor.000webhostapp.com/imdb/i.txt")
	#	if "year" in f:
	#		metah = eval(f)
	#		f = OpenURL("http://sstor.000webhostapp.com/imdb/deleta.php")
	#except:
	#	pass
	if ";;;" in background:
		b = background.split(";;;")
		if "RC" in b[2]:
			AddFavorites(b[0], iconimage, b[1], "95", "historic.txt")
		elif "NC" in b[2]:
			AddFavorites(b[0], iconimage, b[1], "78", "historic.txt")
		elif "MM" in b[2]:
			AddFavorites(b[0], iconimage, b[1], "181", "historic.txt")
	#url = re.sub('\.mp4$', '.mp4?play', url)
	#url = common.getFinalUrl(url)
	xbmc.log('--- Playing "{0}". {1}'.format(name, url), 2)
	#ST(url)
	listitem = xbmcgui.ListItem(path=url)
	if cSIPTV:
		urllib2.urlopen( "http://cubeplay.000webhostapp.com/siptv/index.php?u="+cSIPTV+"&"+url ).read()
	if metah:
		listitem.setInfo(type="Video", infoLabels=metah)
	else:
		listitem.setInfo(type="Video", infoLabels={"mediatype": "video", "Title": name, "Plot": info })
	if sub!='':
		listitem.setSubtitles([sub])
	if subs!='':
		try:
			listitem.setSubtitles(subs)
		except:
			pass
	if iconimage is not None:
		try:
			listitem.setArt({'thumb' : iconimage})
		except:
			listitem.setThumbnailImage(iconimage)
	xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, listitem)
    
def PlayFFmpeg(name, url, iconimage=None, info=''):
	if ffmpeg_opt == "true":
		li = xbmcgui.ListItem(name, path=url)
		li.setArt({"icon": iconimage, "thumb": iconimage})
		li.setInfo(type='video', infoLabels={'Title': name, 'plot': info })
		li.setContentLookup(True)
		li.setProperty('inputstream', 'inputstream.ffmpegdirect')
		#li.setProperty('inputstream.ffmpegdirect.open_mode', 'ffmpeg')
		li.setProperty('inputstream.ffmpegdirect.is_realtime_stream', 'true')
		#li.setProperty('inputstream.ffmpegdirect.is_catchup_stream', 'catchup')
		li.setProperty('inputstream.ffmpegdirect.stream_mode', 'timeshift')
		li.setProperty('inputstream.ffmpegdirect.manifest_type','hls')
		#li.setProperty('inputstream.ffmpegdirect.catchup_terminates', 'true')
		#li.setProperty('inputstream.ffmpegdirect.catchup_granularity', '60')
		#li.setProperty('inputstream.ffmpegdirect.default_url',url)
		#li.setProperty('inputstream.ffmpegdirect.catchup_url_format_string',url)
		#li.setProperty('inputstream.ffmpegdirect.catchup_buffer_start_time','1')
		#li.setProperty('inputstream.ffmpegdirect.catchup_buffer_offset','1')
		#li.setProperty('inputstream.ffmpegdirect.default_programme_duration','3600')
		xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, li)
	else:
		li = xbmcgui.ListItem(name, path=url)
		li.setArt({"icon": iconimage, "thumb": iconimage})
		li.setInfo(type='video', infoLabels={'Title': name, 'plot': info })
		xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, li)

def AddDir(name, url, mode, iconimage='', logos='', index=-1, move=0, isFolder=True, IsPlayable=False, background=None, legdub=None, cacheMin='0', info='', metah=''):
	urlParams = {'name': name, 'url': url, 'mode': mode, 'iconimage': iconimage, 'logos': logos, 'cache': cacheMin, 'info': info, 'background': background, 'legdub': legdub, 'metah': metah}
	liz = xbmcgui.ListItem(name )
	if metah:
		liz.setInfo(type="Video", infoLabels=metah)
		liz.setArt({"thumb": metah['cover_url'], "poster": metah['cover_url'], "banner": metah['cover_url'], "fanart": metah['backdrop_url'] })
	else:
		liz.setInfo(type="Video", infoLabels={ "Title": name, "Plot": info })
		#liz.setProperty("Fanart_Image", logos)
		liz.setArt({"icon":iconimage ,"poster": iconimage, "banner": logos, "fanart": logos, "thumb": iconimage })
	#listMode = 21 # Lists
	if IsPlayable:
		liz.setProperty('IsPlayable', 'true')
	items = []
	if mode == 1 or mode == 2:
		items = []
	elif mode== 61 and info=="":
		liz.addContextMenuItems(items = [("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=31&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	elif mode== 78:
		liz.addContextMenuItems(items = [("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=72&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	elif (mode== 95 or mode== 96) and "imdb" in cadulto:
		liz.addContextMenuItems(items = [("IMDB", 'XBMC.RunPlugin({0}?url={1}&mode=350&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name))),
		("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=93&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	elif mode== 95 or mode== 96:
		liz.addContextMenuItems(items = [("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=93&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	elif mode== 135:
		liz.addContextMenuItems(items = [("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=131&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	elif mode== 171:
		liz.addContextMenuItems(items = [("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=175&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	elif mode== 181:
		liz.addContextMenuItems(items = [("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=185&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	elif mode== 191:
		liz.addContextMenuItems(items = [("Add ao fav. do Cube Play", 'XBMC.RunPlugin({0}?url={1}&mode=195&iconimage={2}&name={3})'.format(sys.argv[0], quote_plus(url), quote_plus(iconimage), quote_plus(name)))])
	if info=="Filmes Favoritos":
		items = [("Remover dos favoritos", 'XBMC.RunPlugin({0}?index={1}&mode=333)'.format(sys.argv[0], index)),
		(getLocaleString(30030), 'XBMC.RunPlugin({0}?index={1}&mode={2}&move=-1)'.format(sys.argv[0], index, 338)),
		(getLocaleString(30031), 'XBMC.RunPlugin({0}?index={1}&mode={2}&move=1)'.format(sys.argv[0], index, 338)),
		(getLocaleString(30032), 'XBMC.RunPlugin({0}?index={1}&mode={2}&move=0)'.format(sys.argv[0], index, 338))]
		liz.addContextMenuItems(items)
	if info=="Séries Favoritas":
		items = [("Remover dos favoritos", 'XBMC.RunPlugin({0}?index={1}&mode=334)'.format(sys.argv[0], index)),
		(getLocaleString(30030), 'XBMC.RunPlugin({0}?index={1}&mode={2}&move=-1)'.format(sys.argv[0], index, 339)),
		(getLocaleString(30031), 'XBMC.RunPlugin({0}?index={1}&mode={2}&move=1)'.format(sys.argv[0], index, 339)),
		(getLocaleString(30032), 'XBMC.RunPlugin({0}?index={1}&mode={2}&move=0)'.format(sys.argv[0], index, 339))]
		liz.addContextMenuItems(items)
	if mode == 10:
		urlParams['index'] = index
	u = '{0}?{1}'.format(sys.argv[0], urllib.parse.urlencode(urlParams))
	xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=u, listitem=liz, isFolder=isFolder)
def ReadList(fileName):
	import shutil
	try:
		with open(fileName, 'r') as handle:
			content = json.load(handle)
	except Exception as ex:
		xbmc.log(str(ex), 5)
		if os.path.isfile(fileName):
			shutil.copyfile(fileName, "{0}_bak.txt".format(fileName[:fileName.rfind('.')]))
			xbmc.executebuiltin('Notification({0}, NOT read file: "{1}". \nBackup createad, {2}, {3})'.format(AddonName, os.path.basename(fileName), 5000, icon))
		content=[]
	return content
def SaveList(filname, chList):
	try:
		with io.open(filname, 'w', encoding='utf-8') as handle:
			handle.write(unicode(json.dumps(chList, indent=4, ensure_ascii=False)))
		success = True
	except Exception as ex:
		xbmc.log(str(ex), 3)
		success = False
	return success
def GetKeyboardText(title = "", defaultText = ""):
	keyboard = xbmc.Keyboard(defaultText, title)
	keyboard.doModal()
	text = "" if not keyboard.isConfirmed() else keyboard.getText()
	return text

def GetSourceLocation(title, chList):
	dialog = xbmcgui.Dialog()
	answer = dialog.select(title, chList)
	return answer
def Imdbreturn(n):
	n = urllib.parse.quote(n)
	urlq = OpenURL("https://api.themoviedb.org/3/search/movie?api_key=bd6af17904b638d482df1a924f1eabb4&query="+n+"&language=pt-BR")
	jq = json.loads(urlq)
	return jq
def base10_2_n_string(d, n):
    s, t = "", d
    if t == 0: return "0"
    while t > 0:
        v = t % n
        s += (chr(v + 87), str(v))[v <= 9]
        t = int(t / n)
    return s[::-1]


def eval_unpack(p, a, c, k, e, d):
    a = c if not isinstance(a, int) else a

    def e(c):
        c = int(c)
        if c < a:
            pad = ''
        else:
            pad = e(c / a)
        c = c % a
        if c > 35:
            return pad + chr(c + 29)
        else:
            return pad + base10_2_n_string(c, 36)

    while c:
        c -= 1
        d[e(c)] = k[c] or e(c)

    return re.sub("\w+", lambda e: d.get(e.group()) or e.group(), p)


def get_unpack_args_from_eval_str(data):
    code = "v = " + data
    m = types.ModuleType('unpacked')
    exec(code, m.__dict__)
    return m.v


def unpack(eval_text):
    text = re.search("return.*?}(\(.*\))\)", eval_text)
    v = get_unpack_args_from_eval_str(text.group(1))
    return eval_unpack(*v)
def AddImdb(url): #350
	urlm= re.compile("_.+?html$").findall(url)
	urlm = urlm[0]
	dir = re.sub('GladistonXD', 'GladistonXDMeta', 'addon_data_dir' )
	file = os.path.join(dir, 'imdb.txt')
	file2 = os.path.join(dir, Cat+'\\imdb'+cPage+'.txt')
	favList = ReadList(file)
	for item in favList:
		if item["url"].lower() == urlm.decode("utf-8").lower():
			if "imdb" in file:
				xbmc.executebuiltin("Notification({0}, '{1}' {2}, 5000, {3})".format(AddonName, name, getLocaleString(30011), icon))
			return	
	q = re.sub(' ?\((Dub|Leg|Nac).+', '', name )
	q = re.sub('\[\/?COLOR.{0,10}\]', '', q )
	#q = "xmen"
	nomes=[]
	Ano=""
	Vote = 0.0
	jq = Imdbreturn(q)
	for x in jq['results']:
		try:
			rd = re.sub('\d{2}(\d{2})\-.+', r'\1', x['release_date'] )
			nomes.append("["+ str(rd) + "] " +x['title'].encode("utf-8") + " [COLOR blue]("+x['original_title'].encode("utf-8")+")[/COLOR]")
		except:
			nomes.append("[xx]"+x['title'].encode("utf-8") + " [COLOR blue]("+x['original_title'].encode("utf-8")+")[/COLOR]")
	s=-1
	if nomes:
		s = xbmcgui.Dialog().select(name, nomes)
	if s == -1:
		nomes=[]
		d = xbmcgui.Dialog().input("TheMovie id")
		if re.compile("\w").findall(d):
			jq = Imdbreturn(d)
			if jq['total_results']==0:
				xbmc.executebuiltin("Notification({0}, {1}, 5000, {2})".format(AddonName, "Nada encontrado".encode("utf-8"), icon))
				return
			for x in jq['results']:
				try:
					rd = re.sub('\d{2}(\d{2})\-.+', r'\1', x['release_date'] )
					nomes.append("["+ str(rd) + "] " +x['title'].encode("utf-8") + " [COLOR blue]("+x['original_title'].encode("utf-8")+")[/COLOR]")
				except:
					nomes.append("[xx]"+x['title'].encode("utf-8") + " [COLOR blue]("+x['original_title'].encode("utf-8")+")[/COLOR]")
			if nomes:
				s = xbmcgui.Dialog().select(name, nomes)
			if s == -1:
				return
		else:
			#d = "503314"
			if not d:
				return
			url2 = OpenURL("https://api.themoviedb.org/3/movie/"+d+"?api_key=bd6af17904b638d482df1a924f1eabb4&language=pt-BR")
			j = json.loads(url2)
			url3 = OpenURL("https://api.themoviedb.org/3/movie/"+str(j['id'])+"?api_key=bd6af17904b638d482df1a924f1eabb4&language=en-US")
			j3 = json.loads(url3)
			Nome=j['title']
			Id=d
			Name=j3['title']
			Ano = j['release_date']
			d2 = xbmcgui.Dialog().yesno("Kodi",Nome+" ?")
			if not d2:
				return
			jq = ""
	if jq:
		Nome=jq['results'][s]['title']
		Id=str(jq['results'][s]['id'])
		Name=jq['results'][s]['original_title']
		Ano = jq['results'][s]['release_date']
		Vote = jq['results'][s]['vote_average']
		if jq['results'][s]['original_language'] != 'en':
			url2 = OpenURL("https://api.themoviedb.org/3/movie/"+str(jq['results'][s]['id'])+"?api_key=bd6af17904b638d482df1a924f1eabb4&language=en-US")
			j2 = json.loads(url2)
			Name=j2['title']
	Ano = re.sub('\-.+', '', Ano )
	chList = []
	for channel in chList:
		if channel["name"].lower() == name.decode("utf-8").lower():
			urlm = channel["url"].encode("utf-8")
			break
	data = {"url": urlm.decode("utf-8"), "id": Id, "nome": Nome, "name": Name, "ano": Ano, "vote": Vote}
	#ST(data)
	#return
	favList.append(data)
	SaveList(file, favList)
	SaveList(file2, favList)
	if "imdb" in file:
		xbmc.executebuiltin("Notification({0}, '{1}' {2}, 5000, {3})".format(AddonName, Nome.encode("utf-8"), getLocaleString(30012), icon))

def AddFavorites(url, iconimage, name, mode, file):
	file = os.path.join('addon_data_dir', file)
	favList = ReadList(file)
	for item in favList:
		if item["url"].lower() == url.decode("utf-8").lower():
			if "favorites" in file:
				xbmc.executebuiltin("Notification({0}, '{1}' {2}, 5000, {3})".format(AddonName, name, getLocaleString(30011), icon))
			return
	chList = []	
	for channel in chList:
		if channel["name"].lower() == name.decode("utf-8").lower():
			url = channel["url"].encode("utf-8")
			iconimage = channel["image"].encode("utf-8")
			break
	if not iconimage:
		iconimage = ""
	data = {"url": url.decode("utf-8"), "image": iconimage.decode("utf-8"), "name": name.decode("utf-8"), "mode": mode}
	favList.append(data)
	SaveList(file, favList)
	if "favorites" in file:
		xbmc.executebuiltin("Notification({0}, '{1}' {2}, 5000, {3})".format(AddonName, name, getLocaleString(30012), icon))
	
def ListFavorites(file, info):
	file = os.path.join('addon_data_dir', file)
	chList = ReadList(file)
	i = 0
	for channel in chList:
		if cPlayD == "true" and channel["mode"]=="95":
			AddDir(channel["name"].encode("utf-8"), channel["url"].encode("utf-8"), "96", channel["image"].encode("utf-8"), channel["image"].encode("utf-8"), isFolder=False, IsPlayable=True, info=info)
		else:
			AddDir(channel["name"].encode("utf-8"), channel["url"].encode("utf-8"), channel["mode"], channel["image"].encode("utf-8"), channel["image"].encode("utf-8"), index=i, isFolder=True, IsPlayable=False, info=info)
		i += 1
		
def ListHistoric(file, info):
	file = os.path.join('addon_data_dir', file)
	chList = ReadList(file)
	for channel in reversed(chList):
		if cPlayD == "true" and channel["mode"]=="95":
			AddDir(channel["name"].encode("utf-8"), channel["url"].encode("utf-8"), "96", channel["image"].encode("utf-8"), channel["image"].encode("utf-8"), isFolder=False, IsPlayable=True, info=info)
		else:
			AddDir(channel["name"].encode("utf-8"), channel["url"].encode("utf-8"), channel["mode"], channel["image"].encode("utf-8"), channel["image"].encode("utf-8"), isFolder=True, IsPlayable=False, info=info)
		
def RemoveFromLists(index, listFile):
	chList = ReadList(listFile) 
	if index < 0 or index >= len(chList):
		return
	del chList[index]
	SaveList(listFile, chList)
	xbmc.executebuiltin("Container.Refresh()")

def AddNewFavorite(file):
	file = os.path.join('addon_data_dir', file)
	chName = GetKeyboardText(getLocaleString(30014))
	if len(chName) < 1:
		return
	chUrl = GetKeyboardText(getLocaleString(30015))
	if len(chUrl) < 1:
		return
	image = GetChoice(30023, 30023, 30023, 30024, 30025, 30021, fileType=2)
		
	favList = ReadList(file)
	for item in favList:
		if item["url"].lower() == chUrl.decode("utf-8").lower():
			xbmc.executebuiltin("Notification({0}, '{1}' {2}, 5000, {3})".format(AddonName, chName, getLocaleString(30011), icon))
			return			
	data = {"url": chUrl.decode("utf-8"), "image": image, "name": chName.decode("utf-8")}	
	favList.append(data)
	if SaveList(file, favList):
		xbmc.executebuiltin("Container.Refresh()")
	
def MoveInList(index, step, listFile):
	theList = ReadList(listFile)
	if index + step >= len(theList) or index + step < 0:
		return
	if step == 0:
		step = GetIndexFromUser(len(theList), index)
	if step < 0:
		tempList = theList[0:index + step] + [theList[index]] + theList[index + step:index] + theList[index + 1:]
	elif step > 0:
		tempList = theList[0:index] + theList[index +  1:index + 1 + step] + [theList[index]] + theList[index + 1 + step:]
	else:
		return
	SaveList(listFile, tempList)
	xbmc.executebuiltin("Container.Refresh()")

def GetNumFromUser(title, defaultt=''):
	dialog = xbmcgui.Dialog()
	choice = dialog.input(title, defaultt=defaultt, type=xbmcgui.INPUT_NUMERIC)
	return None if choice == '' else int(choice)

def GetIndexFromUser(listLen, index):
	dialog = xbmcgui.Dialog()
	location = GetNumFromUser('{0} (1-{1})'.format(getLocaleString(30033), listLen))
	return 0 if location is None or location > listLen or location <= 0 else location - 1 - index

def Refresh():
	xbmc.executebuiltin("Container.Refresh()")

def TogglePrevious(url, background):
	Addon.setSetting(background, str(int(url) - 1) )
	xbmc.executebuiltin("Container.Refresh()")

def ToggleNext(url, background):
	Addon.setSetting(background, str(int(url) + 1) )
	xbmc.executebuiltin("Container.Refresh()")

def getmd5(t):
	value_altered = ''.join(chr(ord(letter)-1) for letter in t)
	return value_altered

def CheckUpdate(msg): #200
	try:
		uversao = requests.get( "https://raw.githubusercontent.com/GladistonXD/Play-XD/master/version.txt")
		uversao2 = re.compile('(.+)').findall(uversao.text)
		uversao2 = uversao2[0]
		if uversao2 != Versao:
			Update()
			xbmc.executebuiltin("Container.Refresh()")
		elif msg==True:
			xbmcgui.Dialog().ok('Play XD', "O addon já esta na última versao: "+Versao+"\nAs atualizações normalmente são automáticas\nUse esse recurso caso não esteja recebendo automaticamente")
			xbmc.executebuiltin("Container.Refresh()")
	except:
		if msg==True:
			xbmcgui.Dialog().ok('Play XD', "Não foi possível checar")

def Update(): #futura atualização automatica
	try:
		fonte = requests.get("https://raw.githubusercontent.com/GladistonXD/Play-XD/master/default.txt", allow_redirects=True)
		if fonte:
			file = open(addonDir+"default.py", "wb").write(fonte.content)
		fonte1 = requests.get("https://raw.githubusercontent.com/GladistonXD/Play-XD/master/resources/settings.txt", allow_redirects=True)
		if fonte1:
			file = open(addonDir+"/resources/settings.xml", "wb").write(fonte1.content)
		fonte2 = requests.get("https://raw.githubusercontent.com/GladistonXD/Play-XD/master/addon.txt", allow_redirects=True)
		if fonte2:
			file = open(addonDir+"addon.xml", "wb").write(fonte2.content)
		'''fonte3 = requests.get("https://raw.githubusercontent.com/GladistonXD/Filmes-2017/master/ffmpegdirect.txt", allow_redirects=True)
		if fonte3:
			try:
				Path = xbmcvfs.translatePath('special://home/addons/inputstream.ffmpegdirect/resources/')
				py = os.path.join(Path, "settings.xml")
				file = open(py, "wb").write(fonte3.content)
			except:
				pass'''
		xbmc.executebuiltin("Notification({0}, {1}, 9000, {2})".format(AddonName, "Atualizando o addon. Aguarde um momento!", icon))
		xbmc.sleep(2000)
	except:
		xbmcgui.Dialog().ok('Play XD', "Ocorreu um erro, tente novamente mais tarde")

def ST(x):
	x = str(x)
	file = open(addonDir+"study.txt", "w")
	file.write(x)
	file.close()

params =  urllib.parse.parse_qs( sys.argv[2][1:] ) 
url = params.get('url',[None])[0]
logos = params.get('logos',[None])[0]
name = params.get('name',[None])[0]
iconimage = params.get('iconimage',[None])[0]
cache = int(params.get('cache', '0')[0]) if params.get('cache') else 0
index = int(params.get('index', '-1')[0]) if params.get('index') else -1
move = int(params.get('move', '0')[0]) if params.get('move') else 0
mode = int(params.get('mode', '0')[0]) if params.get('mode') else 0
info = params.get('info',[None])[0]
background = params.get('background',[None])[0]
legdub = params.get('legdub',[None])[0]
metah = params.get('metah',[None])[0]

if mode == 0:
	Categories()
	setViewM()
	#ST(1)
	CheckUpdate(False)

elif mode == -1: 
	MCanais()
	setViewM()
elif mode == -2: MFilmes()
elif mode == -3: MSeries()
elif mode == 3 or mode == 32:
	PlayUrl(name, url, iconimage, info)
elif mode == 301:
	ListFavorites('favoritesf.txt', "Filmes Favoritos")
	setViewM()
elif mode==4:
    xbmcaddon.Addon().openSettings()
elif mode == 5:
	PlayFFmpeg(name, url, iconimage, info)
elif mode == 302:
	ListFavorites('favoritess.txt', "Séries Favoritas")
	setViewM()
elif mode == 305:
	ListHistoric('historic.txt', "Historico")
	setViewM()
elif mode == 31: 
	AddFavorites(url, iconimage, name, "61", 'favoritess.txt')
elif mode == 72: 
	AddFavorites(url, iconimage, name, "78", 'favoritesf.txt')
elif mode == 93: 
	AddFavorites(url, iconimage, name, "95", 'favoritesf.txt')
elif mode == 131: 
	AddFavorites(url, iconimage, name, "135", 'favoritess.txt')
elif mode == 175: 
	AddFavorites(url, iconimage, name, "171", 'favoritesf.txt')
elif mode == 185: 
	AddFavorites(url, iconimage, name, "181", 'favoritesf.txt')
elif mode == 195: 
	AddFavorites(url, iconimage, name, "191", 'favoritess.txt')
elif mode == 196: 
	AddFavorites(url, iconimage, name, "602", 'favoritess2.txt')
elif mode == 333:
	RemoveFromLists(index, favfilmesFile)
elif mode == 338:
	MoveInList(index, move, favfilmesFile)
elif mode == 334:
	RemoveFromLists(index, favseriesFile)
elif mode == 339:
	MoveInList(index, move, favseriesFile)
elif mode == 38:
	dialog = xbmcgui.Dialog()
	ret = dialog.yesno('Play XD', 'Deseja mesmo deletar todos os filmes favoritos?')
	if ret:
		DelFile(favfilmesFile)
		sys.exit()
elif mode == 39:
	dialog = xbmcgui.Dialog()
	ret = dialog.yesno('Play XD', 'Deseja mesmo deletar todos os seriados favoritos?')
	if ret:
		DelFile(favseriesFile)
		sys.exit()
elif mode == 40:
	dialog = xbmcgui.Dialog()
	ret = dialog.yesno('Play XD', 'Deseja mesmo deletar todo o historico?')
	if ret:
		DelFile(historicFile)
		sys.exit()
elif mode == 50:
	Refresh()
elif mode == 60:
	Series()
	setViewM()
elif mode == 61:
	ListSNC(background)
	setViewM()
elif mode == 62:
	PlayS()
	setViewM()
elif mode == 71:
	MoviesNC()
	setViewM()
elif mode == 600:
	MenuVizer()
	setViewM()
elif mode == 601:
	MenuVizer2()
	setViewM()
elif mode == 602:
	PlayVizer()
	setViewM()        
elif mode == 530:
	FilmesHD()
	setViewM()
elif mode == 531:
	FilmesHDmenu()
	setViewM()
elif mode == 532:
	FilmesHDPlay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 533:
	Filmesviatorrent()
	setViewM()
elif mode == 534:
	Filmesviatorrentmenu1()
	setViewM()
elif mode == 535:
	Filmesviatorrentmenu2()
	setViewM()
elif mode == 536:
	Filmesviatorrentplay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 78:
	ListMoviesNC()
	setViewM()
elif mode == 79:
	PlayMNC()
	setViewM()
elif mode == 80:
	Generos()
elif mode == 500:
	Generos2()
elif mode == 81:
	CategoryOrdem2(url)
elif mode == 90:
	MoviesRCD()
	setViewM()
elif mode == 91:
	MoviesRCL()
	setViewM()
elif mode == 92:
	MoviesRCN()
	setViewM()
elif mode == 95:
	PlayMRC()
	setViewM()
elif mode == 96:
	PlayMRC2()
elif mode == 100:
	TVRC()
	setViewM()
elif mode == 101:
	PlayTVRC()
elif mode == 102:
	TVCB(url)
	setViewM()
elif mode == 103:
	PlayTVCB()
	xbmc.executebuiltin('PlayerControl(RepeatOne)') 
elif mode == 104:
	TVCB2(url)
	setViewM()
elif mode == 107:
	TVCB3()
	setViewM()    
elif mode == 108:
	TVCB4()
	setViewM()    
elif mode == 109:
	TVCB4PLAY()
elif mode == 111:
	TVCB5()
	setViewM()  
elif mode == 112:
	TVCB5PLAY()
	xbmc.executebuiltin('PlayerControl(RepeatOne)')
elif mode == 113:
	POY1()
	setViewM()  
elif mode == 114:
	POY1PLAY()
	xbmc.executebuiltin('PlayerControl(RepeatOne)')
elif mode == 115:
	FOX1()
	setViewM()  
elif mode == 116:
	FOXPLAY()
	xbmc.executebuiltin('PlayerControl(RepeatOne)') 
elif mode == 106:
	RadioTV(url)
	setViewM()    
elif mode == 105:
	Addon.setSetting("cEPG", "1")
	xbmc.executebuiltin("Container.Refresh()")
elif mode == 110:
	ToggleNext(url, background)
elif mode == 120:
	TogglePrevious(url, background)
elif mode == 130:
	SeriesRC("series","cPageser")
	setViewM()
elif mode == 135:
	TemporadasRC(background)
	setViewM()
elif mode == 133:
	PlaySRC()
	setViewM()
elif mode == 139:
	AllEpisodiosRC()
	setViewM()
elif mode == 140:
	SeriesRC("animes","cPageani")
	setViewM()
elif mode == 150:
	SeriesRC("desenhos","cPagedes")
	setViewM()
elif mode == 160:
	Busca()
	setViewS()
elif mode == 170:
	MoviesFO()
	setViewM()
elif mode == 1711:
	GetMFO1()
	setViewM()
elif mode == 172:
	PlayMFO1()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 173:
	comandoseries()
	setViewM()
elif mode == 174:
	comandomenu1()
	setViewM()
elif mode == 177:
	comandomenu2()
	setViewM()
elif mode == 178:
	comandoplay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 85:
	GenerosFO()
elif mode == 86:
	GenerosPR()
elif mode == 87:
	FilmesRED()
	setViewM()
elif mode == 88:
	FilmesRED2()
	setViewM()
elif mode == 89:
	SeriesRED()
	setViewM()
elif mode == 97:
	SeriesRED2()
	setViewM()
elif mode == 98:
	RedOndemand()
	setViewM()
elif mode == 180:
	ListFilmeMM("cPageMMf")
	setViewM()
elif mode == 181:
	OpenLinkMM()
	setViewM()
elif mode == 182:
	PlayLinkMM()
elif mode == 184:
	ListFilmeLancMM()
	setViewM()
elif mode == 186:
	MoviesPR()
	setViewM()
elif mode == 187:
	MenuPR()
	setViewM()
elif mode == 188:
	PlayPR()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 189:
	GenerosMM()
elif mode == 190:
	ListSerieMM()
	setViewM()
elif mode == 191:
	ListSMM(background)
	setViewM()
elif mode == 192:
	ListEpiMM(background)
	setViewM()
elif mode == 194:
	PlaySMM()
elif mode == 200:
	CheckUpdate(True)
elif mode == 210:
	ListGO()
	setViewM()
elif mode == 310:
	ListGOL()
	setViewM()    
elif mode == 211:
	ListTop()
	setViewM()
elif mode == 213:
	ListPlay()
	setViewM()    
elif mode == 311:
	ListTopL()
	setViewM()    
elif mode == 212:
	PlayTVCB2()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 214:
	PlayTVCB3()
	xbmc.executebuiltin('PlayerControl(RepeatOne)')  
elif mode == 1212:
	PlayTVB3()      
elif mode == 219:
	GenerosGO()
elif mode == 230:
	GenerosFl()
elif mode == 231: 
	GenerosQUE1()
elif mode == 232: 
	GenerosBIZ()
elif mode == 233: 
	GenerosMEG()
elif mode == 234: 
	GenerosFHD()
elif mode == 235: 
	GenerosVZ()
elif mode == 236: 
	GenerosAS()
elif mode == 237: 
	GenerosMX()       
elif mode == 220:
	Filmes96()
elif mode == 221:
	MoviesRCR() ###
	setViewM()
elif mode == 229:
	PlayFilmes96()
elif mode == 250:
	Pirateserie()
	setViewM()
elif mode == 251:
	Piratemenu()
	setViewM()
elif mode == 252:
	Piratemenu2()
	setViewM()
elif mode == 253:
	Pirateplay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 350:
	AddImdb(url)
elif mode == 411:
	ListMovieSF()
	setViewM()
elif mode == 405:
	PlaySSF()
	setViewM()
elif mode == 406:
	PlaySSFS()
elif mode == 407:
	Play2SFS()
elif mode == 401:
	ListSerieSF()
	setViewM()
elif mode == 402:
	ListTempSF()
	setViewM()
elif mode == 403:
	ListEpiSF()
	setViewM()
elif mode == 430:
	ListSerieQF()
	setViewM()
elif mode == 431:
	ListTempQF()
	setViewM()
elif mode == 432:
	ListEpiQF()
	setViewM()
elif mode == 433:
	PlayEpiQF()
	setViewM()
elif mode == 450:
	SerieMenuBZ()
	setViewM() 
elif mode == 451:
	SerieMenuBZ2()
	setViewM()
elif mode == 452:
	SeriePlayBZ()
	setViewM()   
elif mode == 453:
	SeriePlayBZ2()
	setViewM()
elif mode == 454:
	TuaSerieMenu()
	setViewM()
elif mode == 455:
	TuaSerieMenu2()
	setViewM()
elif mode == 456:
	TuaSerieMenu3()
	setViewM()
elif mode == 457:
	TuaSeriePlayer()
	setViewM()
elif mode == 458:
	AssistirMenu()
	setViewM()
elif mode == 459:
	AssistirMenu2()
	setViewM()
elif mode == 460:
	AssistirMenu3()
	setViewM()
elif mode == 461:
	AssistirSeries()
	setViewM()
elif mode == 462:
	AssistirSeries2()
	setViewM()
elif mode == 463:
	AssistirSeries3()
	setViewM()
elif mode == 464:
	AssistirSeriesPlay()
elif mode == 465:
	MaxMenu()
	setViewM()
elif mode == 466:
	MaxMenu2()
	setViewM()
elif mode == 467:
	MaxPlay()
	setViewM()
elif mode == 468:
	MaxMenuSerie()
	setViewM()
elif mode == 469:
	MaxMenuSerie2()
	setViewM()
elif mode == 470:
	MaxMenuSerie3()
	setViewM()
elif mode == 471:
	MaxMenuSeriePlay()
	setViewM()
elif mode == 472:
	MaxMenuSeriePlay2()
	setViewM()           
elif mode == 510:
	QuerofilmeshdMENU()
	setViewM()    
elif mode == 511:
	QuerofilmeshdLista()
	setViewM()
elif mode == 512:
	QuerofilmeshdPlay()
	setViewM()
elif mode == 513:
	QuerofilmeshdPlay2()
	setViewM()    
elif mode == 514:
	AssistirbizMENU()
	setViewM()    
elif mode == 517: 
	AssistirbizMENU2()
	setViewM()    
elif mode == 515:
	AssistirbizLista()
	setViewM()
elif mode == 516:
	AssistirbizPlay()
	setViewM()
elif mode == 518:
	Comandotomenu()
	setViewM()
elif mode == 519:
	Comandotomenu2()
	setViewM()
elif mode == 520:
	Comandotomenu3()
	setViewM()
elif mode == 521:
	Comandotoplayer()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 522:
	Comandotoserie()
	setViewM()
elif mode == 523:
	Comandotoserie2()
	setViewM()
elif mode == 524:
	Comandotoserie3()
	setViewM()
elif mode == 525:
	Comandotoserieplay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 526:
	DosTorrents()
	setViewM()
elif mode == 527:
	DosTorrents2()
	setViewM()
elif mode == 528:
	DosTorrentsPlay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 529:
	DosTorrentsSerie()
	setViewM()
elif mode == 538:
	DosTorrentsSerie1()
	setViewM()
elif mode == 539:
	DosTorrentsSerie2()
	setViewM()
elif mode == 540:
	DosTorrentsSeriePlay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 5261:
	DosTorrents1()
	setViewM()
elif mode == 5271:
	DosTorrents21()
	setViewM()
elif mode == 5281:
	DosTorrentsPlay1()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode == 5291:
	DosTorrentsSerie11()
	setViewM()
elif mode == 5381:
	DosTorrentsSerie111()
	setViewM()
elif mode == 5391:
	DosTorrentsSerie21()
	setViewM()
elif mode == 5401:
	DosTorrentsSeriePlay1()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode==541:
    xbmcaddon.Addon().openSettings()
    xbmc.executebuiltin("Container.Refresh()")
elif mode==542:
	Paylistplay()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode==543:
	Paylistplay2()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
elif mode==544:
	Paylistplay3()
	xbmc.executebuiltin('PlayerControl(RepeatOne)')
elif mode==545:
	Paylistplay4()
	xbmc.executebuiltin('PlayerControl(RepeatOff)')
xbmcplugin.endOfDirectory(int(sys.argv[1]))
#checkintegrity25852
